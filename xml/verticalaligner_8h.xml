<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="verticalaligner_8h" kind="file" language="C++">
    <compoundname>verticalaligner.h</compoundname>
    <includes refid="object_8h" local="yes">object.h</includes>
    <includedby refid="system_8h" local="yes">system.h</includedby>
    <incdepgraph>
      <node id="13">
        <label>list</label>
      </node>
      <node id="10">
        <label>boundingbox.h</label>
        <link refid="boundingbox_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="5">
        <label>iterator</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="9">
        <label>attmodule.h</label>
      </node>
      <node id="15">
        <label>tuple</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
      <node id="17">
        <label>attdef.h</label>
      </node>
      <node id="1">
        <label>verticalaligner.h</label>
        <link refid="verticalaligner_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>object.h</label>
        <link refid="object_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>cstdlib</label>
      </node>
      <node id="8">
        <label>attclasses.h</label>
      </node>
      <node id="14">
        <label>set</label>
      </node>
      <node id="12">
        <label>algorithm</label>
      </node>
      <node id="11">
        <label>vrvdef.h</label>
        <link refid="vrvdef_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>system.h</label>
        <link refid="system_8h_source"/>
      </node>
      <node id="1">
        <label>verticalaligner.h</label>
        <link refid="verticalaligner_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classvrv_1_1_system_aligner" prot="public">vrv::SystemAligner</innerclass>
    <innerclass refid="classvrv_1_1_staff_alignment" prot="public">vrv::StaffAlignment</innerclass>
    <innernamespace refid="namespacevrv">vrv</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Name:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verticalaligner.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Laurent<sp/>Pugin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>2013</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Authors<sp/>and<sp/>others.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__VRV_VERTICAL_ALIGNER_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__VRV_VERTICAL_ALIGNER_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vrv<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AttSpacing;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FloatingObject;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ScoreDef;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StaffAlignment;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StaffDef;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">System;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SystemAligner;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SystemAligner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classvrv_1_1_system_aligner" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvrv_1_1_system_aligner" kindref="compound">SystemAligner</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36" refid="classvrv_1_1_system_aligner_1a024f36eb64e0d6adf31217b55ba72b8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_system_aligner_1a024f36eb64e0d6adf31217b55ba72b8e" kindref="member">SpacingType</ref><sp/>{<sp/><ref refid="classvrv_1_1_system" kindref="compound">System</ref>,<sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref>,<sp/>Brace,<sp/>Bracket,<sp/>None<sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructors<sp/>and<sp/>destructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_system_aligner" kindref="compound">SystemAligner</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classvrv_1_1_system_aligner" kindref="compound">SystemAligner</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_system_aligner_1a5cff4faf2592ead0b44a85e7ddbff183" kindref="member">IsSupportedChild</ref>(<ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classvrv_1_1_system_aligner_1af4900d0bffe36fafb8196c6d00790c40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_system_aligner_1af4900d0bffe36fafb8196c6d00790c40" kindref="member">CopyChildren</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_system_aligner_1aa5961fa9bf6c71d9871c33f263d5faa8" kindref="member">Reset</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_staff_alignment" kindref="compound">StaffAlignment</ref><sp/>*<ref refid="classvrv_1_1_system_aligner_1ad387ce393950bc8c70281293188265a1" kindref="member">GetBottomAlignment</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_bottomAlignment;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StaffAlignment<sp/>*<ref refid="classvrv_1_1_system_aligner_1ad387ce393950bc8c70281293188265a1" kindref="member">GetBottomAlignment</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_bottomAlignment;<sp/>}</highlight></codeline>
<codeline lineno="65"></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>StaffAlignment<sp/>*<ref refid="classvrv_1_1_system_aligner_1a69d83e1ae9c5fa09bcd39defad713c9c" kindref="member">GetStaffAlignment</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/>Staff<sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_system_aligner_1a34a0912ed2b22d610fe6eed155b2d0b5" kindref="member">ReorderBy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;staffNs);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>StaffAlignment<sp/>*<ref refid="classvrv_1_1_system_aligner_1a4c9fd8a96d8c6a1eaac690739c2c733b" kindref="member">GetStaffAlignmentForStaffN</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>staffN);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StaffAlignment<sp/>*<ref refid="classvrv_1_1_system_aligner_1a4c9fd8a96d8c6a1eaac690739c2c733b" kindref="member">GetStaffAlignmentForStaffN</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>staffN)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>System<sp/>*<ref refid="classvrv_1_1_system_aligner_1a5c916b5e3799ce149199694090b2f1ce" kindref="member">GetSystem</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_system_aligner_1af23ac88b55c4dfcd4e7d038e1eef6196" kindref="member">FindAllPositionerPointingTo</ref>(ArrayOfFloatingPositioners<sp/>*positioners,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FloatingObject<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_system_aligner_1acb530599a3c9d0ba25439d795b3764ce" kindref="member">FindAllIntersectionPoints</ref>(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SegmentedLine<sp/>&amp;line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundingBox<sp/>&amp;boundingBox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ClassId&gt;<sp/>&amp;classIds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_system_aligner_1ac94f769510d0d5fa8b6228f13fc5cc58" kindref="member">GetOverflowAbove</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scoreDefClef<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetOverflowBelow(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scoreDefClef<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_system_aligner_1a32f679e2e06155cf335d6118b234a3ce" kindref="member">GetJustificationSum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_system_aligner_1a118f13b660eb1e8ccd5dc4b59a4045d4" kindref="member">SetSpacing</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScoreDef<sp/>*scoreDef);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functors<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctorCode<sp/><ref refid="classvrv_1_1_system_aligner_1a1ced1f1680bed0d29b695f4d812fa3ae" kindref="member">Accept</ref>(Functor<sp/>&amp;functor)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctorCode<sp/><ref refid="classvrv_1_1_system_aligner_1a1ced1f1680bed0d29b695f4d812fa3ae" kindref="member">Accept</ref>(ConstFunctor<sp/>&amp;functor)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctorCode<sp/>AcceptEnd(Functor<sp/>&amp;functor)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctorCode<sp/>AcceptEnd(ConstFunctor<sp/>&amp;functor)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_system_aligner_1a024f36eb64e0d6adf31217b55ba72b8e" kindref="member">SpacingType</ref><sp/>GetAboveSpacingType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*staff);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_system_aligner_1a024f36eb64e0d6adf31217b55ba72b8e" kindref="member">SpacingType</ref><sp/>CalculateSpacingAbove(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StaffDef<sp/>*staffDef)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>StaffAlignment<sp/>*m_bottomAlignment;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>SpacingType&gt;<sp/>m_spacingTypes;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>System<sp/>*m_system;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>StaffAlignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classvrv_1_1_staff_alignment" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvrv_1_1_staff_alignment" kindref="compound">StaffAlignment</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_staff_alignment" kindref="compound">StaffAlignment</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classvrv_1_1_staff_alignment" kindref="compound">StaffAlignment</ref>();</highlight></codeline>
<codeline lineno="182"></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetYRel(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yRel);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetYRel()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_yRel;<sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddVerseN(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verseN);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetVerseCount(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>collapse)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetVersePosition(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verseN,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>collapse)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff_alignment_1a2509f2cdd8ef0e40f10aaca7ec29c814" kindref="member">SetCurrentFloatingPositioner</ref>(<ref refid="classvrv_1_1_floating_object" kindref="compound">FloatingObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*objectX,<sp/><ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*objectY,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>spanningType);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classvrv_1_1_staff_alignment_1ad1449015f86a39bf97ae7851ad6ca3d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayOfFloatingPositioners<sp/>&amp;<ref refid="classvrv_1_1_staff_alignment_1ad1449015f86a39bf97ae7851ad6ca3d7" kindref="member">GetFloatingPositioners</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_floatingPositioners;<sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_floating_positioner" kindref="compound">FloatingPositioner</ref><sp/>*<ref refid="classvrv_1_1_staff_alignment_1aebb16e118406ae41bf59ef1730842a78" kindref="member">FindFirstFloatingPositioner</ref>(ClassId<sp/>classId);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_floating_positioner" kindref="compound">FloatingPositioner</ref><sp/>*<ref refid="classvrv_1_1_staff_alignment_1aebb16e118406ae41bf59ef1730842a78" kindref="member">FindFirstFloatingPositioner</ref>(ClassId<sp/>classId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayOfFloatingPositioners<sp/><ref refid="classvrv_1_1_staff_alignment_1a45c9254734f194b8625f2ecb835d2dbc" kindref="member">FindAllFloatingPositioners</ref>(ClassId<sp/>classId);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_floating_positioner" kindref="compound">FloatingPositioner</ref><sp/>*<ref refid="classvrv_1_1_staff_alignment_1acfcff2df0f692d09057b8801c5a446a0" kindref="member">GetCorrespFloatingPositioner</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_floating_object" kindref="compound">FloatingObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_floating_positioner" kindref="compound">FloatingPositioner</ref><sp/>*<ref refid="classvrv_1_1_staff_alignment_1acfcff2df0f692d09057b8801c5a446a0" kindref="member">GetCorrespFloatingPositioner</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_floating_object" kindref="compound">FloatingObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*GetStaff()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_staff;<sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*GetStaff()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_staff;<sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetStaff(Staff<sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc,<sp/><ref refid="classvrv_1_1_system_aligner_1a024f36eb64e0d6adf31217b55ba72b8e" kindref="member">SystemAligner::SpacingType</ref><sp/>spacingType);</highlight></codeline>
<codeline lineno="245"></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>System<sp/>*GetParentSystem()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_system;<sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>System<sp/>*GetParentSystem()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_system;<sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetParentSystem(System<sp/>*system);</highlight></codeline>
<codeline lineno="254"></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff_alignment_1a7fa1759557d1353566cfdcd56de6edf7" kindref="member">GetStaffSize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AttSpacing<sp/>*<ref refid="classvrv_1_1_staff_alignment_1a8df2e2be909bfb617bf1cd3b1b278c2d" kindref="member">GetAttSpacing</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CalcOverflowAbove(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundingBox<sp/>*box)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CalcOverflowBelow(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundingBox<sp/>*box)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetMinimumSpacing(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CalcMinimumRequiredSpacing(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_system_aligner_1a024f36eb64e0d6adf31217b55ba72b8e" kindref="member">SystemAligner::SpacingType</ref><sp/>GetSpacingType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_spacingType;<sp/>}</highlight></codeline>
<codeline lineno="283"></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetOverflowAbove(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overflowAbove);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetOverflowAbove()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_overflowAbove;<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetOverflowBelow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overflowBottom);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetOverflowBelow()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_overflowBelow;<sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetOverlap(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overlap);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetOverlap()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_overlap;<sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRequestedSpaceAbove(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>space);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetRequestedSpaceAbove()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_requestedSpaceAbove;<sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRequestedSpaceBelow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>space);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetRequestedSpaceBelow()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_requestedSpaceBelow;<sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRequestedSpacing(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spacing)<sp/>{<sp/>m_requestedSpacing<sp/>=<sp/>spacing;<sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetRequestedSpacing()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_requestedSpacing;<sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetStaffHeight()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_staffHeight;<sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetScoreDefClefOverflowAbove(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overflowAbove)<sp/>{<sp/>m_scoreDefClefOverflowAbove<sp/>=<sp/>overflowAbove;<sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetScoreDefClefOverflowAbove()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_scoreDefClefOverflowAbove;<sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetScoreDefClefOverflowBelow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overflowBelow)<sp/>{<sp/>m_scoreDefClefOverflowBelow<sp/>=<sp/>overflowBelow;<sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetScoreDefClefOverflowBelow()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_scoreDefClefOverflowBelow;<sp/>}</highlight></codeline>
<codeline lineno="306"></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetJustificationFactor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddBBoxAbove(BoundingBox<sp/>*box)<sp/>{<sp/>m_overflowAboveBBoxes.push_back(box);<sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddBBoxBelow(BoundingBox<sp/>*box)<sp/>{<sp/>m_overflowBelowBBoxes.push_back(box);<sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearBBoxesAbove()<sp/>{<sp/>m_overflowAboveBBoxes.clear();<sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearBBoxesBelow()<sp/>{<sp/>m_overflowBelowBBoxes.clear();<sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayOfBoundingBoxes<sp/>&amp;GetBBoxesAboveForModification()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_overflowAboveBBoxes;<sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayOfBoundingBoxes<sp/>&amp;GetBBoxesBelowForModification()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_overflowBelowBBoxes;<sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayOfBoundingBoxes<sp/>&amp;GetBBoxesAbove()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_overflowAboveBBoxes;<sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayOfBoundingBoxes<sp/>&amp;GetBBoxesBelow()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_overflowBelowBBoxes;<sp/>}</highlight></codeline>
<codeline lineno="327"></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff_alignment_1ab0c857aa5a9a585e4107edd6ef102f3e" kindref="member">ClearPositioners</ref>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff_alignment_1ae760f3785a9a3cdaa22a693272adfaee" kindref="member">SortPositioners</ref>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff_alignment_1ac0fccd1747b5d662103b9cdcf64edeed" kindref="member">FindAllIntersectionPoints</ref>(</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SegmentedLine<sp/>&amp;line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundingBox<sp/>&amp;boundingBox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ClassId&gt;<sp/>&amp;classIds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff_alignment_1ae57c01e1034bef16c5101e479709c9bc" kindref="member">AdjustBracketGroupSpacing</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StaffAlignment<sp/>*previous,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spacing);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functors<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctorCode<sp/><ref refid="classvrv_1_1_staff_alignment_1a709857a0c1dff9f5014292c5afa9e617" kindref="member">Accept</ref>(Functor<sp/>&amp;functor)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctorCode<sp/><ref refid="classvrv_1_1_staff_alignment_1a709857a0c1dff9f5014292c5afa9e617" kindref="member">Accept</ref>(ConstFunctor<sp/>&amp;functor)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctorCode<sp/>AcceptEnd(Functor<sp/>&amp;functor)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctorCode<sp/>AcceptEnd(ConstFunctor<sp/>&amp;functor)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetMinimumStaffSpacing(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AttSpacing<sp/>*attSpacing)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInBracketGroup(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFirst)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_system_aligner_1a024f36eb64e0d6adf31217b55ba72b8e" kindref="member">SystemAligner::SpacingType</ref><sp/>m_spacingType<sp/>=<sp/>SystemAligner::SpacingType::None;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayOfFloatingPositioners<sp/>m_floatingPositioners;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_floatingPositionersSorted;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>Staff<sp/>*m_staff;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>System<sp/>*m_system;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_yRel;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;int&gt;<sp/>m_verseNs;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_overflowAbove;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_overflowBelow;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_overlap;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_requestedSpaceAbove;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_requestedSpaceBelow;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_requestedSpacing;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_staffHeight;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_scoreDefClefOverflowAbove;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_scoreDefClefOverflowBelow;</highlight></codeline>
<codeline lineno="423"></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayOfBoundingBoxes<sp/>m_overflowAboveBBoxes;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayOfBoundingBoxes<sp/>m_overflowBelowBBoxes;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">};</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vrv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/verovio/verovio/include/vrv/verticalaligner.h"/>
  </compounddef>
</doxygen>
