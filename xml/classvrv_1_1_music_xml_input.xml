<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvrv_1_1_music_xml_input" kind="class" language="C++" prot="public">
    <compoundname>vrv::MusicXmlInput</compoundname>
    <basecompoundref refid="classvrv_1_1_input" prot="public" virt="non-virtual">vrv::Input</basecompoundref>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a46b8f8c24e987e316fb6b9821a5e2331" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::MusicXmlInput::ReadMusicXmlPart</definition>
        <argsstring>(pugi::xml_node node, Section *section, int nbStaves, int staffOffset)</argsstring>
        <name>ReadMusicXmlPart</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_section" kindref="compound">Section</ref> *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbStaves</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="189" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a32c0eaa3bd0264ec29988235d4969fef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::MusicXmlInput::ReadMusicXmlMeasure</definition>
        <argsstring>(pugi::xml_node node, Section *section, Measure *measure, int nbStaves, int staffOffset, int index)</argsstring>
        <name>ReadMusicXmlMeasure</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_section" kindref="compound">Section</ref> *</type>
          <declname>section</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbStaves</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffOffset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="190" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a78e9d0a4ae7b48acb32a5bf25dcb5171" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlAttributes</definition>
        <argsstring>(pugi::xml_node, Section *section, Measure *measure, const std::string &amp;measureNum)</argsstring>
        <name>ReadMusicXmlAttributes</name>
        <param>
          <type>pugi::xml_node</type>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_section" kindref="compound">Section</ref> *</type>
          <declname>section</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>measureNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="204" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a224e1f6def5159db23f69db7fdbc19fa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlBackup</definition>
        <argsstring>(pugi::xml_node, Measure *measure, const std::string &amp;measureNum)</argsstring>
        <name>ReadMusicXmlBackup</name>
        <param>
          <type>pugi::xml_node</type>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>measureNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="205" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a3e5a353c3cb462ee87372957f077ba0c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlBarLine</definition>
        <argsstring>(pugi::xml_node, Measure *measure, const std::string &amp;measureNum)</argsstring>
        <name>ReadMusicXmlBarLine</name>
        <param>
          <type>pugi::xml_node</type>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>measureNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="206" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a3be4a93d5706507d88e3e1f150a50bdf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlDirection</definition>
        <argsstring>(pugi::xml_node, Measure *measure, const std::string &amp;measureNum, const int staffOffset)</argsstring>
        <name>ReadMusicXmlDirection</name>
        <param>
          <type>pugi::xml_node</type>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>measureNum</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>staffOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="207" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a3fd3306147f32be7f03953e3f247a463" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlFigures</definition>
        <argsstring>(pugi::xml_node, Measure *measure, const std::string &amp;measureNum)</argsstring>
        <name>ReadMusicXmlFigures</name>
        <param>
          <type>pugi::xml_node</type>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>measureNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="208" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a0a1fcff59c478d9dde27e1c2c6ecc66a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlForward</definition>
        <argsstring>(pugi::xml_node, Measure *measure, const std::string &amp;measureNum)</argsstring>
        <name>ReadMusicXmlForward</name>
        <param>
          <type>pugi::xml_node</type>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>measureNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="209" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a36d0dc466de976a70e82dd28b3b2579d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlHarmony</definition>
        <argsstring>(pugi::xml_node, Measure *measure, const std::string &amp;measureNum)</argsstring>
        <name>ReadMusicXmlHarmony</name>
        <param>
          <type>pugi::xml_node</type>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>measureNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="210" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1afa1759eadd036edd1cfc41368cbcc71a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlNote</definition>
        <argsstring>(pugi::xml_node, Measure *measure, const std::string &amp;measureNum, const int staffOffset, Section *section)</argsstring>
        <name>ReadMusicXmlNote</name>
        <param>
          <type>pugi::xml_node</type>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>measureNum</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>staffOffset</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_section" kindref="compound">Section</ref> *</type>
          <declname>section</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="211" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a396019a3ffda20c80ca434f31da1cfeb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlPrint</definition>
        <argsstring>(pugi::xml_node, Section *section)</argsstring>
        <name>ReadMusicXmlPrint</name>
        <param>
          <type>pugi::xml_node</type>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_section" kindref="compound">Section</ref> *</type>
          <declname>section</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="213" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a8d7e8c441790b0dc8dcca2fef43b78da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlBeamsAndTuplets</definition>
        <argsstring>(const pugi::xml_node &amp;node, Layer *layer, bool isChord)</argsstring>
        <name>ReadMusicXmlBeamsAndTuplets</name>
        <param>
          <type>const pugi::xml_node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isChord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="214" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a434f2cb69c8521e5c9fe843357ec9793" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlTupletStart</definition>
        <argsstring>(const pugi::xml_node &amp;node, const pugi::xml_node &amp;tupletStart, Layer *layer)</argsstring>
        <name>ReadMusicXmlTupletStart</name>
        <param>
          <type>const pugi::xml_node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const pugi::xml_node &amp;</type>
          <declname>tupletStart</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="215" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a93d4e8e72021a096f44db602516ec8c6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlBeamStart</definition>
        <argsstring>(const pugi::xml_node &amp;node, const pugi::xml_node &amp;beamStart, Layer *layer)</argsstring>
        <name>ReadMusicXmlBeamStart</name>
        <param>
          <type>const pugi::xml_node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const pugi::xml_node &amp;</type>
          <declname>beamStart</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="216" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a8d6b6f8c4e7c1dbc9a735aa25c4857e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXMLMeterSig</definition>
        <argsstring>(const pugi::xml_node &amp;node, Object *parent)</argsstring>
        <name>ReadMusicXMLMeterSig</name>
        <param>
          <type>const pugi::xml_node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="217" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a817f21d5d70c8b392f075c7ca7fbd985" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlTies</definition>
        <argsstring>(const pugi::xml_node &amp;node, Layer *layer, Note *note, const std::string &amp;measureNum)</argsstring>
        <name>ReadMusicXmlTies</name>
        <param>
          <type>const pugi::xml_node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>measureNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="218" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a0deacf511fab7716b8d806270b6f28e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::InsertClefIntoObject</definition>
        <argsstring>(Object *layerElement, Clef *clef, Layer *layer, int scoreOnset, bool insertAfter)</argsstring>
        <name>InsertClefIntoObject</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>layerElement</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_clef" kindref="compound">Clef</ref> *</type>
          <declname>clef</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scoreOnset</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>insertAfter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="241" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1aa30dd6f547d30452965cb6cc26bfe062" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::InsertClefIntoObject</definition>
        <argsstring>(Object *parent, Clef *clef, Object *relevantChild, bool insertAfter)</argsstring>
        <name>InsertClefIntoObject</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_clef" kindref="compound">Clef</ref> *</type>
          <declname>clef</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>relevantChild</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>insertAfter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="242" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a05e65052fe668cdc92b1b724b7d2a31d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_clef" kindref="compound">Clef</ref> *</type>
        <definition>Clef* vrv::MusicXmlInput::ConvertClef</definition>
        <argsstring>(const pugi::xml_node &amp;clef)</argsstring>
        <name>ConvertClef</name>
        <param>
          <type>const pugi::xml_node &amp;</type>
          <declname>clef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="277" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a33cdcfefd455718e535176d316b2a68b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_key_sig" kindref="compound">KeySig</ref> *</type>
        <definition>KeySig* vrv::MusicXmlInput::ConvertKey</definition>
        <argsstring>(const pugi::xml_node &amp;key)</argsstring>
        <name>ConvertKey</name>
        <param>
          <type>const pugi::xml_node &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="278" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a76401d3e75b506272e9c73ecf6d436fd" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::MusicXmlInput::HasAttributeWithValue</definition>
        <argsstring>(const pugi::xml_node node, const std::string &amp;attribute, const std::string &amp;value) const</argsstring>
        <name>HasAttributeWithValue</name>
        <param>
          <type>const pugi::xml_node</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="292" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a6a6a01a263e0092c0b7a1630cf65da91" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::MusicXmlInput::IsElement</definition>
        <argsstring>(const pugi::xml_node node, const std::string &amp;name) const</argsstring>
        <name>IsElement</name>
        <param>
          <type>const pugi::xml_node</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="293" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a9c345cec8d3675856c380ea0c9022379" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::MusicXmlInput::HasContentWithValue</definition>
        <argsstring>(const pugi::xml_node node, const std::string &amp;value) const</argsstring>
        <name>HasContentWithValue</name>
        <param>
          <type>const pugi::xml_node</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="294" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a1e821b4981055c6e6cac4c17b6bcdf55" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::MusicXmlInput::NotInEndingStack</definition>
        <argsstring>(std::string const &amp;measureN)</argsstring>
        <name>NotInEndingStack</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>measureN</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="301" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1af50caaafd1ac0db931e9d1f872eb7a60" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::MusicXmlInput::GetContent</definition>
        <argsstring>(const pugi::xml_node node) const</argsstring>
        <name>GetContent</name>
        <param>
          <type>const pugi::xml_node</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="308" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a100fea4bd408f879de6007423ec96b24" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::MusicXmlInput::GetContentOfChild</definition>
        <argsstring>(const pugi::xml_node node, const std::string &amp;child) const</argsstring>
        <name>GetContentOfChild</name>
        <param>
          <type>const pugi::xml_node</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="309" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a5ad86def603d6695716b1bac13187184" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::OpenTie</definition>
        <argsstring>(Note *note, Tie *tie)</argsstring>
        <name>OpenTie</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_tie" kindref="compound">Tie</ref> *</type>
          <declname>tie</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="319" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a330fc2e506889d23a2b78c7b39b8145f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::CloseTie</definition>
        <argsstring>(Note *note)</argsstring>
        <name>CloseTie</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="320" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1aef2d6f8c7a6bea106ff6c4d7ae2f6252" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::OpenSlur</definition>
        <argsstring>(Measure *measure, int number, Slur *slur)</argsstring>
        <name>OpenSlur</name>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref> *</type>
          <declname>slur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="321" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a49508234aa8dcbbbf68cf0a674621e38" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::CloseSlur</definition>
        <argsstring>(Measure *measure, int number, LayerElement *element)</argsstring>
        <name>CloseSlur</name>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="322" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a1723e513370aff33bbd5a08be7ec7e14" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; std::vector&lt; int &gt;, int &gt;</type>
        <definition>std::pair&lt;std::vector&lt;int&gt;, int&gt; vrv::MusicXmlInput::GetMeterSigGrpValues</definition>
        <argsstring>(const pugi::xml_node &amp;node, MeterSigGrp *parent)</argsstring>
        <name>GetMeterSigGrpValues</name>
        <param>
          <type>const pugi::xml_node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_meter_sig_grp" kindref="compound">MeterSigGrp</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="354" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a2511c4232cfe220a0829d566b6669abe" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::MusicXmlInput::GetMrestMeasuresCountBeforeIndex</definition>
        <argsstring>(int index) const</argsstring>
        <name>GetMrestMeasuresCountBeforeIndex</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="362" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a20364c116323dcab9e24858665df79e2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::MusicXmlInput::IsMultirestMeasure</definition>
        <argsstring>(int index) const</argsstring>
        <name>IsMultirestMeasure</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="369" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1aaaa4f3a7c3de4049a3071faa5b7a8c25" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::SetFermataExternalSymbols</definition>
        <argsstring>(Fermata *fermata, const std::string &amp;shape)</argsstring>
        <name>SetFermataExternalSymbols</name>
        <param>
          <type><ref refid="classvrv_1_1_fermata" kindref="compound">Fermata</ref> *</type>
          <declname>fermata</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="376" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a93d8c0a917cf3be62cabd78f0db44690" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ShapeFermata</definition>
        <argsstring>(Fermata *fermata, pugi::xml_node node)</argsstring>
        <name>ShapeFermata</name>
        <param>
          <type><ref refid="classvrv_1_1_fermata" kindref="compound">Fermata</ref> *</type>
          <declname>fermata</declname>
        </param>
        <param>
          <type>pugi::xml_node</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="377" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a60ce6bbcf45e850d2aa92f0400d2ee22" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::MusicXmlInput::GetOrnamentGlyphNumber</definition>
        <argsstring>(int attributes) const</argsstring>
        <name>GetOrnamentGlyphNumber</name>
        <param>
          <type>int</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="384" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a42d543e19376698def9265b35db34593" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::SetChordStaff</definition>
        <argsstring>(Layer *layer)</argsstring>
        <name>SetChordStaff</name>
        <param>
          <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="391" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a346610d34ac7217aad1ddfdcd5b7e6a7" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>data_ACCIDENTAL_WRITTEN</type>
        <definition>static data_ACCIDENTAL_WRITTEN vrv::MusicXmlInput::ConvertAccidentalToAccid</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertAccidentalToAccid</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="398" column="36"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a3b06ca4fa145f821d9138bfb5e376034" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>data_ACCIDENTAL_GESTURAL</type>
        <definition>static data_ACCIDENTAL_GESTURAL vrv::MusicXmlInput::ConvertAlterToAccid</definition>
        <argsstring>(const float value)</argsstring>
        <name>ConvertAlterToAccid</name>
        <param>
          <type>const float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="399" column="37"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1ae6924513006b133ebb87c72dc785a111" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>data_ARTICULATION</type>
        <definition>static data_ARTICULATION vrv::MusicXmlInput::ConvertArticulations</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertArticulations</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="400" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a63ad04d9c43850bbbf4ef6d092e5bae3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>data_BARRENDITION</type>
        <definition>static data_BARRENDITION vrv::MusicXmlInput::ConvertStyleToRend</definition>
        <argsstring>(const std::string &amp;value, const bool repeat)</argsstring>
        <name>ConvertStyleToRend</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>repeat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="401" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a9f1300a933b5b531234f0be02e0a8426" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>data_BOOLEAN</type>
        <definition>static data_BOOLEAN vrv::MusicXmlInput::ConvertWordToBool</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertWordToBool</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="402" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a2858379b11eefe50c9da252ed1ffc43c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>data_DURATION</type>
        <definition>static data_DURATION vrv::MusicXmlInput::ConvertTypeToDur</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertTypeToDur</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="403" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a0e7241f442f5718ab98dc30a6fce5448" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>data_HEADSHAPE</type>
        <definition>static data_HEADSHAPE vrv::MusicXmlInput::ConvertNotehead</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertNotehead</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="404" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1aa261287e35c392aa20b3c743836609f7" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>data_LINESTARTENDSYMBOL</type>
        <definition>static data_LINESTARTENDSYMBOL vrv::MusicXmlInput::ConvertLineEndSymbol</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertLineEndSymbol</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="405" column="36"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a46d5b77231d1326b213099e8bc98942c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>data_MIDIVALUE</type>
        <definition>static data_MIDIVALUE vrv::MusicXmlInput::ConvertDynamicsToMidiVal</definition>
        <argsstring>(const float dynamics)</argsstring>
        <name>ConvertDynamicsToMidiVal</name>
        <param>
          <type>const float</type>
          <declname>dynamics</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="406" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a7952b96bd43e2e91dd12c2ae1313bd46" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>data_PITCHNAME</type>
        <definition>static data_PITCHNAME vrv::MusicXmlInput::ConvertStepToPitchName</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertStepToPitchName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="407" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1ad719befd86f06abd376e3ffe9dd49a06" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>data_TEXTRENDITION</type>
        <definition>static data_TEXTRENDITION vrv::MusicXmlInput::ConvertEnclosure</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertEnclosure</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="408" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a978f8ec1281a4820300215672d3a3a7a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>curvature_CURVEDIR</type>
        <definition>static curvature_CURVEDIR vrv::MusicXmlInput::InferCurvedir</definition>
        <argsstring>(const pugi::xml_node slurOrTie)</argsstring>
        <name>InferCurvedir</name>
        <param>
          <type>const pugi::xml_node</type>
          <declname>slurOrTie</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="409" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a865d89f94fe45219364e7bef94414e3b" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>fermataVis_SHAPE</type>
        <definition>static fermataVis_SHAPE vrv::MusicXmlInput::ConvertFermataShape</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertFermataShape</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="410" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a9104f53db17fabcb5036c5593afd3344" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pedalLog_DIR</type>
        <definition>static pedalLog_DIR vrv::MusicXmlInput::ConvertPedalTypeToDir</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertPedalTypeToDir</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="411" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a6ea5938027ad28bb016ef12693075d09" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tupletVis_NUMFORMAT</type>
        <definition>static tupletVis_NUMFORMAT vrv::MusicXmlInput::ConvertTupletNumberValue</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertTupletNumberValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="412" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1abec993b4e28fdb7d7321592745857818" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>static std::wstring vrv::MusicXmlInput::ConvertTypeToVerovioText</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertTypeToVerovioText</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="413" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1ab1f724ca533564462038616e06b30361" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string vrv::MusicXmlInput::ConvertAlterToSymbol</definition>
        <argsstring>(const std::string &amp;value, bool plusMinus=false)</argsstring>
        <name>ConvertAlterToSymbol</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>plusMinus</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="414" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1aa81ea592262d045a34fa0b889c523fa5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string vrv::MusicXmlInput::ConvertKindToSymbol</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertKindToSymbol</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="415" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1ab21ca10e23b37dfed8860be571fbf70d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string vrv::MusicXmlInput::ConvertKindToText</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertKindToText</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="416" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1af2e1a5c2c54312350ad3f6d4f1a18873" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string vrv::MusicXmlInput::ConvertDegreeToText</definition>
        <argsstring>(const pugi::xml_node harmony)</argsstring>
        <name>ConvertDegreeToText</name>
        <param>
          <type>const pugi::xml_node</type>
          <declname>harmony</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="417" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a8062abef0fad9b19399e64c2d16fc61d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string vrv::MusicXmlInput::ConvertFigureGlyph</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>ConvertFigureGlyph</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="418" column="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a09bee8c1b4cc55fa50994ae27e02284d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::MusicXmlInput::m_octDis</definition>
        <argsstring></argsstring>
        <name>m_octDis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="423" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a0c03c0e5920800dbc6f32de6c264d8e9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::MusicXmlInput::m_mRpt</definition>
        <argsstring></argsstring>
        <name>m_mRpt</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="425" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a70af98ef677e3cbf0c2060fefdfcb0fe" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::MusicXmlInput::m_slash</definition>
        <argsstring></argsstring>
        <name>m_slash</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="427" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a4253bbebaa6faef7d0c026a11c8dd104" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::MusicXmlInput::m_ppq</definition>
        <argsstring></argsstring>
        <name>m_ppq</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="429" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a8057b506a4d7ec7544906f2ac76ce963" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::MusicXmlInput::m_durTotal</definition>
        <argsstring></argsstring>
        <name>m_durTotal</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="431" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1aa0a1b37d46759ff15b47fab8c7f612d0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::MusicXmlInput::m_durFb</definition>
        <argsstring></argsstring>
        <name>m_durFb</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="433" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1ab9f8fbf7dfaa9465429b99926479b2e4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::MusicXmlInput::m_meterCount</definition>
        <argsstring></argsstring>
        <name>m_meterCount</name>
        <initializer>= { 4 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="435" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a9f13a0f0ecd663ce3d0ec0dae234a662" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::MusicXmlInput::m_meterUnit</definition>
        <argsstring></argsstring>
        <name>m_meterUnit</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="436" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a8bd33ebd5f7a23e2e021f923160a49be" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_label" kindref="compound">Label</ref> *</type>
        <definition>Label* vrv::MusicXmlInput::m_label</definition>
        <argsstring></argsstring>
        <name>m_label</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="438" column="11" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1ab0002125d5d57d40af2cff78783345a3" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_label_abbr" kindref="compound">LabelAbbr</ref> *</type>
        <definition>LabelAbbr* vrv::MusicXmlInput::m_labelAbbr</definition>
        <argsstring></argsstring>
        <name>m_labelAbbr</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="439" column="15" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1abc6ef9c3ef0c75a5a96172063fb1cf5b" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_instr_def" kindref="compound">InstrDef</ref> *</type>
        <definition>InstrDef* vrv::MusicXmlInput::m_instrdef</definition>
        <argsstring></argsstring>
        <name>m_instrdef</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="440" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a4f79faf67c9c51ca19398212d68b07e7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vrv::MusicXmlInput::m_ID</definition>
        <argsstring></argsstring>
        <name>m_ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="442" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1ae35ffeeeb609dd8a2d29f8ee57c17eb8" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *, std::vector&lt; <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> * &gt; &gt;</type>
        <definition>std::map&lt;Layer *, std::vector&lt;LayerElement *&gt; &gt; vrv::MusicXmlInput::m_elementStackMap</definition>
        <argsstring></argsstring>
        <name>m_elementStackMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="444" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1ad54af4a288f725239ec2947673dc66ee" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *, int &gt;</type>
        <definition>std::map&lt;Layer *, int&gt; vrv::MusicXmlInput::m_layerEndTimes</definition>
        <argsstring></argsstring>
        <name>m_layerEndTimes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="446" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a6b4ee5b24d3a32b98254e63cafc7a1b9" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *, std::multimap&lt; int, <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> * &gt; &gt;</type>
        <definition>std::map&lt;Layer *, std::multimap&lt;int, LayerElement *&gt; &gt; vrv::MusicXmlInput::m_layerTimes</definition>
        <argsstring></argsstring>
        <name>m_layerTimes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="447" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a0d752c598856b0674654529acf4bcb96" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer* vrv::MusicXmlInput::m_prevLayer</definition>
        <argsstring></argsstring>
        <name>m_prevLayer</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="449" column="11" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1af53f4780b7bb3864beccedc0e31265ff" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer* vrv::MusicXmlInput::m_currentLayer</definition>
        <argsstring></argsstring>
        <name>m_currentLayer</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="451" column="11" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a70ed0f8e963db0db174fea4997d16cc1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::MusicXmlInput::m_isLayerInitialized</definition>
        <argsstring></argsstring>
        <name>m_isLayerInitialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="452" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a0524e91f0263b5f3a383866ee3c3ce4c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref> *, musicxml::OpenSlur &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;Slur *, musicxml::OpenSlur&gt; &gt; vrv::MusicXmlInput::m_slurStack</definition>
        <argsstring></argsstring>
        <name>m_slurStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="454" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1abba02d303cceff3dd6a1e3eb3b9c98de" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> *, musicxml::CloseSlur &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;LayerElement *, musicxml::CloseSlur&gt; &gt; vrv::MusicXmlInput::m_slurStopStack</definition>
        <argsstring></argsstring>
        <name>m_slurStopStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="456" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1af49d1e0cb9a47642b9deafbd6a6b97d4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="classvrv_1_1_tie" kindref="compound">Tie</ref> *, <ref refid="classvrv_1_1_note" kindref="compound">Note</ref> * &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;Tie *, Note *&gt; &gt; vrv::MusicXmlInput::m_tieStack</definition>
        <argsstring></argsstring>
        <name>m_tieStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="458" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a7b477b35471784c8f0265511beac7bf8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classvrv_1_1_note" kindref="compound">Note</ref> * &gt;</type>
        <definition>std::vector&lt;Note *&gt; vrv::MusicXmlInput::m_tieStopStack</definition>
        <argsstring></argsstring>
        <name>m_tieStopStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="460" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1aaac2c3c3c83b808c85fa0dc20110bf8a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="classvrv_1_1_hairpin" kindref="compound">Hairpin</ref> *, musicxml::OpenSpanner &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;Hairpin *, musicxml::OpenSpanner&gt; &gt; vrv::MusicXmlInput::m_hairpinStack</definition>
        <argsstring></argsstring>
        <name>m_hairpinStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="462" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a23eddf8dbce523cce1ff126c9ed2f856" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::tuple&lt; int, double, musicxml::OpenSpanner &gt; &gt;</type>
        <definition>std::vector&lt;std::tuple&lt;int, double, musicxml::OpenSpanner&gt; &gt; vrv::MusicXmlInput::m_hairpinStopStack</definition>
        <argsstring></argsstring>
        <name>m_hairpinStopStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="465" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1ae81a21d760894ccf3806d0858f220ba1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="classvrv_1_1_bracket_span" kindref="compound">BracketSpan</ref> *, musicxml::OpenSpanner &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;BracketSpan *, musicxml::OpenSpanner&gt; &gt; vrv::MusicXmlInput::m_bracketStack</definition>
        <argsstring></argsstring>
        <name>m_bracketStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="466" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a9488e25e70515cb064b889ae9a35ecc4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="classvrv_1_1_trill" kindref="compound">Trill</ref> *, musicxml::OpenSpanner &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;Trill *, musicxml::OpenSpanner&gt; &gt; vrv::MusicXmlInput::m_trillStack</definition>
        <argsstring></argsstring>
        <name>m_trillStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="467" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a905c022904e56d30fdbba8972f196900" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; std::vector&lt; <ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> * &gt;, musicxml::EndingInfo &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;std::vector&lt;Measure *&gt;, musicxml::EndingInfo&gt; &gt; vrv::MusicXmlInput::m_endingStack</definition>
        <argsstring></argsstring>
        <name>m_endingStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="469" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a43b065c93eb2c401cb781a69ff503dcb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="classvrv_1_1_control_element" kindref="compound">ControlElement</ref> *, musicxml::OpenDashes &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;ControlElement *, musicxml::OpenDashes&gt; &gt; vrv::MusicXmlInput::m_openDashesStack</definition>
        <argsstring></argsstring>
        <name>m_openDashesStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="471" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1ad649056fe80cda91233967e0a7f4c831" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classvrv_1_1_dir" kindref="compound">Dir</ref> * &gt;</type>
        <definition>std::vector&lt;Dir *&gt; vrv::MusicXmlInput::m_dirStack</definition>
        <argsstring></argsstring>
        <name>m_dirStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="473" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a496d6f5300f269f61e07b6badbac31b5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classvrv_1_1_dynam" kindref="compound">Dynam</ref> * &gt;</type>
        <definition>std::vector&lt;Dynam *&gt; vrv::MusicXmlInput::m_dynamStack</definition>
        <argsstring></argsstring>
        <name>m_dynamStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="474" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a47bd4af6b0d6512866662cb991106703" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classvrv_1_1_gliss" kindref="compound">Gliss</ref> * &gt;</type>
        <definition>std::vector&lt;Gliss *&gt; vrv::MusicXmlInput::m_glissStack</definition>
        <argsstring></argsstring>
        <name>m_glissStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="475" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a85f4fa488f5c69ce064290feb1a8b7eb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classvrv_1_1_harm" kindref="compound">Harm</ref> * &gt;</type>
        <definition>std::vector&lt;Harm *&gt; vrv::MusicXmlInput::m_harmStack</definition>
        <argsstring></argsstring>
        <name>m_harmStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="476" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1aac6ef17822e9a6114812268a2716c39b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classvrv_1_1_octave" kindref="compound">Octave</ref> * &gt;</type>
        <definition>std::vector&lt;Octave *&gt; vrv::MusicXmlInput::m_octaveStack</definition>
        <argsstring></argsstring>
        <name>m_octaveStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="477" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a6d5452669d83ac4b22ed51370a3dcb10" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classvrv_1_1_pedal" kindref="compound">Pedal</ref> * &gt;</type>
        <definition>std::vector&lt;Pedal *&gt; vrv::MusicXmlInput::m_pedalStack</definition>
        <argsstring></argsstring>
        <name>m_pedalStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="478" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a8cd3495353f5b1b669845211d070c019" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classvrv_1_1_tempo" kindref="compound">Tempo</ref> * &gt;</type>
        <definition>std::vector&lt;Tempo *&gt; vrv::MusicXmlInput::m_tempoStack</definition>
        <argsstring></argsstring>
        <name>m_tempoStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="479" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a4663eab885248d0cf41b975def917d3d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; std::string, <ref refid="classvrv_1_1_control_element" kindref="compound">ControlElement</ref> * &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;std::string, ControlElement *&gt; &gt; vrv::MusicXmlInput::m_controlElements</definition>
        <argsstring></argsstring>
        <name>m_controlElements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="484" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a3df71381adfa40014c5368ecb4519ba5" prot="private" static="no" mutable="no">
        <type>std::queue&lt; musicxml::ClefChange &gt;</type>
        <definition>std::queue&lt;musicxml::ClefChange&gt; vrv::MusicXmlInput::m_clefChangeQueue</definition>
        <argsstring></argsstring>
        <name>m_clefChangeQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="486" column="16" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a78aca75c51a3f824db94cf05486c6837" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="classvrv_1_1_arpeg" kindref="compound">Arpeg</ref> *, musicxml::OpenArpeggio &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;Arpeg *, musicxml::OpenArpeggio&gt; &gt; vrv::MusicXmlInput::m_ArpeggioStack</definition>
        <argsstring></argsstring>
        <name>m_ArpeggioStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="488" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1abab1e77a05342059c7dd29dc68a1b8fb" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *, int &gt;</type>
        <definition>std::map&lt;Measure *, int&gt; vrv::MusicXmlInput::m_measureCounts</definition>
        <argsstring></argsstring>
        <name>m_measureCounts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="490" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_music_xml_input_1a98b9a1c93635bc5d21fea4b74d7c6f86" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, int &gt;</type>
        <definition>std::map&lt;int, int&gt; vrv::MusicXmlInput::m_multiRests</definition>
        <argsstring></argsstring>
        <name>m_multiRests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="492" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1aceb2632ff8c6a962087f8f768f20f355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::MusicXmlInput::MusicXmlInput</definition>
        <argsstring>(Doc *doc)</argsstring>
        <name>MusicXmlInput</name>
        <param>
          <type><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="169" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a43c6dfa399db2476b24a9d36134d2edb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vrv::MusicXmlInput::~MusicXmlInput</definition>
        <argsstring>()</argsstring>
        <name>~MusicXmlInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="170" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a0958a62f484f7427c8bbd341fc2cff6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool vrv::MusicXmlInput::Import</definition>
        <argsstring>(std::string const &amp;musicxml)</argsstring>
        <name>Import</name>
        <reimplements refid="classvrv_1_1_input_1a7a19750d81786d0a71ab4665a16b78e1">Import</reimplements>
        <param>
          <type>std::string const &amp;</type>
          <declname>musicxml</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="172" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a874adcde63341fe513be1700cf7c63b9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::MusicXmlInput::ReadMusicXml</definition>
        <argsstring>(pugi::xml_node root)</argsstring>
        <name>ReadMusicXml</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="178" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a50ee5f2b7099feec8e3ebcbfa4af2bca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ReadMusicXmlTitle</definition>
        <argsstring>(pugi::xml_node title)</argsstring>
        <name>ReadMusicXmlTitle</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="183" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a90f51883d9acbea30e439d664e597dba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::MusicXmlInput::ReadMusicXmlPartAttributesAsStaffDef</definition>
        <argsstring>(pugi::xml_node node, StaffGrp *staffGrp, int staffOffset)</argsstring>
        <name>ReadMusicXmlPartAttributesAsStaffDef</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_staff_grp" kindref="compound">StaffGrp</ref> *</type>
          <declname>staffGrp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="198" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a9271ae23823792da12f8a4d051db7159" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::ProcessClefChangeQueue</definition>
        <argsstring>(Section *section)</argsstring>
        <name>ProcessClefChangeQueue</name>
        <param>
          <type><ref refid="classvrv_1_1_section" kindref="compound">Section</ref> *</type>
          <declname>section</declname>
        </param>
        <briefdescription>
<para>Process all clef change queue and add clefs to corresponding places in the score. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="224" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a3831ba95070ce1c18cfc61d7bc588518" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::AddClefs</definition>
        <argsstring>(Measure *measure, const musicxml::ClefChange &amp;clefChange)</argsstring>
        <name>AddClefs</name>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>const musicxml::ClefChange &amp;</type>
          <declname>clefChange</declname>
        </param>
        <briefdescription>
<para><ref refid="classvrv_1_1_add" kindref="compound">Add</ref> clef changes to all layers of a given measure, staff, and time stamp. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="229" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a808e161183af06d739a53899af1d30b9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::InsertClefToLayer</definition>
        <argsstring>(Staff *staff, Layer *layer, Clef *clef, int scoreOnSet)</argsstring>
        <name>InsertClefToLayer</name>
        <param>
          <type><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_clef" kindref="compound">Clef</ref> *</type>
          <declname>clef</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scoreOnSet</declname>
        </param>
        <briefdescription>
<para><ref refid="classvrv_1_1_add" kindref="compound">Add</ref> clef as layer element to specified layer and #sameas clefs to previous layers, if needed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="234" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a20dea6b4f3e55fe60f26728d00731bb3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::AddMeasure</definition>
        <argsstring>(Section *section, Measure *measure, int i)</argsstring>
        <name>AddMeasure</name>
        <param>
          <type><ref refid="classvrv_1_1_section" kindref="compound">Section</ref> *</type>
          <declname>section</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="250" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a6a6477943252070a302ea05b36868242" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::AddLayerElement</definition>
        <argsstring>(Layer *layer, LayerElement *element, int duration=0)</argsstring>
        <name>AddLayerElement</name>
        <param>
          <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="255" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a9550ddfee9414cfe8861da273562f380" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer* vrv::MusicXmlInput::SelectLayer</definition>
        <argsstring>(pugi::xml_node node, Measure *measure)</argsstring>
        <name>SelectLayer</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="260" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a2de52a9c304e7377fdfdbcb434c048c8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer* vrv::MusicXmlInput::SelectLayer</definition>
        <argsstring>(int staffNb, Measure *measure)</argsstring>
        <name>SelectLayer</name>
        <param>
          <type>int</type>
          <declname>staffNb</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="265" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1aedb8f18c3b08e22ea6281fc70ab25abb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer* vrv::MusicXmlInput::SelectLayer</definition>
        <argsstring>(int layerNb, Staff *staff)</argsstring>
        <name>SelectLayer</name>
        <param>
          <type>int</type>
          <declname>layerNb</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="271" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a5fbe5273544a47af5f1d5ddddb3ed2c6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::RemoveLastFromStack</definition>
        <argsstring>(ClassId classId, Layer *layer)</argsstring>
        <name>RemoveLastFromStack</name>
        <param>
          <type>ClassId</type>
          <declname>classId</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="286" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1af4533a1322673a39fd0b14414cf6baa3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::MusicXmlInput::GetWordsOrDynamicsText</definition>
        <argsstring>(const pugi::xml_node node) const</argsstring>
        <name>GetWordsOrDynamicsText</name>
        <param>
          <type>const pugi::xml_node</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="330" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1af6f715e94a7b6af283630fa6cd660438" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::TextRendition</definition>
        <argsstring>(const pugi::xpath_node_set words, ControlElement *element) const</argsstring>
        <name>TextRendition</name>
        <param>
          <type>const pugi::xpath_node_set</type>
          <declname>words</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_control_element" kindref="compound">ControlElement</ref> *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="331" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a7c5b01443404c494ec846d9f3e48966f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::MusicXmlInput::StyleLabel</definition>
        <argsstring>(pugi::xml_node display)</argsstring>
        <name>StyleLabel</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="332" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a9fde4961d07a159bbc847f0008c94505" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::PrintMetronome</definition>
        <argsstring>(pugi::xml_node metronome, Tempo *tempo)</argsstring>
        <name>PrintMetronome</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>metronome</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_tempo" kindref="compound">Tempo</ref> *</type>
          <declname>tempo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="333" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1af444dbcd16ec5e8b54f45d54f87e581b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::FillSpace</definition>
        <argsstring>(Layer *layer, int dur)</argsstring>
        <name>FillSpace</name>
        <param>
          <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="340" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_music_xml_input_1a9078623e6e2d245160cc7eb4aced6c63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MusicXmlInput::GenerateUuid</definition>
        <argsstring>(pugi::xml_node node)</argsstring>
        <name>GenerateUuid</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="347" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>vrv::Input</label>
        <link refid="classvrv_1_1_input"/>
      </node>
      <node id="1">
        <label>vrv::MusicXmlInput</label>
        <link refid="classvrv_1_1_music_xml_input"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>vrv::Doc</label>
        <link refid="classvrv_1_1_doc"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_expansionMap</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_mdivScoreDef</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>AttMultinumMeasures</label>
      </node>
      <node id="8">
        <label>vrv::ScoreDefElement</label>
        <link refid="classvrv_1_1_score_def_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>AttSystems</label>
      </node>
      <node id="2">
        <label>vrv::Input</label>
        <link refid="classvrv_1_1_input"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_doc</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>AttDistances</label>
      </node>
      <node id="17">
        <label>AttTyped</label>
      </node>
      <node id="5">
        <label>vrv::BoundingBox</label>
        <link refid="classvrv_1_1_bounding_box"/>
      </node>
      <node id="9">
        <label>vrv::ScoreDefInterface</label>
        <link refid="classvrv_1_1_score_def_interface"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>vrv::Interface</label>
        <link refid="classvrv_1_1_interface"/>
      </node>
      <node id="13">
        <label>AttMidiTempo</label>
      </node>
      <node id="20">
        <label>AttEndings</label>
      </node>
      <node id="15">
        <label>AttSpacing</label>
      </node>
      <node id="6">
        <label>vrv::ExpansionMap</label>
        <link refid="classvrv_1_1_expansion_map"/>
      </node>
      <node id="11">
        <label>AttLyricStyle</label>
      </node>
      <node id="7">
        <label>vrv::ScoreDef</label>
        <link refid="classvrv_1_1_score_def"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>AttOptimization</label>
      </node>
      <node id="4">
        <label>vrv::Object</label>
        <link refid="classvrv_1_1_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>AttMeasureNumbers</label>
      </node>
      <node id="18">
        <label>vrv::ObjectListInterface</label>
        <link refid="classvrv_1_1_object_list_interface"/>
      </node>
      <node id="1">
        <label>vrv::MusicXmlInput</label>
        <link refid="classvrv_1_1_music_xml_input"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>AttTimeBase</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" line="166" column="33" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomusxml.h" bodystart="166" bodyend="493"/>
    <listofallmembers>
      <member refid="classvrv_1_1_music_xml_input_1a3831ba95070ce1c18cfc61d7bc588518" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>AddClefs</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a6a6477943252070a302ea05b36868242" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>AddLayerElement</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a20dea6b4f3e55fe60f26728d00731bb3" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>AddMeasure</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a49508234aa8dcbbbf68cf0a674621e38" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>CloseSlur</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a330fc2e506889d23a2b78c7b39b8145f" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>CloseTie</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a346610d34ac7217aad1ddfdcd5b7e6a7" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertAccidentalToAccid</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a3b06ca4fa145f821d9138bfb5e376034" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertAlterToAccid</name></member>
      <member refid="classvrv_1_1_music_xml_input_1ab1f724ca533564462038616e06b30361" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertAlterToSymbol</name></member>
      <member refid="classvrv_1_1_music_xml_input_1ae6924513006b133ebb87c72dc785a111" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertArticulations</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a05e65052fe668cdc92b1b724b7d2a31d" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertClef</name></member>
      <member refid="classvrv_1_1_music_xml_input_1af2e1a5c2c54312350ad3f6d4f1a18873" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertDegreeToText</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a46d5b77231d1326b213099e8bc98942c" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertDynamicsToMidiVal</name></member>
      <member refid="classvrv_1_1_music_xml_input_1ad719befd86f06abd376e3ffe9dd49a06" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertEnclosure</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a865d89f94fe45219364e7bef94414e3b" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertFermataShape</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a8062abef0fad9b19399e64c2d16fc61d" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertFigureGlyph</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a33cdcfefd455718e535176d316b2a68b" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertKey</name></member>
      <member refid="classvrv_1_1_music_xml_input_1aa81ea592262d045a34fa0b889c523fa5" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertKindToSymbol</name></member>
      <member refid="classvrv_1_1_music_xml_input_1ab21ca10e23b37dfed8860be571fbf70d" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertKindToText</name></member>
      <member refid="classvrv_1_1_music_xml_input_1aa261287e35c392aa20b3c743836609f7" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertLineEndSymbol</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a0e7241f442f5718ab98dc30a6fce5448" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertNotehead</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a9104f53db17fabcb5036c5593afd3344" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertPedalTypeToDir</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a7952b96bd43e2e91dd12c2ae1313bd46" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertStepToPitchName</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a63ad04d9c43850bbbf4ef6d092e5bae3" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertStyleToRend</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a6ea5938027ad28bb016ef12693075d09" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertTupletNumberValue</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a2858379b11eefe50c9da252ed1ffc43c" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertTypeToDur</name></member>
      <member refid="classvrv_1_1_music_xml_input_1abec993b4e28fdb7d7321592745857818" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertTypeToVerovioText</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a9f1300a933b5b531234f0be02e0a8426" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ConvertWordToBool</name></member>
      <member refid="classvrv_1_1_music_xml_input_1af444dbcd16ec5e8b54f45d54f87e581b" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>FillSpace</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a9078623e6e2d245160cc7eb4aced6c63" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>GenerateUuid</name></member>
      <member refid="classvrv_1_1_music_xml_input_1af50caaafd1ac0db931e9d1f872eb7a60" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>GetContent</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a100fea4bd408f879de6007423ec96b24" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>GetContentOfChild</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a1723e513370aff33bbd5a08be7ec7e14" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>GetMeterSigGrpValues</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a2511c4232cfe220a0829d566b6669abe" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>GetMrestMeasuresCountBeforeIndex</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a60ce6bbcf45e850d2aa92f0400d2ee22" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>GetOrnamentGlyphNumber</name></member>
      <member refid="classvrv_1_1_input_1a1b05f76bf7cb69133dff8178b0b25b59" prot="public" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>GetOutputFormat</name></member>
      <member refid="classvrv_1_1_music_xml_input_1af4533a1322673a39fd0b14414cf6baa3" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>GetWordsOrDynamicsText</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a76401d3e75b506272e9c73ecf6d436fd" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>HasAttributeWithValue</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a9c345cec8d3675856c380ea0c9022379" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>HasContentWithValue</name></member>
      <member refid="classvrv_1_1_input_1ab983f3a606f7a2675d4c002260439123" prot="public" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>HasLayoutInformation</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a0958a62f484f7427c8bbd341fc2cff6a" prot="public" virt="virtual"><scope>vrv::MusicXmlInput</scope><name>Import</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a978f8ec1281a4820300215672d3a3a7a" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>InferCurvedir</name></member>
      <member refid="classvrv_1_1_input_1ae8b21e281d8a92b924c4276b2b89c8b1" prot="public" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>Input</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a0deacf511fab7716b8d806270b6f28e6" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>InsertClefIntoObject</name></member>
      <member refid="classvrv_1_1_music_xml_input_1aa30dd6f547d30452965cb6cc26bfe062" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>InsertClefIntoObject</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a808e161183af06d739a53899af1d30b9" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>InsertClefToLayer</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a6a6a01a263e0092c0b7a1630cf65da91" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>IsElement</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a20364c116323dcab9e24858665df79e2" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>IsMultirestMeasure</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a78aca75c51a3f824db94cf05486c6837" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_ArpeggioStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1ae81a21d760894ccf3806d0858f220ba1" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_bracketStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a3df71381adfa40014c5368ecb4519ba5" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_clefChangeQueue</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a4663eab885248d0cf41b975def917d3d" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_controlElements</name></member>
      <member refid="classvrv_1_1_music_xml_input_1af53f4780b7bb3864beccedc0e31265ff" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_currentLayer</name></member>
      <member refid="classvrv_1_1_music_xml_input_1ad649056fe80cda91233967e0a7f4c831" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_dirStack</name></member>
      <member refid="classvrv_1_1_input_1a19dccc7ba8689777b0f2558e8b839305" prot="protected" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_doc</name></member>
      <member refid="classvrv_1_1_music_xml_input_1aa0a1b37d46759ff15b47fab8c7f612d0" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_durFb</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a8057b506a4d7ec7544906f2ac76ce963" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_durTotal</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a496d6f5300f269f61e07b6badbac31b5" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_dynamStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1ae35ffeeeb609dd8a2d29f8ee57c17eb8" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_elementStackMap</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a905c022904e56d30fdbba8972f196900" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_endingStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a47bd4af6b0d6512866662cb991106703" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_glissStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1aaac2c3c3c83b808c85fa0dc20110bf8a" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_hairpinStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a23eddf8dbce523cce1ff126c9ed2f856" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_hairpinStopStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a85f4fa488f5c69ce064290feb1a8b7eb" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_harmStack</name></member>
      <member refid="classvrv_1_1_input_1ae5b786823e4fef5ca80a48530513919c" prot="protected" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_hasLayoutInformation</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a4f79faf67c9c51ca19398212d68b07e7" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_ID</name></member>
      <member refid="classvrv_1_1_music_xml_input_1abc6ef9c3ef0c75a5a96172063fb1cf5b" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_instrdef</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a70ed0f8e963db0db174fea4997d16cc1" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_isLayerInitialized</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a8bd33ebd5f7a23e2e021f923160a49be" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_label</name></member>
      <member refid="classvrv_1_1_music_xml_input_1ab0002125d5d57d40af2cff78783345a3" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_labelAbbr</name></member>
      <member refid="classvrv_1_1_music_xml_input_1ad54af4a288f725239ec2947673dc66ee" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_layerEndTimes</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a6b4ee5b24d3a32b98254e63cafc7a1b9" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_layerTimes</name></member>
      <member refid="classvrv_1_1_music_xml_input_1abab1e77a05342059c7dd29dc68a1b8fb" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_measureCounts</name></member>
      <member refid="classvrv_1_1_music_xml_input_1ab9f8fbf7dfaa9465429b99926479b2e4" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_meterCount</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a9f13a0f0ecd663ce3d0ec0dae234a662" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_meterUnit</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a0c03c0e5920800dbc6f32de6c264d8e9" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_mRpt</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a98b9a1c93635bc5d21fea4b74d7c6f86" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_multiRests</name></member>
      <member refid="classvrv_1_1_music_xml_input_1aac6ef17822e9a6114812268a2716c39b" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_octaveStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a09bee8c1b4cc55fa50994ae27e02284d" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_octDis</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a43b065c93eb2c401cb781a69ff503dcb" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_openDashesStack</name></member>
      <member refid="classvrv_1_1_input_1a12d911b9d747f92ef5b6e57253c06b3d" prot="protected" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_outformat</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a6d5452669d83ac4b22ed51370a3dcb10" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_pedalStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a4253bbebaa6faef7d0c026a11c8dd104" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_ppq</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a0d752c598856b0674654529acf4bcb96" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_prevLayer</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a70af98ef677e3cbf0c2060fefdfcb0fe" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_slash</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a0524e91f0263b5f3a383866ee3c3ce4c" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_slurStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1abba02d303cceff3dd6a1e3eb3b9c98de" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_slurStopStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a8cd3495353f5b1b669845211d070c019" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_tempoStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1af49d1e0cb9a47642b9deafbd6a6b97d4" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_tieStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a7b477b35471784c8f0265511beac7bf8" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_tieStopStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a9488e25e70515cb064b889ae9a35ecc4" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>m_trillStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1aceb2632ff8c6a962087f8f768f20f355" prot="public" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>MusicXmlInput</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a1e821b4981055c6e6cac4c17b6bcdf55" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>NotInEndingStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1aef2d6f8c7a6bea106ff6c4d7ae2f6252" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>OpenSlur</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a5ad86def603d6695716b1bac13187184" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>OpenTie</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a9fde4961d07a159bbc847f0008c94505" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>PrintMetronome</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a9271ae23823792da12f8a4d051db7159" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ProcessClefChangeQueue</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a874adcde63341fe513be1700cf7c63b9" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXml</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a78e9d0a4ae7b48acb32a5bf25dcb5171" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlAttributes</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a224e1f6def5159db23f69db7fdbc19fa" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlBackup</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a3e5a353c3cb462ee87372957f077ba0c" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlBarLine</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a8d7e8c441790b0dc8dcca2fef43b78da" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlBeamsAndTuplets</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a93d4e8e72021a096f44db602516ec8c6" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlBeamStart</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a3be4a93d5706507d88e3e1f150a50bdf" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlDirection</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a3fd3306147f32be7f03953e3f247a463" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlFigures</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a0a1fcff59c478d9dde27e1c2c6ecc66a" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlForward</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a36d0dc466de976a70e82dd28b3b2579d" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlHarmony</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a32c0eaa3bd0264ec29988235d4969fef" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlMeasure</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a8d6b6f8c4e7c1dbc9a735aa25c4857e4" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXMLMeterSig</name></member>
      <member refid="classvrv_1_1_music_xml_input_1afa1759eadd036edd1cfc41368cbcc71a" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlNote</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a46b8f8c24e987e316fb6b9821a5e2331" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlPart</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a90f51883d9acbea30e439d664e597dba" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlPartAttributesAsStaffDef</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a396019a3ffda20c80ca434f31da1cfeb" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlPrint</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a817f21d5d70c8b392f075c7ca7fbd985" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlTies</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a50ee5f2b7099feec8e3ebcbfa4af2bca" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlTitle</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a434f2cb69c8521e5c9fe843357ec9793" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ReadMusicXmlTupletStart</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a5fbe5273544a47af5f1d5ddddb3ed2c6" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>RemoveLastFromStack</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a9550ddfee9414cfe8861da273562f380" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>SelectLayer</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a2de52a9c304e7377fdfdbcb434c048c8" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>SelectLayer</name></member>
      <member refid="classvrv_1_1_music_xml_input_1aedb8f18c3b08e22ea6281fc70ab25abb" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>SelectLayer</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a42d543e19376698def9265b35db34593" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>SetChordStaff</name></member>
      <member refid="classvrv_1_1_music_xml_input_1aaaa4f3a7c3de4049a3071faa5b7a8c25" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>SetFermataExternalSymbols</name></member>
      <member refid="classvrv_1_1_input_1ad6290a083918bae0c62dac7795a9771d" prot="public" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>SetOutputFormat</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a93d8c0a917cf3be62cabd78f0db44690" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>ShapeFermata</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a7c5b01443404c494ec846d9f3e48966f" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>StyleLabel</name></member>
      <member refid="classvrv_1_1_music_xml_input_1af6f715e94a7b6af283630fa6cd660438" prot="private" virt="non-virtual"><scope>vrv::MusicXmlInput</scope><name>TextRendition</name></member>
      <member refid="classvrv_1_1_input_1ad97e045cb680e5d79ffb593da1def219" prot="public" virt="virtual"><scope>vrv::MusicXmlInput</scope><name>~Input</name></member>
      <member refid="classvrv_1_1_music_xml_input_1a43c6dfa399db2476b24a9d36134d2edb" prot="public" virt="virtual"><scope>vrv::MusicXmlInput</scope><name>~MusicXmlInput</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
