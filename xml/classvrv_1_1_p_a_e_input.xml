<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvrv_1_1_p_a_e_input" kind="class" language="C++" prot="public">
    <compoundname>vrv::PAEInput</compoundname>
    <basecompoundref refid="classvrv_1_1_input" prot="public" virt="non-virtual">vrv::Input</basecompoundref>
      <sectiondef kind="user-defined">
      <header>Methods that convert pae::Token::m_char to pae::Token::m_objects</header>
      <description><para>The order in which they are called is important.</para>
<para>For example, <ref refid="classvrv_1_1_key_sig" kindref="compound">KeySig</ref> have to be converted before Pitch, because pitch charachters used in <ref refid="classvrv_1_1_key_sig" kindref="compound">KeySig</ref> needs to be consumed first </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a1c1715f572354ad20f653a41026d9105" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertKeySig</definition>
        <argsstring>()</argsstring>
        <name>ConvertKeySig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="573" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3137" bodyend="3173"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1ab9b26f31f0357fa52e83d18af447f170" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertClef</definition>
        <argsstring>()</argsstring>
        <name>ConvertClef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="574" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3269" bodyend="3305"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a07bd78428556c3476aaa4eb2e8562ce4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertMeterSigOrMensur</definition>
        <argsstring>()</argsstring>
        <name>ConvertMeterSigOrMensur</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="575" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3307" bodyend="3351"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1affeb00e44b62d48fd1aaad910091dd07" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertMeasure</definition>
        <argsstring>()</argsstring>
        <name>ConvertMeasure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="576" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3353" bodyend="3392"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1ae5e3eb479924fe859edfc9f2f97a5fb6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertRepeatedFigure</definition>
        <argsstring>()</argsstring>
        <name>ConvertRepeatedFigure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="577" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3394" bodyend="3487"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1aeeda37db2aa161b0fbc3e7f909585fcf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertRepeatedMeasure</definition>
        <argsstring>()</argsstring>
        <name>ConvertRepeatedMeasure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="578" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3489" bodyend="3549"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a64eab1b479876be8e8af8cbc0ec33ba3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertMRestOrMultiRest</definition>
        <argsstring>()</argsstring>
        <name>ConvertMRestOrMultiRest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="579" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3551" bodyend="3593"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a9c33cc6babd16028bec8ff7ac5abcddc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertPitch</definition>
        <argsstring>()</argsstring>
        <name>ConvertPitch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="580" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3595" bodyend="3620"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a8ece59d93eddace468aec0a9db6f82b0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertOctave</definition>
        <argsstring>()</argsstring>
        <name>ConvertOctave</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="581" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3622" bodyend="3666"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a8265c1589b9b3d7a5577bc38b9b46905" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertTrill</definition>
        <argsstring>()</argsstring>
        <name>ConvertTrill</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="582" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3668" bodyend="3705"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1aeb2ca50db4f2ea44690be59c35d6e6fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertFermata</definition>
        <argsstring>()</argsstring>
        <name>ConvertFermata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="583" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3707" bodyend="3769"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a71fb6ee11301e5470b0f876e3cc42358" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertAccidental</definition>
        <argsstring>()</argsstring>
        <name>ConvertAccidental</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="584" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3771" bodyend="3810"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a1e60310275de64ea9153be6437f05ec1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertRest</definition>
        <argsstring>()</argsstring>
        <name>ConvertRest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="585" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3812" bodyend="3824"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a895e43b063bd8d3860cbba4175541314" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertChord</definition>
        <argsstring>()</argsstring>
        <name>ConvertChord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="586" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3826" bodyend="3897"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1af73f42bdf8d913e37f42858a0ec55937" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertBeam</definition>
        <argsstring>()</argsstring>
        <name>ConvertBeam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="587" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3899" bodyend="3998"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1ae09b191313454689cd261d8d428f1b42" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertGrace</definition>
        <argsstring>()</argsstring>
        <name>ConvertGrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="588" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4080" bodyend="4137"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1ac1e44a90205ba5d5efb07fe9579d2b52" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertGraceGrp</definition>
        <argsstring>()</argsstring>
        <name>ConvertGraceGrp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="589" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4000" bodyend="4078"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a6d6aaa97dbd442ac9fcdc03ad8d3f77b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertTuplet</definition>
        <argsstring>()</argsstring>
        <name>ConvertTuplet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="590" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4139" bodyend="4220"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a7685bccbe3a4daf0e08068144ea1ef66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertDuration</definition>
        <argsstring>()</argsstring>
        <name>ConvertDuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="591" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4222" bodyend="4321"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a9a6fe56974c3a0679012f08c40761c13" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertTie</definition>
        <argsstring>()</argsstring>
        <name>ConvertTie</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="592" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4323" bodyend="4394"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1ab0a7e37ece29837390f5fba4f9bb55b0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertLigature</definition>
        <argsstring>()</argsstring>
        <name>ConvertLigature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="593" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4396" bodyend="4500"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a32938d4cdb41c90869b91f169db94b33" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ConvertAccidGes</definition>
        <argsstring>()</argsstring>
        <name>ConvertAccidGes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="594" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4502" bodyend="4579"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Helpers to check what a token is or was.</header>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a2eee247516ab10e608bcc40de7b274de" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::Is</definition>
        <argsstring>(pae::Token &amp;token, const std::string &amp;map)</argsstring>
        <name>Is</name>
        <param>
          <type>pae::Token &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="602" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2580" bodyend="2583"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a8d866dcb73da11d76e6ea09799b9b269" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::Was</definition>
        <argsstring>(pae::Token &amp;token, const std::string &amp;map)</argsstring>
        <name>Was</name>
        <param>
          <type>pae::Token &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="603" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2585" bodyend="2588"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1adc44fa0a26a00e56022277c4be53cd8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::HasInput</definition>
        <argsstring>(char inputChar)</argsstring>
        <name>HasInput</name>
        <param>
          <type>char</type>
          <declname>inputChar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="604" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2590" bodyend="2595"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods that parse sub string instantiate corresponding objects</header>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a8671f0f985990cd05ed4d45e7b4fecf1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ParseKeySig</definition>
        <argsstring>(KeySig *keySig, const std::string &amp;paeStr, pae::Token &amp;token)</argsstring>
        <name>ParseKeySig</name>
        <param>
          <type><ref refid="classvrv_1_1_key_sig" kindref="compound">KeySig</ref> *</type>
          <declname>keySig</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>paeStr</declname>
        </param>
        <param>
          <type>pae::Token &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="611" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4729" bodyend="4813"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a18ffc9a877cfa437ff278a252e421ecd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ParseClef</definition>
        <argsstring>(Clef *clef, const std::string &amp;paeStr, pae::Token &amp;token, bool *mensuralScoreDef=NULL)</argsstring>
        <name>ParseClef</name>
        <param>
          <type><ref refid="classvrv_1_1_clef" kindref="compound">Clef</ref> *</type>
          <declname>clef</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>paeStr</declname>
        </param>
        <param>
          <type>pae::Token &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>mensuralScoreDef</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="612" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4815" bodyend="4889"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a815f23a89ba7a912b96be91ad4eb8090" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ParseMeterSig</definition>
        <argsstring>(MeterSig *meterSig, const std::string &amp;paeStr, pae::Token &amp;token)</argsstring>
        <name>ParseMeterSig</name>
        <param>
          <type><ref refid="classvrv_1_1_meter_sig" kindref="compound">MeterSig</ref> *</type>
          <declname>meterSig</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>paeStr</declname>
        </param>
        <param>
          <type>pae::Token &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="613" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4891" bodyend="4945"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a7bae1c696838b8e8ecc309c27768048c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ParseMensur</definition>
        <argsstring>(Mensur *mensur, const std::string &amp;paeStr, pae::Token &amp;token)</argsstring>
        <name>ParseMensur</name>
        <param>
          <type><ref refid="classvrv_1_1_mensur" kindref="compound">Mensur</ref> *</type>
          <declname>mensur</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>paeStr</declname>
        </param>
        <param>
          <type>pae::Token &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="614" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4947" bodyend="5005"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a48781616db4a9629df37ebda64a43150" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ParseMeasure</definition>
        <argsstring>(Measure *measure, const std::string &amp;paeStr, pae::Token &amp;token)</argsstring>
        <name>ParseMeasure</name>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>paeStr</declname>
        </param>
        <param>
          <type>pae::Token &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="615" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="5007" bodyend="5034"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a062258d4f4c704b89074ae50751f3d65" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::ParseDuration</definition>
        <argsstring>(std::list&lt; std::pair&lt; data_DURATION, int &gt;&gt; &amp;durations, const std::string &amp;paeStr, pae::Token &amp;token)</argsstring>
        <name>ParseDuration</name>
        <param>
          <type>std::list&lt; std::pair&lt; data_DURATION, int &gt;&gt; &amp;</type>
          <declname>durations</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>paeStr</declname>
        </param>
        <param>
          <type>pae::Token &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="616" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="5036" bodyend="5104"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Check if the input string contains any invalid characters.</header>
      <description><para>Invalid characters are put in invalidChars.</para>
<para>Return false if invalid characters are found. </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a4453be6a9c60ad3e3f64378b1a190613" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::CheckPAEChars</definition>
        <argsstring>(const std::string &amp;input, std::string &amp;invalidChars, const std::string &amp;validChars=&quot;&quot;)</argsstring>
        <name>CheckPAEChars</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>invalidChars</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>validChars</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="626" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2715" bodyend="2733"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Some logging methods specific to the PAE parser</header>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1af209e47fe44194d3d81d19ef57ee77cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::PAEInput::LogPAE</definition>
        <argsstring>(int errCode, pae::Token &amp;token, std::string value=&quot;&quot;)</argsstring>
        <name>LogPAE</name>
        <param>
          <type>int</type>
          <declname>errCode</declname>
        </param>
        <param>
          <type>pae::Token &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>value</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="664" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2479" bodyend="2536"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a35563bd061cb0d83dfb21d0d34559e3a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::PAEInput::LogDebugTokens</definition>
        <argsstring>(bool vertical=false)</argsstring>
        <name>LogDebugTokens</name>
        <param>
          <type>bool</type>
          <declname>vertical</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="665" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2538" bodyend="2578"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>The scoreDef clef, keysig and timesig.</header>
      <description><para><ref refid="classvrv_1_1_mensur" kindref="compound">Mensur</ref> is used with mensural incipits (i.e., with clefs with a + second sign. </para>
</description>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1afecb804b6ad54e47661c387cc42c50e3" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_clef" kindref="compound">Clef</ref></type>
        <definition>Clef vrv::PAEInput::m_clef</definition>
        <argsstring></argsstring>
        <name>m_clef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="722" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="722" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a37f80fdcc7e2751b583952b95d993295" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_key_sig" kindref="compound">KeySig</ref></type>
        <definition>KeySig vrv::PAEInput::m_keySig</definition>
        <argsstring></argsstring>
        <name>m_keySig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="723" column="12" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1acb3830c96801879c2b13184a3b45522a" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_mensur" kindref="compound">Mensur</ref></type>
        <definition>Mensur vrv::PAEInput::m_mensur</definition>
        <argsstring></argsstring>
        <name>m_mensur</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="724" column="12" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="724" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a3e75b33e2b9f00f722237304747f6bfe" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_meter_sig" kindref="compound">MeterSig</ref></type>
        <definition>MeterSig vrv::PAEInput::m_meterSig</definition>
        <argsstring></argsstring>
        <name>m_meterSig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="725" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1abfc9d229818a34e251114788d028ff28" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::PAEInput::m_hasClef</definition>
        <argsstring></argsstring>
        <name>m_hasClef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="726" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a000533c68412e1202773bed0041bb4b8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::PAEInput::m_hasKeySig</definition>
        <argsstring></argsstring>
        <name>m_hasKeySig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="727" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="727" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a1ea5cdd84b5f915ef8ddb6f7aecbfd70" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::PAEInput::m_hasMeterSig</definition>
        <argsstring></argsstring>
        <name>m_hasMeterSig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="728" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a78f9427dceedddfe3075bc62fd8d8864" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::PAEInput::m_hasMensur</definition>
        <argsstring></argsstring>
        <name>m_hasMensur</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="729" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="729" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>The jsonxx members to store the validation logs</header>
      <description><para><ref refid="classvrv_1_1_score_def" kindref="compound">ScoreDef</ref> and input members are single objects that can log one entry Data is an array that can store multiple entries </para>
</description>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1ae50cbca4f79dd35cb859500a74080873" prot="private" static="no" mutable="no">
        <type>jsonxx::Object</type>
        <definition>jsonxx::Object vrv::PAEInput::m_clefLog</definition>
        <argsstring></argsstring>
        <name>m_clefLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="738" column="20" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="738" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a7c5d90ce9655f5dcf4c24bda55f6bd0b" prot="private" static="no" mutable="no">
        <type>jsonxx::Object</type>
        <definition>jsonxx::Object vrv::PAEInput::m_keysigLog</definition>
        <argsstring></argsstring>
        <name>m_keysigLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="739" column="20" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="739" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a45f94782ad3886887346c029a8eceee2" prot="private" static="no" mutable="no">
        <type>jsonxx::Object</type>
        <definition>jsonxx::Object vrv::PAEInput::m_timesigLog</definition>
        <argsstring></argsstring>
        <name>m_timesigLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="740" column="20" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a60f9f9732cc9a247b47cbdc909977ecd" prot="private" static="no" mutable="no">
        <type>jsonxx::Object</type>
        <definition>jsonxx::Object vrv::PAEInput::m_inputLog</definition>
        <argsstring></argsstring>
        <name>m_inputLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="741" column="20" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="741" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a68e88a56cae41bf109520ff63f7ecac3" prot="private" static="no" mutable="no">
        <type>jsonxx::Array</type>
        <definition>jsonxx::Array vrv::PAEInput::m_dataLog</definition>
        <argsstring></argsstring>
        <name>m_dataLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="742" column="19" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="742" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a4c1b3f4b5fd8d2abbb4835ff12a10224" prot="public" static="yes" mutable="no">
        <type>const std::map&lt; int, std::string &gt;</type>
        <definition>const std::map&lt; int, std::string &gt; vrv::PAEInput::s_errCodes</definition>
        <argsstring></argsstring>
        <name>s_errCodes</name>
        <initializer>{
    { ERR_001_EMPTY, &quot;The input is empty.&quot; },
    { ERR_002_JSON_PARSE, &quot;The JSON input cannot be parsed.&quot; },
    { ERR_003_JSON_KEY, &quot;There is no &apos;data&apos; key in the JSON input.&quot; },
    { ERR_004_KEY_SPACE, &quot;A key signature change must be followed by a space.&quot; },
    { ERR_005_CLEF_SPACE, &quot;A clef change must be followed by a space.&quot; },
    { ERR_006_TIMESIG_SPACE, &quot;A time signature change must be followed by a space.&quot; },
    { ERR_007_REP_EMPTY, &quot;The content of the repeated figure is missing.&quot; },
    { ERR_008_REP_MARKER, &quot;The end of the repeated figure must be indicated with &apos;!&apos; before the &apos;f&apos;.&quot; },
    { ERR_009_REP_OPEN, &quot;The repeated figure with &apos;!&apos; must be closed before the end of the measure.&quot; },
    { ERR_010_REP_UNUSED, &quot;The figure marked for repetition has not been repeated.&quot; },
    { ERR_011_REP_NO_FIGURE, &quot;The &apos;f&apos; must follow &apos;!&apos; for the figure to repeat.&quot; },
    { ERR_012_REP_NOT_BEGIN, &quot;To repeat the bar, &apos;i&apos; must follow a bar line.&quot; },
    { ERR_013_REP_NO_CONTENT, &quot;A repetition marker &apos;i&apos; is present with no content to repeat.&quot; },
    { ERR_014_REP_NO_BARLINE, &quot;To repeat the bar, &apos;i&apos; must be followed by a bar line.&quot; },
    { ERR_015_MREST_INVALID, &quot;A rest using &apos;=&apos; cannot be directly followed by another &apos;=&apos;.&quot; },
    { ERR_016_MREST_NUMBER, &quot;A rest using &apos;=&apos; must be followed by a bar line or a number greater than 0.&quot; },
    { ERR_017_TRILL_INVALID, &quot;A trill using &apos;t&apos; must directly follow the note it belongs to.&quot; },
    { ERR_018_FERMATA_NESTED, &quot;A fermata &apos;(&apos; cannot be directly followed by another &apos;(&apos;.&quot; },
    { ERR_019_ACCID_NO_NOTE, &quot;An accidental must be directly followed by a note.&quot; },
    { ERR_020_CHORD_NOTE_BEFORE, &quot;To indicate a chord, a &apos;^&apos; must be preceded by a note.&quot; },
    { ERR_021_CHORD_NOTE_AFTER, &quot;To indicate a chord, a &apos;^&apos; must be followed by a note.&quot; },
    { ERR_022_BEAM_MENSURAL, &quot;Beams cannot be used with mensural notation.&quot; },
    { ERR_023_BEAM_NESTED, &quot;A beam cannot be started with &apos;{&apos; before closing the previous one.&quot; },
    { ERR_024_BEAM_CLOSING, &quot;An extra &apos;}&apos; to close a beam is present.&quot; },
    { ERR_025_BEAM_OPEN, &quot;The beam must be closed with &apos;}&apos; before the end of the measure.&quot; },
    { ERR_026_GRACE_NESTED, &quot;The appoggiatura must be closed with &apos;r&apos; before starting a new one.&quot; },
    { ERR_027_GRACE_CLOSING, &quot;An extra &apos;r&apos; is present to close an appoggiatura&quot; },
    { ERR_028_GRACE_OPEN, &quot;The appoggiatura must be closed with &apos;r&apos; before the end of the measure.&quot; },
    { ERR_029_GRACE_UNRESOLVED, &quot;An appoggiatura cannot be started using &apos;q&apos; before completing the previous one.&quot; },
    { ERR_030_GRACE_DURATION, &quot;No rhythmic value can be entered when using an acciaccatura with &apos;g&apos;.&quot; },
    { ERR_031_GRACE_NO_NOTE, &quot;A grace note using &apos;g&apos; or &apos;q&apos; must be followed by a note.&quot; },
    { ERR_032_TUPLET_NESTED, &quot;A special rhythm group cannot be started with &apos;(&apos; before closing the previous one.&quot; },
    { ERR_033_TUPLET_CLOSING, &quot;An extra &apos;)&apos; to close a special rhythm group is present.&quot; },
    { ERR_034_TUPLET_NUM, &quot;A &apos;;&apos; is present outside of a special rhythm group.&quot; },
    { ERR_035_TUPLET_OPEN, &quot;The special rhythm group or fermata must be closed with &apos;)&apos; before the end of the measure.&quot; },
    { ERR_036_TUPLET_NUM_NUMBER, &quot;A number must appear between the &apos;;&apos; and &apos;)&apos; in the special rhythm group.&quot; },
    { ERR_037_TIE_PITCH, &quot;A tie using &apos;+&apos; can only connect two notes of the same octave and pitch.&quot; },
    { ERR_038_TIE_OPEN, &quot;A tie using &apos;+&apos; must be follow by a note.&quot; },
    { ERR_039_TIE_NO_NOTE, &quot;A tie using &apos;+&apos; must be preceded by a note.&quot; },
    { ERR_040_HIERARCHY_INVALID, &quot;The resulting hierachy of elements for &apos;%s&apos; is invalid.&quot; },
    { ERR_041_NESTING_INVALID, &quot;The nesting of opening and closing tags for &apos;%s&apos; is invalid.&quot; },
    { ERR_042_CLEF_INCOMPLETE, &quot;The clef is not complete (Setting to G-2 if running in non-pedantic mode).&quot; },
    { ERR_043_CLEF_INVALID_2ND, &quot;The second character in the clef sign must be either &apos;+&apos; or &apos;-&apos;.&quot; },
    { ERR_044_CLEF_MENS, &quot;Mensural and non-mensural clefs cannot be mixed.&quot; },
    { ERR_045_CLEF_INVALID_3RD, &quot;The third character in the clef sign must be a digit.&quot; },
    { ERR_046_CLEF_INVALID, &quot;The clef &apos;%s&apos; is invalid.&quot; },
    { ERR_047_TIMESIG_INCOMPLETE, &quot;The time signature cannot be parsed (Setting to 4/4 if running in non-pedantic mode).&quot; },
    { ERR_048_TIMESIG_INVALID, &quot;The time signature &apos;%s&apos; is invalid.&quot; },
    { ERR_049_TIMESIG_MENS, &quot;The mensur sign content cannot be parsed (Setting to &apos;O&apos; if running in non-pedantic mode).&quot; },
    { ERR_050_INVALID_CHAR, &quot;The input contains one or more character(s) &apos;%s&apos;.&quot; },
    { ERR_051_BARLINE, &quot;The barline &apos;%s&apos; is invalid.&quot; },
    { ERR_052_DURATION, &quot;The duration content cannot be parsed (Setting to quarter note if running in non-pedantic mode).&quot; },
    { ERR_053_DURATION_MENS3, &quot;The duration cannot be &apos;3&apos; with mensural notation.&quot; },
    { ERR_054_DURATION_MENS5, &quot;The duration cannot be &apos;5&apos; with mensural notation.&quot; },
    { ERR_055_KEYSIG_CHANGE, &quot;The key signature cannot be changed more than once in a measure.&quot; },
    { ERR_056_TIMESIG_CHANGE, &quot;The time signature cannot be changed more than once in a measure.&quot; },
    { ERR_057_MENSUR_CHANGE, &quot;The mensur sign cannot be changed more than once in a measure.&quot; },
    { ERR_058_FERMATA_MREST, &quot;A fermata on measure rest with extra &apos;%s&apos; is invalid.&quot; },
    { ERR_059_DOUBLE_DOTS_MENS, &quot;Double-dotted notes are invalid with mensural notation.&quot; },
    { ERR_060_CLEF_MISSING, &quot;A clef is required.&quot; },
    { ERR_061_LIGATURE_NOTE_BEFORE, &quot;To indicate a ligature, a &apos;+&apos; must be preceded by a note.&quot; },
    { ERR_062_LIGATURE_NOTE_AFTER, &quot;To indicate a ligature, a &apos;+&apos; must be followed by a note.&quot; },
    { ERR_063_LIGATURE_PITCH, &quot;A ligature cannot have two consecutive notes with the same pitch.&quot; },
    { ERR_064_LIGATURE_DURATION, &quot;The duration in a ligature cannot be shorter than a semibreve.&quot; },
    { ERR_065_MREST_INVALID_MEASURE, &quot;A measure with a measure rest cannot include anything else.&quot; }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="677" column="27" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="677" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a9654ade4b9e0e1aa2ed1d3b6a7b808e6" prot="private" static="no" mutable="no">
        <type>std::list&lt; pae::Token &gt;</type>
        <definition>std::list&lt;pae::Token&gt; vrv::PAEInput::m_pae</definition>
        <argsstring></argsstring>
        <name>m_pae</name>
        <briefdescription>
<para>The list of tokens representing the incipit Each token is a characther that needs to be processed. </para>
        </briefdescription>
        <detaileddescription>
<para>When processing the tokens, the token can be assigned an <ref refid="classvrv_1_1_object" kindref="compound">Object</ref>. When processed, the token::m_char is set to 0. The orignal input value remains in token::m_inputChar Whenever necessary, some tokens can be added. For example when:<itemizedlist>
<listitem><para>repeated figures or measures are used</para>
</listitem><listitem><para>closing tags are missing (in non-pendantic modes)</para>
</listitem><listitem><para>opening tags are not part of the PAE syntax (e.g., a chord) Each token also stores the original position in the PAE string. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="692" column="15" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="692" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a6c2893ad7b8efe7039ed23c08ca14a6d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::PAEInput::m_isMensural</definition>
        <argsstring></argsstring>
        <name>m_isMensural</name>
        <briefdescription>
<para>A flag indicating the incipit is mensural. </para>
        </briefdescription>
        <detaileddescription>
<para>Based on the @clef of the input. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="698" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="698" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a823bebb3e844fe6e202eebeeb3cf2d5d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::PAEInput::m_pedanticMode</definition>
        <argsstring></argsstring>
        <name>m_pedanticMode</name>
        <briefdescription>
<para>A flag that makes parsing fails when an error is encountered. </para>
        </briefdescription>
        <detaileddescription>
<para>Parsing will stop there in pedantic mode. Currently hard-coded and will require an option to be added. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="705" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1afdfa4b12036ff2ba1c5c7dff19d54837" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::PAEInput::m_hasErrors</definition>
        <argsstring></argsstring>
        <name>m_hasErrors</name>
        <briefdescription>
<para>A flag indicating we had errors when parsing the incipit in non pedantic mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="710" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="710" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_p_a_e_input_1a4778ce18422328f10604d80eacf1dd7b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::PAEInput::m_scoreBased</definition>
        <argsstring></argsstring>
        <name>m_scoreBased</name>
        <briefdescription>
<para>A flag indicating the document should be kept as score-based. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="715" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="715" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a4cf3feeb33b0174e9434ca9d9ff1cc69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::PAEInput::PAEInput</definition>
        <argsstring>(Doc *doc)</argsstring>
        <name>PAEInput</name>
        <param>
          <type><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="514" column="5" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2438" bodyend="2441"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a2a868c3da05a40740ced6add54749848" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>vrv::PAEInput::~PAEInput</definition>
        <argsstring>()</argsstring>
        <name>~PAEInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="515" column="13" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2443" bodyend="2446"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a2c7eb5002ee302d228c2fc307de055fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jsonxx::Object</type>
        <definition>jsonxx::Object vrv::PAEInput::GetValidationLog</definition>
        <argsstring>()</argsstring>
        <name>GetValidationLog</name>
        <briefdescription>
<para>Return a JSON object with the validation log It is a single object when an input error is encountered. </para>
        </briefdescription>
        <detaileddescription>
<para>Otherwise, validation log errors/warnings are listed in their respective JSON input keys </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="522" column="20" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2461" bodyend="2475"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1aa49dd7b5b7e0dbc6cb08e8cc7783f98b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::PAEInput::SetScoreBased</definition>
        <argsstring>(bool scoreBased)</argsstring>
        <name>SetScoreBased</name>
        <param>
          <type>bool</type>
          <declname>scoreBased</declname>
        </param>
        <briefdescription>
<para>Setter for scoreBased flag (false by default). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="527" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="527" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1ae8f6bc5f8cfc8ef4b7cb9400dbe5094d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::Import</definition>
        <argsstring>(const std::string &amp;input) override</argsstring>
        <name>Import</name>
        <reimplements refid="classvrv_1_1_input_1a7a19750d81786d0a71ab4665a16b78e1">Import</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="530" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2735" bodyend="2891"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a677ab3c16b0e7aa32a31b22cbcab7538" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jsonxx::Object</type>
        <definition>jsonxx::Object vrv::PAEInput::InputKeysToJson</definition>
        <argsstring>(const std::string &amp;inputKeys)</argsstring>
        <name>InputKeysToJson</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>inputKeys</declname>
        </param>
        <briefdescription>
<para>Convert the old-style @clef:... </para>
        </briefdescription>
        <detaileddescription>
<para>@keysig:... @data:... to a JSON input </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="536" column="20" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2633" bodyend="2659"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a61b8c269049ffe137caeeea5de3bfe7b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jsonxx::Object</type>
        <definition>jsonxx::Object vrv::PAEInput::SingleLineToJson</definition>
        <argsstring>(const std::string &amp;singleLine)</argsstring>
        <name>SingleLineToJson</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>singleLine</declname>
        </param>
        <briefdescription>
<para>Convert single-line incipits with $clef@timesigkeysig data to JSON input. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="541" column="20" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2661" bodyend="2713"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1aa2f1110378fcf686dfe63c7f59e02b70" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::PAEInput::AddToken</definition>
        <argsstring>(char c, int &amp;position)</argsstring>
        <name>AddToken</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Helper to add a token to the list. </para>
        </briefdescription>
        <detaileddescription>
<para>Performs re-expansion of internal characters (e.g., Q back to qq in the inputChar) Re-expansion of internal characters inserts void tokens ignored during parsing. The are added only for debug purposes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="549" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2597" bodyend="2621"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a3dc7363d614bf5537a005788196a8bd1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::Parse</definition>
        <argsstring>()</argsstring>
        <name>Parse</name>
        <briefdescription>
<para>Main method that calls the converting methods. </para>
        </briefdescription>
        <detaileddescription>
<para>A the end of the converting process, the token list is essentially a list of Objects. The method then performs a check of the hierachy. Once this is done, it builds the MEI tree. The method then performs some additional checks of the content (to be implemented) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="558" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2893" bodyend="3135"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1a4c8f0a45eb5ba2dcdc59231b50dd907d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::PAEInput::ParseHeader</definition>
        <argsstring>(jsonxx::Object &amp;header)</argsstring>
        <name>ParseHeader</name>
        <param>
          <type>jsonxx::Object &amp;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Parse the metadata in the @header json object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="563" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="3175" bodyend="3267"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1ad4efc8077b3f020ff9ec418ee9ca8f8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::PAEInput::PrepareInsertion</definition>
        <argsstring>(int position, std::list&lt; pae::Token &gt; &amp;insertion)</argsstring>
        <name>PrepareInsertion</name>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <param>
          <type>std::list&lt; pae::Token &gt; &amp;</type>
          <declname>insertion</declname>
        </param>
        <briefdescription>
<para>When repeated content is inserted we set the position of all token to the one of the repetition marker (f or i). </para>
        </briefdescription>
        <detaileddescription>
<para>We also need to clone all objects in the tokens </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="634" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2623" bodyend="2631"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1aae97d9c93cf1967faedaa3b1d311dc8d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::CheckHierarchy</definition>
        <argsstring>()</argsstring>
        <name>CheckHierarchy</name>
        <briefdescription>
<para>Check that the token list is a valid opening / closing tag successing. </para>
        </briefdescription>
        <detaileddescription>
<para>Also check that every element is supported by is containing element. Remove invalid opening / closing successions or invalid elements in non pedantic mode. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="641" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4581" bodyend="4658"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1ab65bdbd0a5871857f98cda7408183527" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::CheckContentPreBuild</definition>
        <argsstring>()</argsstring>
        <name>CheckContentPreBuild</name>
        <briefdescription>
<para>Some additional checked to be performed before the MEI tree has been build. </para>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="647" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4660" bodyend="4698"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1aa86d72c9c9b120e537880937d9dc7456" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::PAEInput::CheckContentPostBuild</definition>
        <argsstring>()</argsstring>
        <name>CheckContentPostBuild</name>
        <briefdescription>
<para>Some additional checked to be performed one the MEI tree has been build. </para>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="653" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4700" bodyend="4708"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1ad545842abae4d74b69ff819c4c416e35" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::PAEInput::RemoveContainerToken</definition>
        <argsstring>(Object *object)</argsstring>
        <name>RemoveContainerToken</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>A helper to remove a token when checking the hierarchy and it is not valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="658" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="4710" bodyend="4727"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_p_a_e_input_1ac37fa08dbe2b2893ad478d50c98a111d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::PAEInput::ClearTokenObjects</definition>
        <argsstring>()</argsstring>
        <name>ClearTokenObjects</name>
        <briefdescription>
<para>Verify that no object remains in the token list before clearing the list. </para>
        </briefdescription>
        <detaileddescription>
<para>Remaining objects are deleted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="674" column="10" bodyfile="/home/runner/work/verovio/verovio/src/iopae.cpp" bodystart="2448" bodyend="2459"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>vrv::Input</label>
        <link refid="classvrv_1_1_input"/>
      </node>
      <node id="1">
        <label>vrv::PAEInput</label>
        <link refid="classvrv_1_1_p_a_e_input"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>vrv::Doc</label>
        <link refid="classvrv_1_1_doc"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_selectionFollowing</edgelabel>
          <edgelabel>m_selectionPreceding</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>m_expansionMap</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>vrv::PageElement</label>
        <link refid="classvrv_1_1_page_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>AttMultinumMeasures</label>
      </node>
      <node id="15">
        <label>vrv::ScoreDefElement</label>
        <link refid="classvrv_1_1_score_def_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>AttSystems</label>
      </node>
      <node id="18">
        <label>AttBarring</label>
      </node>
      <node id="7">
        <label>vrv::Score</label>
        <link refid="classvrv_1_1_score"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vrv::Input</label>
        <link refid="classvrv_1_1_input"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_doc</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>AttDistances</label>
      </node>
      <node id="9">
        <label>AttTyped</label>
      </node>
      <node id="5">
        <label>vrv::BoundingBox</label>
        <link refid="classvrv_1_1_bounding_box"/>
      </node>
      <node id="16">
        <label>vrv::ScoreDefInterface</label>
        <link refid="classvrv_1_1_score_def_interface"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>AttTuning</label>
      </node>
      <node id="17">
        <label>vrv::Interface</label>
        <link refid="classvrv_1_1_interface"/>
      </node>
      <node id="23">
        <label>AttMmTempo</label>
      </node>
      <node id="22">
        <label>AttMidiTempo</label>
      </node>
      <node id="30">
        <label>AttEndings</label>
      </node>
      <node id="26">
        <label>AttSpacing</label>
      </node>
      <node id="10">
        <label>vrv::PageMilestoneInterface</label>
        <link refid="classvrv_1_1_page_milestone_interface"/>
        <childnode refid="11" relation="usage">
          <edgelabel>m_end</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>vrv::PageMilestoneEnd</label>
        <link refid="classvrv_1_1_page_milestone_end"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_start</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>vrv::ExpansionMap</label>
        <link refid="classvrv_1_1_expansion_map"/>
      </node>
      <node id="20">
        <label>AttLyricStyle</label>
      </node>
      <node id="19">
        <label>AttDurationDefault</label>
      </node>
      <node id="14">
        <label>vrv::ScoreDef</label>
        <link refid="classvrv_1_1_score_def"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>AttOptimization</label>
      </node>
      <node id="25">
        <label>AttPianoPedals</label>
      </node>
      <node id="4">
        <label>vrv::Object</label>
        <link refid="classvrv_1_1_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>AttMeasureNumbers</label>
      </node>
      <node id="28">
        <label>vrv::ObjectListInterface</label>
        <link refid="classvrv_1_1_object_list_interface"/>
      </node>
      <node id="6">
        <label>vrv::Page</label>
        <link refid="classvrv_1_1_page"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_score</edgelabel>
          <edgelabel>m_scoreEnd</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_drawingScoreDef</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>vrv::PAEInput</label>
        <link refid="classvrv_1_1_p_a_e_input"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>AttTimeBase</label>
      </node>
      <node id="13">
        <label>AttNNumberLike</label>
      </node>
      <node id="12">
        <label>AttLabelled</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/verovio/verovio/include/vrv/iopae.h" line="511" column="28" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iopae.h" bodystart="511" bodyend="744"/>
    <listofallmembers>
      <member refid="classvrv_1_1_p_a_e_input_1aa2f1110378fcf686dfe63c7f59e02b70" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>AddToken</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1aa86d72c9c9b120e537880937d9dc7456" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>CheckContentPostBuild</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1ab65bdbd0a5871857f98cda7408183527" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>CheckContentPreBuild</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1aae97d9c93cf1967faedaa3b1d311dc8d" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>CheckHierarchy</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a4453be6a9c60ad3e3f64378b1a190613" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>CheckPAEChars</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1ac37fa08dbe2b2893ad478d50c98a111d" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ClearTokenObjects</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a71fb6ee11301e5470b0f876e3cc42358" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertAccidental</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a32938d4cdb41c90869b91f169db94b33" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertAccidGes</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1af73f42bdf8d913e37f42858a0ec55937" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertBeam</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a895e43b063bd8d3860cbba4175541314" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertChord</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1ab9b26f31f0357fa52e83d18af447f170" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertClef</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a7685bccbe3a4daf0e08068144ea1ef66" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertDuration</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1aeb2ca50db4f2ea44690be59c35d6e6fd" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertFermata</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1ae09b191313454689cd261d8d428f1b42" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertGrace</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1ac1e44a90205ba5d5efb07fe9579d2b52" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertGraceGrp</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a1c1715f572354ad20f653a41026d9105" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertKeySig</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1ab0a7e37ece29837390f5fba4f9bb55b0" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertLigature</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1affeb00e44b62d48fd1aaad910091dd07" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertMeasure</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a07bd78428556c3476aaa4eb2e8562ce4" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertMeterSigOrMensur</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a64eab1b479876be8e8af8cbc0ec33ba3" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertMRestOrMultiRest</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a8ece59d93eddace468aec0a9db6f82b0" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertOctave</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a9c33cc6babd16028bec8ff7ac5abcddc" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertPitch</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1ae5e3eb479924fe859edfc9f2f97a5fb6" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertRepeatedFigure</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1aeeda37db2aa161b0fbc3e7f909585fcf" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertRepeatedMeasure</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a1e60310275de64ea9153be6437f05ec1" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertRest</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a9a6fe56974c3a0679012f08c40761c13" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertTie</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a8265c1589b9b3d7a5577bc38b9b46905" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertTrill</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a6d6aaa97dbd442ac9fcdc03ad8d3f77b" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ConvertTuplet</name></member>
      <member refid="classvrv_1_1_input_1a762b1b42c1fba541b913b0569896b05b" prot="public" virt="non-virtual"><scope>vrv::PAEInput</scope><name>GetLayoutInformation</name></member>
      <member refid="classvrv_1_1_input_1a1b05f76bf7cb69133dff8178b0b25b59" prot="public" virt="non-virtual"><scope>vrv::PAEInput</scope><name>GetOutputFormat</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a2c7eb5002ee302d228c2fc307de055fe" prot="public" virt="non-virtual"><scope>vrv::PAEInput</scope><name>GetValidationLog</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1adc44fa0a26a00e56022277c4be53cd8b" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>HasInput</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1ae8f6bc5f8cfc8ef4b7cb9400dbe5094d" prot="public" virt="virtual"><scope>vrv::PAEInput</scope><name>Import</name></member>
      <member refid="classvrv_1_1_input_1ae8b21e281d8a92b924c4276b2b89c8b1" prot="public" virt="non-virtual"><scope>vrv::PAEInput</scope><name>Input</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a677ab3c16b0e7aa32a31b22cbcab7538" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>InputKeysToJson</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a2eee247516ab10e608bcc40de7b274de" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>Is</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a35563bd061cb0d83dfb21d0d34559e3a" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>LogDebugTokens</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1af209e47fe44194d3d81d19ef57ee77cf" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>LogPAE</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1afecb804b6ad54e47661c387cc42c50e3" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_clef</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1ae50cbca4f79dd35cb859500a74080873" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_clefLog</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a68e88a56cae41bf109520ff63f7ecac3" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_dataLog</name></member>
      <member refid="classvrv_1_1_input_1a19dccc7ba8689777b0f2558e8b839305" prot="protected" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_doc</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1abfc9d229818a34e251114788d028ff28" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_hasClef</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1afdfa4b12036ff2ba1c5c7dff19d54837" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_hasErrors</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a000533c68412e1202773bed0041bb4b8" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_hasKeySig</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a78f9427dceedddfe3075bc62fd8d8864" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_hasMensur</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a1ea5cdd84b5f915ef8ddb6f7aecbfd70" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_hasMeterSig</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a60f9f9732cc9a247b47cbdc909977ecd" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_inputLog</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a6c2893ad7b8efe7039ed23c08ca14a6d" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_isMensural</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a37f80fdcc7e2751b583952b95d993295" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_keySig</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a7c5d90ce9655f5dcf4c24bda55f6bd0b" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_keysigLog</name></member>
      <member refid="classvrv_1_1_input_1a4682cae07963c3646b22850447bf9120" prot="protected" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_layoutInformation</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1acb3830c96801879c2b13184a3b45522a" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_mensur</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a3e75b33e2b9f00f722237304747f6bfe" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_meterSig</name></member>
      <member refid="classvrv_1_1_input_1a12d911b9d747f92ef5b6e57253c06b3d" prot="protected" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_outformat</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a9654ade4b9e0e1aa2ed1d3b6a7b808e6" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_pae</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a823bebb3e844fe6e202eebeeb3cf2d5d" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_pedanticMode</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a4778ce18422328f10604d80eacf1dd7b" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_scoreBased</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a45f94782ad3886887346c029a8eceee2" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>m_timesigLog</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a4cf3feeb33b0174e9434ca9d9ff1cc69" prot="public" virt="non-virtual"><scope>vrv::PAEInput</scope><name>PAEInput</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a3dc7363d614bf5537a005788196a8bd1" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>Parse</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a18ffc9a877cfa437ff278a252e421ecd" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ParseClef</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a062258d4f4c704b89074ae50751f3d65" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ParseDuration</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a4c8f0a45eb5ba2dcdc59231b50dd907d" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ParseHeader</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a8671f0f985990cd05ed4d45e7b4fecf1" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ParseKeySig</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a48781616db4a9629df37ebda64a43150" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ParseMeasure</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a7bae1c696838b8e8ecc309c27768048c" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ParseMensur</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a815f23a89ba7a912b96be91ad4eb8090" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>ParseMeterSig</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1ad4efc8077b3f020ff9ec418ee9ca8f8b" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>PrepareInsertion</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1ad545842abae4d74b69ff819c4c416e35" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>RemoveContainerToken</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a4c1b3f4b5fd8d2abbb4835ff12a10224" prot="public" virt="non-virtual"><scope>vrv::PAEInput</scope><name>s_errCodes</name></member>
      <member refid="classvrv_1_1_input_1ad6290a083918bae0c62dac7795a9771d" prot="public" virt="non-virtual"><scope>vrv::PAEInput</scope><name>SetOutputFormat</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1aa49dd7b5b7e0dbc6cb08e8cc7783f98b" prot="public" virt="non-virtual"><scope>vrv::PAEInput</scope><name>SetScoreBased</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a61b8c269049ffe137caeeea5de3bfe7b" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>SingleLineToJson</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a8d866dcb73da11d76e6ea09799b9b269" prot="private" virt="non-virtual"><scope>vrv::PAEInput</scope><name>Was</name></member>
      <member refid="classvrv_1_1_input_1ad97e045cb680e5d79ffb593da1def219" prot="public" virt="virtual"><scope>vrv::PAEInput</scope><name>~Input</name></member>
      <member refid="classvrv_1_1_p_a_e_input_1a2a868c3da05a40740ced6add54749848" prot="public" virt="virtual"><scope>vrv::PAEInput</scope><name>~PAEInput</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
