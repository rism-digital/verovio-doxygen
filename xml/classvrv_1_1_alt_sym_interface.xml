<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvrv_1_1_alt_sym_interface" kind="class" language="C++" prot="public">
    <compoundname>vrv::AltSymInterface</compoundname>
    <basecompoundref refid="classvrv_1_1_interface" prot="public" virt="non-virtual">vrv::Interface</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttAltSym</basecompoundref>
    <derivedcompoundref refid="classvrv_1_1_control_element" prot="public" virt="non-virtual">vrv::ControlElement</derivedcompoundref>
    <includes refid="altsyminterface_8h" local="no">altsyminterface.h</includes>
      <sectiondef kind="user-defined">
      <header>Constructors, destructors, reset methods</header>
      <description><para>Reset method reset all attribute classes </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_alt_sym_interface_1a845bedb313536e6d19b235330e613860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::AltSymInterface::AltSymInterface</definition>
        <argsstring>()</argsstring>
        <name>AltSymInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alt_sym_interface_1afa70bdc6fa3bbd3eb7721746b7744a8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vrv::AltSymInterface::~AltSymInterface</definition>
        <argsstring>()</argsstring>
        <name>~AltSymInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="38" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alt_sym_interface_1aed738b60a43324a2f15fdec12d19521e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vrv::AltSymInterface::Reset</definition>
        <argsstring>() override</argsstring>
        <name>Reset</name>
        <reimplements refid="classvrv_1_1_interface_1a5dac3707db3650101729ff5610bb6200">Reset</reimplements>
        <reimplementedby refid="classvrv_1_1_phrase_1a0696fbea9d3b9019a7df931512339a76">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lv_1abebb39e59a9a487a6a77aaab2dacc79d">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pitch_inflection_1acaa21c0cd709c7c17969cd4b15831ee9">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_breath_1a90e5416e9e3e0500668fa80b6ee56253">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fing_1ac0001555815fa395cd70490cfbc16929">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_anchored_text_1ae033f3c039be78d301ad556121f1b737">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_gliss_1af55963ebb6c87cd61510b3a4db522c71">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bracket_span_1aa5bf3f8c9629910d30d986b5c3ee1efe">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_caesura_1ae43f9bb9361c5794d660ccdc198c8470">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_reh_1a572abcfe5c0c90d6a1ffeb630e1582e6">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_octave_1a864a842091fd0a0196ff9089edcdd6ad">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_num_1a58caebdcbaeb4aecff396ce6d4f09306">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_harm_1a5287374d5b3322b1040e2ec9ad16248b">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_hairpin_1aa99fa27d4b30d321a5747ca1775a0fa0">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_control_element_1ada5a97dab22c9ea6f7eff3dbfc4cd7ea">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_arpeg_1a647b7b96ece5fba2d339f1c0487cd601">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_turn_1add84fc966b8610b6fc73a25c90a21e30">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tie_1af42e8dac1dedeb43a1202e2cc058f12b">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tempo_1a06012ac7577667239c4605f31ff5f19c">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_repeat_mark_1a77e7b45f4404cbdcff9126f267a3c65a">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mordent_1a05185d958cc2bc7b8ccc1641d377aad9">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fermata_1afb7670f0139028cd80c08d6a7801f9be">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dynam_1a5626f443c23d944dc4eb0c503944d0f0">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dir_1a04dde11e9d20a43494f52995ede2af07">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ornam_1a71718b67659f935450ab8b79bf2d77bf">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_trill_1aac8f7b5ad3a71ad17049bb78e0e5c137">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pedal_1a2261ebf8824e419224c376fa42b1db70">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beam_span_1ac5726b38ecf3bfd2a8a09ad484cfaa9a">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_slur_1a44edee9624d0cf10b0e35bd772aca3a5">Reset</reimplementedby>
        <briefdescription>
<para>Virtual reset method. </para>
        </briefdescription>
        <detaileddescription>
<para>Needs to be overridden in child classes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="39" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alt_sym_interface_1a9fd4b58fba2208cc8bd966ac8185a619" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>InterfaceId</type>
        <definition>InterfaceId vrv::AltSymInterface::IsInterface</definition>
        <argsstring>() const override</argsstring>
        <name>IsInterface</name>
        <reimplements refid="classvrv_1_1_interface_1a00a809d1924fd17cfdb6327179148f4d">IsInterface</reimplements>
        <briefdescription>
<para>Virtual method returning the InterfaceId of the interface. </para>
        </briefdescription>
        <detaileddescription>
<para>Needs to be overridden in child classes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="40" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" bodystart="40" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Set and get the @next, @sameas, ... object</header>
      <description><para>The setter asserts that no <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> was previously set. </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_alt_sym_interface_1aec18270c1ba43d7ab203eda65b26b3f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::AltSymInterface::SetAltSymbolDef</definition>
        <argsstring>(SymbolDef *symbolDef)</argsstring>
        <name>SetAltSymbolDef</name>
        <param>
          <type><ref refid="classvrv_1_1_symbol_def" kindref="compound">SymbolDef</ref> *</type>
          <declname>symbolDef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="48" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alt_sym_interface_1ab8910be3f566440cde2cf57108248478" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvrv_1_1_symbol_def" kindref="compound">SymbolDef</ref> *</type>
        <definition>SymbolDef* vrv::AltSymInterface::GetAltSymbolDef</definition>
        <argsstring>()</argsstring>
        <name>GetAltSymbolDef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="49" column="15" bodyfile="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alt_sym_interface_1ab1e4641a3121765874883831aeb7d9b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classvrv_1_1_symbol_def" kindref="compound">SymbolDef</ref> *</type>
        <definition>const SymbolDef* vrv::AltSymInterface::GetAltSymbolDef</definition>
        <argsstring>() const</argsstring>
        <name>GetAltSymbolDef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="50" column="21" bodyfile="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" bodystart="50" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_alt_sym_interface_1a6f055775c7e579f3151ff7d937226412" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::AltSymInterface::HasAltSymbolDef</definition>
        <argsstring>() const</argsstring>
        <name>HasAltSymbolDef</name>
        <briefdescription>
<para>Return true if a symbolDef is given and resolved. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="57" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" bodystart="57" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_alt_sym_interface_1ad2b05c285a481767e4444541211bef04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FunctorCode</type>
        <definition>FunctorCode vrv::AltSymInterface::InterfacePrepareAltSym</definition>
        <argsstring>(PrepareAltSymFunctor &amp;functor, Object *object)</argsstring>
        <name>InterfacePrepareAltSym</name>
        <param>
          <type><ref refid="classvrv_1_1_prepare_alt_sym_functor" kindref="compound">PrepareAltSymFunctor</ref> &amp;</type>
          <declname>functor</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>We have functor code in the interface for avoiding code duplication in each implementation class. </para>
        </briefdescription>
        <detaileddescription>
<para>Since we are in an interface, we need to pass the object (implementation) to the pseudo functor method. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="70" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alt_sym_interface_1abe9ea486dc1348debbb673b0be83fb9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FunctorCode</type>
        <definition>FunctorCode vrv::AltSymInterface::InterfaceResetData</definition>
        <argsstring>(ResetDataFunctor &amp;functor, Object *object)</argsstring>
        <name>InterfaceResetData</name>
        <param>
          <type><ref refid="classvrv_1_1_reset_data_functor" kindref="compound">ResetDataFunctor</ref> &amp;</type>
          <declname>functor</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="71" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvrv_1_1_alt_sym_interface_1a72fef6a90cf32428aeae4eef339d6954" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_symbol_def" kindref="compound">SymbolDef</ref> *</type>
        <definition>SymbolDef* vrv::AltSymInterface::m_symbolDef</definition>
        <argsstring></argsstring>
        <name>m_symbolDef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="85" column="15" bodyfile="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_alt_sym_interface_1a4afe9b180f73d5f1e12cf8f3ef6069e7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vrv::AltSymInterface::m_symbolDefID</definition>
        <argsstring></argsstring>
        <name>m_symbolDefID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="86" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classvrv_1_1_alt_sym_interface_1a566a6b1368de80402f164f47ecd3f2b2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::AltSymInterface::SetIDStr</definition>
        <argsstring>()</argsstring>
        <name>SetIDStr</name>
        <briefdescription>
<para>Extract the fragment of the start or end @xml:id if given. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="78" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is an interface for elements having a @altsym It is not an abstract class but should not be instantiated directly. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="27">
        <label>vrv::Phrase</label>
        <link refid="classvrv_1_1_phrase"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>vrv::Pedal</label>
        <link refid="classvrv_1_1_pedal"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>vrv::Tempo</label>
        <link refid="classvrv_1_1_tempo"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>vrv::Octave</label>
        <link refid="classvrv_1_1_octave"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>vrv::Dir</label>
        <link refid="classvrv_1_1_dir"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>vrv::Harm</label>
        <link refid="classvrv_1_1_harm"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>vrv::Gliss</label>
        <link refid="classvrv_1_1_gliss"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vrv::Interface</label>
        <link refid="classvrv_1_1_interface"/>
      </node>
      <node id="32">
        <label>vrv::Turn</label>
        <link refid="classvrv_1_1_turn"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>vrv::Reh</label>
        <link refid="classvrv_1_1_reh"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>vrv::Fermata</label>
        <link refid="classvrv_1_1_fermata"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>vrv::AnchoredText</label>
        <link refid="classvrv_1_1_anchored_text"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>vrv::Breath</label>
        <link refid="classvrv_1_1_breath"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>vrv::Mordent</label>
        <link refid="classvrv_1_1_mordent"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>vrv::Trill</label>
        <link refid="classvrv_1_1_trill"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>vrv::Caesura</label>
        <link refid="classvrv_1_1_caesura"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>AttAltSym</label>
      </node>
      <node id="21">
        <label>vrv::Ornam</label>
        <link refid="classvrv_1_1_ornam"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>vrv::Lv</label>
        <link refid="classvrv_1_1_lv"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>vrv::Dynam</label>
        <link refid="classvrv_1_1_dynam"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>vrv::Tie</label>
        <link refid="classvrv_1_1_tie"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>vrv::AltSymInterface</label>
        <link refid="classvrv_1_1_alt_sym_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>vrv::MNum</label>
        <link refid="classvrv_1_1_m_num"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>vrv::PitchInflection</label>
        <link refid="classvrv_1_1_pitch_inflection"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>vrv::BeamSpan</label>
        <link refid="classvrv_1_1_beam_span"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>vrv::Slur</label>
        <link refid="classvrv_1_1_slur"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>vrv::ControlElement</label>
        <link refid="classvrv_1_1_control_element"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>vrv::Arpeg</label>
        <link refid="classvrv_1_1_arpeg"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>vrv::Hairpin</label>
        <link refid="classvrv_1_1_hairpin"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>vrv::BracketSpan</label>
        <link refid="classvrv_1_1_bracket_span"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>vrv::Fing</label>
        <link refid="classvrv_1_1_fing"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>vrv::RepeatMark</label>
        <link refid="classvrv_1_1_repeat_mark"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>vrv::Interface</label>
        <link refid="classvrv_1_1_interface"/>
      </node>
      <node id="3">
        <label>AttAltSym</label>
      </node>
      <node id="1">
        <label>vrv::AltSymInterface</label>
        <link refid="classvrv_1_1_alt_sym_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" line="30" column="57" bodyfile="/home/runner/work/verovio/verovio/include/vrv/altsyminterface.h" bodystart="30" bodyend="87"/>
    <listofallmembers>
      <member refid="classvrv_1_1_alt_sym_interface_1a845bedb313536e6d19b235330e613860" prot="public" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>AltSymInterface</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1ab8910be3f566440cde2cf57108248478" prot="public" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>GetAltSymbolDef</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1ab1e4641a3121765874883831aeb7d9b0" prot="public" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>GetAltSymbolDef</name></member>
      <member refid="classvrv_1_1_interface_1aa0b1e2570e8f6c9d0c7f9edd28fc344c" prot="public" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>GetAttClasses</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1a6f055775c7e579f3151ff7d937226412" prot="public" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>HasAltSymbolDef</name></member>
      <member refid="classvrv_1_1_interface_1adaf168ce6b150aef8967391bf4f20e5f" prot="public" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>Interface</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1ad2b05c285a481767e4444541211bef04" prot="public" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>InterfacePrepareAltSym</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1abe9ea486dc1348debbb673b0be83fb9f" prot="public" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>InterfaceResetData</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1a9fd4b58fba2208cc8bd966ac8185a619" prot="public" virt="virtual"><scope>vrv::AltSymInterface</scope><name>IsInterface</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1a72fef6a90cf32428aeae4eef339d6954" prot="private" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>m_symbolDef</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1a4afe9b180f73d5f1e12cf8f3ef6069e7" prot="private" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>m_symbolDefID</name></member>
      <member refid="classvrv_1_1_interface_1a57c9a4f18b81a07ef0d14dc040f84257" prot="public" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>RegisterInterfaceAttClass</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1aed738b60a43324a2f15fdec12d19521e" prot="public" virt="virtual"><scope>vrv::AltSymInterface</scope><name>Reset</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1aec18270c1ba43d7ab203eda65b26b3f4" prot="public" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>SetAltSymbolDef</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1a566a6b1368de80402f164f47ecd3f2b2" prot="protected" virt="non-virtual"><scope>vrv::AltSymInterface</scope><name>SetIDStr</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1afa70bdc6fa3bbd3eb7721746b7744a8e" prot="public" virt="virtual"><scope>vrv::AltSymInterface</scope><name>~AltSymInterface</name></member>
      <member refid="classvrv_1_1_interface_1a1fbabd3b506190dc2f1b4584a49a85ea" prot="public" virt="virtual"><scope>vrv::AltSymInterface</scope><name>~Interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
