<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvrv_1_1_slur" kind="class" language="C++" prot="public">
    <compoundname>vrv::Slur</compoundname>
    <basecompoundref refid="classvrv_1_1_control_element" prot="public" virt="non-virtual">vrv::ControlElement</basecompoundref>
    <basecompoundref refid="classvrv_1_1_time_spanning_interface" prot="public" virt="non-virtual">vrv::TimeSpanningInterface</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttColor</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttCurvature</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttCurveRend</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttLayerIdent</basecompoundref>
    <derivedcompoundref refid="classvrv_1_1_phrase" prot="public" virt="non-virtual">vrv::Phrase</derivedcompoundref>
      <sectiondef kind="user-defined">
      <header>Constructors, destructors, reset and class name methods</header>
      <description><para>Reset method resets all attribute classes </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_slur_1a1ec0689cb00d78dde080ab663e172b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::Slur::Slur</definition>
        <argsstring>()</argsstring>
        <name>Slur</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="91" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1af0c39251d4b580a4199b43135f6acd5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::Slur::Slur</definition>
        <argsstring>(ClassId classId)</argsstring>
        <name>Slur</name>
        <param>
          <type>ClassId</type>
          <declname>classId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="92" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a0e5b41a997c099a63129346c542b9a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::Slur::Slur</definition>
        <argsstring>(ClassId classId, const std::string &amp;classIdStr)</argsstring>
        <name>Slur</name>
        <param>
          <type>ClassId</type>
          <declname>classId</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>classIdStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="93" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a6487bbaf1c4a31323a85f7309853d82c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vrv::Slur::~Slur</definition>
        <argsstring>()</argsstring>
        <name>~Slur</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="94" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a9e7812ed9bc701150792295d4e277802" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Slur::Clone</definition>
        <argsstring>() const override</argsstring>
        <name>Clone</name>
        <reimplements refid="classvrv_1_1_object_1ab2d363effa62d58a65f8aba1330c1379">Clone</reimplements>
        <briefdescription>
<para>Method call for copying child classes. </para>
        </briefdescription>
        <detaileddescription>
<para>The method has to be overridden. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="95" column="12" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a44edee9624d0cf10b0e35bd772aca3a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vrv::Slur::Reset</definition>
        <argsstring>() override</argsstring>
        <name>Reset</name>
        <reimplements refid="classvrv_1_1_control_element_1ada5a97dab22c9ea6f7eff3dbfc4cd7ea">Reset</reimplements>
        <briefdescription>
<para>Virtual reset method. </para>
        </briefdescription>
        <detaileddescription>
<para>Needs to be overridden in child classes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="96" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a0a61fc1769b931320ae12a269fd6dfef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string vrv::Slur::GetClassName</definition>
        <argsstring>() const override</argsstring>
        <name>GetClassName</name>
        <reimplements refid="classvrv_1_1_object_1a85f5f4c2c61b31f3e0cfafccf6893dd3">GetClassName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="97" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="97" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getter to interfaces</header>
      <memberdef kind="function" id="classvrv_1_1_slur_1af4fa12654548c380dd0eb52f6c746c55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_time_point_interface" kindref="compound">TimePointInterface</ref> *</type>
        <definition>TimePointInterface* vrv::Slur::GetTimePointInterface</definition>
        <argsstring>() override</argsstring>
        <name>GetTimePointInterface</name>
        <reimplements refid="classvrv_1_1_object_1a738ca662cfaa09bb0122966cb29b43c6">GetTimePointInterface</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="104" column="24" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a245f41e219017a3089b4492f92d08cf1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classvrv_1_1_time_point_interface" kindref="compound">TimePointInterface</ref> *</type>
        <definition>const TimePointInterface* vrv::Slur::GetTimePointInterface</definition>
        <argsstring>() const override</argsstring>
        <name>GetTimePointInterface</name>
        <reimplements refid="classvrv_1_1_object_1af721a04d95924b4da05c2285f5b01e33">GetTimePointInterface</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="105" column="30" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1ae8bdb13e89832e0c2394cc6d77f513dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_time_spanning_interface" kindref="compound">TimeSpanningInterface</ref> *</type>
        <definition>TimeSpanningInterface* vrv::Slur::GetTimeSpanningInterface</definition>
        <argsstring>() override</argsstring>
        <name>GetTimeSpanningInterface</name>
        <reimplements refid="classvrv_1_1_object_1a2ac1817c7492a51e6bb550f3002b32de">GetTimeSpanningInterface</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="109" column="27" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1aece63ca541d9f2dfe578c0e20d15b673" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classvrv_1_1_time_spanning_interface" kindref="compound">TimeSpanningInterface</ref> *</type>
        <definition>const TimeSpanningInterface* vrv::Slur::GetTimeSpanningInterface</definition>
        <argsstring>() const override</argsstring>
        <name>GetTimeSpanningInterface</name>
        <reimplements refid="classvrv_1_1_object_1a93ba097fdba73b383a5aee0771e484d7">GetTimeSpanningInterface</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="110" column="33" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="110" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getter, setter and checker for the drawing curve direction</header>
      <memberdef kind="function" id="classvrv_1_1_slur_1aebc8bc19eb3cf4dc7c19df7aeb952f3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SlurCurveDirection</type>
        <definition>SlurCurveDirection vrv::Slur::GetDrawingCurveDir</definition>
        <argsstring>() const</argsstring>
        <name>GetDrawingCurveDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="120" column="24" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1aa678637a8f168dce40f8aba74296bbdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::SetDrawingCurveDir</definition>
        <argsstring>(SlurCurveDirection curveDir)</argsstring>
        <name>SetDrawingCurveDir</name>
        <param>
          <type>SlurCurveDirection</type>
          <declname>curveDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="121" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a80a0a6657f853b66b4f1fcf5da3b1ba3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::HasDrawingCurveDir</definition>
        <argsstring>() const</argsstring>
        <name>HasDrawingCurveDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="122" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a61fd32fb1c0a5842551a6736a9fde016" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>curvature_CURVEDIR</type>
        <definition>curvature_CURVEDIR vrv::Slur::CalcDrawingCurveDir</definition>
        <argsstring>(char spanningType) const</argsstring>
        <name>CalcDrawingCurveDir</name>
        <param>
          <type>char</type>
          <declname>spanningType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="123" column="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Additional checks based on the drawing curve direction</header>
      <memberdef kind="function" id="classvrv_1_1_slur_1a79ef69203a4c127b4263067370a4a31a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::HasMixedCurveDir</definition>
        <argsstring>() const</argsstring>
        <name>HasMixedCurveDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="130" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1abcd7805aa818cda8633aa35d607a9efe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::HasEndpointAboveStart</definition>
        <argsstring>() const</argsstring>
        <name>HasEndpointAboveStart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="135" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a38661bbed546a998f76716077bffeb48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::HasEndpointBelowStart</definition>
        <argsstring>() const</argsstring>
        <name>HasEndpointBelowStart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="140" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1ace6b566010648118388c07ea991988fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::HasEndpointAboveEnd</definition>
        <argsstring>() const</argsstring>
        <name>HasEndpointAboveEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="145" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a2692e973bd07581652583080bd59b73a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::HasEndpointBelowEnd</definition>
        <argsstring>() const</argsstring>
        <name>HasEndpointBelowEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="150" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="150" bodyend="154"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Detection of inner slurs</header>
      <memberdef kind="function" id="classvrv_1_1_slur_1a191fedd996f44848f54dacc405dbff41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::HasInnerSlur</definition>
        <argsstring>(const Slur *innerSlur) const</argsstring>
        <name>HasInnerSlur</name>
        <param>
          <type>const <ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref> *</type>
          <declname>innerSlur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="160" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a8e4388d4a78c7ca42d4b0a97dc33c755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::CalcInitialCurve</definition>
        <argsstring>(const Doc *doc, FloatingCurvePositioner *curve, NearEndCollision *nearEndCollision=NULL)</argsstring>
        <name>CalcInitialCurve</name>
        <param>
          <type>const <ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type><ref refid="structvrv_1_1_near_end_collision" kindref="compound">NearEndCollision</ref> *</type>
          <declname>nearEndCollision</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Calculate the initial slur bezier curve and store it in the curve positioner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="165" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1ac1b0ad6940cdd79b1d418080cdabaa5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::CalcSpannedElements</definition>
        <argsstring>(FloatingCurvePositioner *curve)</argsstring>
        <name>CalcSpannedElements</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <briefdescription>
<para>Recalculate the spanned elements of the curve positioner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="170" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a479f96c0f063d497932d474bcd693871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::AddPositionerToArticulations</definition>
        <argsstring>(FloatingCurvePositioner *curve)</argsstring>
        <name>AddPositionerToArticulations</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <briefdescription>
<para><ref refid="classvrv_1_1_add" kindref="compound">Add</ref> curve positioner to articulations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="175" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a0b6a473f6cbea7cf14ef2ae593fdadbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
        <definition>Staff* vrv::Slur::CalculateExtremalStaff</definition>
        <argsstring>(const Staff *staff, int xMin, int xMax)</argsstring>
        <name>CalculateExtremalStaff</name>
        <param>
          <type>const <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xMax</declname>
        </param>
        <briefdescription>
<para>Calculate the staff where the slur&apos;s floating curve positioner lives. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="181" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a31bceee0027f6435c47b955d1be94987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
        <definition>const Staff* vrv::Slur::CalculateExtremalStaff</definition>
        <argsstring>(const Staff *staff, int xMin, int xMax) const</argsstring>
        <name>CalculateExtremalStaff</name>
        <param>
          <type>const <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="182" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_slur_1ac91b83f8f14d2227eb227763f7557cec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; const <ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *, const <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> * &gt;</type>
        <definition>std::pair&lt;const Layer *, const LayerElement *&gt; vrv::Slur::GetBoundaryLayer</definition>
        <argsstring>() const</argsstring>
        <name>GetBoundaryLayer</name>
        <briefdescription>
<para>Determine the slur&apos;s layer/cross staff by only considering the boundary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="189" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1af1d3cfea2fd85f61fe7b2504076a20f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
        <definition>const Staff* vrv::Slur::GetBoundaryCrossStaff</definition>
        <argsstring>() const</argsstring>
        <name>GetBoundaryCrossStaff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="190" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_slur_1a435e30e4f2700e05bf8100ce95451c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::AdjustSlur</definition>
        <argsstring>(const Doc *doc, FloatingCurvePositioner *curve, int unit)</argsstring>
        <name>AdjustSlur</name>
        <param>
          <type>const <ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para><ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref> adjustment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="202" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1abb3261895833f825208070d230fc69b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::AdjustOuterSlur</definition>
        <argsstring>(const Doc *doc, FloatingCurvePositioner *curve, const ArrayOfFloatingCurvePositioners &amp;innerCurves, int unit)</argsstring>
        <name>AdjustOuterSlur</name>
        <param>
          <type>const <ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>const ArrayOfFloatingCurvePositioners &amp;</type>
          <declname>innerCurves</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="204" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a8b8c1b7a6809dc269c02c9c80d7d9b97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float vrv::Slur::GetAdjustedSlurAngle</definition>
        <argsstring>(const Doc *doc, Point &amp;p1, Point &amp;p2, curvature_CURVEDIR curveDir) const</argsstring>
        <name>GetAdjustedSlurAngle</name>
        <param>
          <type>const <ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>curvature_CURVEDIR</type>
          <declname>curveDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="207" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_slur_1a8363bfafa733753cbaff19a3978f8ebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>FunctorCode</type>
        <definition>FunctorCode vrv::Slur::Accept</definition>
        <argsstring>(Functor &amp;functor) override</argsstring>
        <name>Accept</name>
        <reimplements refid="classvrv_1_1_control_element_1af1c21268c89fb885ff36c2d0583f7b00">Accept</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_functor" kindref="compound">Functor</ref> &amp;</type>
          <declname>functor</declname>
        </param>
        <briefdescription>
<para><ref refid="classvrv_1_1_interface" kindref="compound">Interface</ref> for class functor visitation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="218" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a1535fc7c420b527645ae039bbf6b86d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>FunctorCode</type>
        <definition>FunctorCode vrv::Slur::Accept</definition>
        <argsstring>(ConstFunctor &amp;functor) const override</argsstring>
        <name>Accept</name>
        <reimplements refid="classvrv_1_1_control_element_1a6d5919267cc78de27e1853518222a7b1">Accept</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_const_functor" kindref="compound">ConstFunctor</ref> &amp;</type>
          <declname>functor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="219" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1aa7ccff252e9d575c437a9300397243c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>FunctorCode</type>
        <definition>FunctorCode vrv::Slur::AcceptEnd</definition>
        <argsstring>(Functor &amp;functor) override</argsstring>
        <name>AcceptEnd</name>
        <reimplements refid="classvrv_1_1_control_element_1aa2105e9cc71072769d1ea4eb60349716">AcceptEnd</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_functor" kindref="compound">Functor</ref> &amp;</type>
          <declname>functor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="220" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a0ad32d4b84033b99dfe40f8be7ee131f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>FunctorCode</type>
        <definition>FunctorCode vrv::Slur::AcceptEnd</definition>
        <argsstring>(ConstFunctor &amp;functor) const override</argsstring>
        <name>AcceptEnd</name>
        <reimplements refid="classvrv_1_1_control_element_1aae12767594ee342ee2ce3c1be46155f1">AcceptEnd</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_const_functor" kindref="compound">ConstFunctor</ref> &amp;</type>
          <declname>functor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="221" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_slur_1a1fa3ae7ffa4072755bce165103e1ef6e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvrv_1_1_spanned_elements" kindref="compound">SpannedElements</ref></type>
        <definition>SpannedElements vrv::Slur::CollectSpannedElements</definition>
        <argsstring>(const Staff *staff, int xMin, int xMax) const</argsstring>
        <name>CollectSpannedElements</name>
        <param>
          <type>const <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xMax</declname>
        </param>
        <briefdescription>
<para>Helper for calculating spanned elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="230" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a172a683e43f5efc07b7df01e79fe8e83" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::AddSpannedElements</definition>
        <argsstring>(FloatingCurvePositioner *curve, const SpannedElements &amp;elements, Staff *staff, int xMin, int xMax)</argsstring>
        <name>AddSpannedElements</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>const <ref refid="structvrv_1_1_spanned_elements" kindref="compound">SpannedElements</ref> &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="232" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a9933e8e2f9c92a75e6800d0f2b4d2d58" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::IsElementBelow</definition>
        <argsstring>(const LayerElement *element, const Staff *startStaff, const Staff *endStaff) const</argsstring>
        <name>IsElementBelow</name>
        <param>
          <type>const <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>startStaff</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>endStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="235" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a042af0fd53b535540d41b8922eace073" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::IsElementBelow</definition>
        <argsstring>(const FloatingPositioner *positioner, const Staff *startStaff, const Staff *endStaff) const</argsstring>
        <name>IsElementBelow</name>
        <param>
          <type>const <ref refid="classvrv_1_1_floating_positioner" kindref="compound">FloatingPositioner</ref> *</type>
          <declname>positioner</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>startStaff</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>endStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="236" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1aff3f9a6736685a00f98890e8bb699501" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::DiscardTupletElements</definition>
        <argsstring>(FloatingCurvePositioner *curve, int xMin, int xMax)</argsstring>
        <name>DiscardTupletElements</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xMin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="238" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_slur_1aac3d86a03edf3a035d0f24f22437ebec" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classvrv_1_1_point" kindref="compound">Point</ref>, <ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &gt;</type>
        <definition>std::pair&lt;Point, Point&gt; vrv::Slur::CalcEndPoints</definition>
        <argsstring>(const Doc *doc, const Staff *staff, NearEndCollision *nearEndCollision, int x1, int x2, curvature_CURVEDIR drawingCurveDir, char spanningType) const</argsstring>
        <name>CalcEndPoints</name>
        <param>
          <type>const <ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type><ref refid="structvrv_1_1_near_end_collision" kindref="compound">NearEndCollision</ref> *</type>
          <declname>nearEndCollision</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>curvature_CURVEDIR</type>
          <declname>drawingCurveDir</declname>
        </param>
        <param>
          <type>char</type>
          <declname>spanningType</declname>
        </param>
        <briefdescription>
<para>Helper for calculating the initial slur. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="246" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a8e9d3c96e496facede3924db1649a2b0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::ConsiderMelodicDirection</definition>
        <argsstring>() const</argsstring>
        <name>ConsiderMelodicDirection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="249" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a10771d5591c5792a08145be896782b6f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>std::pair&lt;int, int&gt; vrv::Slur::GetStartEndLocs</definition>
        <argsstring>(const Note *startNote, const Chord *startChord, const Note *endNote, const Chord *endChord) const</argsstring>
        <name>GetStartEndLocs</name>
        <param>
          <type>const <ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>startNote</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>startChord</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>endNote</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>endChord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="251" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1adb16600ae6ce2343c6b354073f415970" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Slur::CalcPitchDifference</definition>
        <argsstring>(const Staff *staff, int startLoc, int endLoc) const</argsstring>
        <name>CalcPitchDifference</name>
        <param>
          <type>const <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startLoc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endLoc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="254" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a562b4b55746824b34a6424d2cbfd898c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PortatoSlurType</type>
        <definition>PortatoSlurType vrv::Slur::IsPortatoSlur</definition>
        <argsstring>(const Doc *doc, const Note *startNote, const Chord *startChord) const</argsstring>
        <name>IsPortatoSlur</name>
        <param>
          <type>const <ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>startNote</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>startChord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="256" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a23cf844d440889da6d5b25d5c47eb9dd" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::StartsOnBeam</definition>
        <argsstring>() const</argsstring>
        <name>StartsOnBeam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="258" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a8ec242b66414458ac2fbb764954461d2" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::EndsOnBeam</definition>
        <argsstring>() const</argsstring>
        <name>EndsOnBeam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="259" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="259" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1aa0faa81e2bbf612da49c3da7f0f17b85" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::HasBoundaryOnBeam</definition>
        <argsstring>(bool isStart) const</argsstring>
        <name>HasBoundaryOnBeam</name>
        <param>
          <type>bool</type>
          <declname>isStart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="260" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_slur_1ad020b6ee80fdcca7d42d66a1d67dd4eb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::FilterSpannedElements</definition>
        <argsstring>(FloatingCurvePositioner *curve, const BezierCurve &amp;bezierCurve, int margin)</argsstring>
        <name>FilterSpannedElements</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezierCurve</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
<para>Adjust slur position based on overlapping objects within its spanning elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="268" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a3edef2a42b791866b101a905a79d7a8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvrv_1_1_near_end_collision" kindref="compound">NearEndCollision</ref></type>
        <definition>NearEndCollision vrv::Slur::DetectCollisionsNearEnd</definition>
        <argsstring>(FloatingCurvePositioner *curve, const BezierCurve &amp;bezierCurve, int margin)</argsstring>
        <name>DetectCollisionsNearEnd</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezierCurve</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="271" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1adc738e558ad5154f3325ca49698d2dd0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>std::pair&lt;int, int&gt; vrv::Slur::CalcEndPointShift</definition>
        <argsstring>(FloatingCurvePositioner *curve, const BezierCurve &amp;bezierCurve, double flexibility, int margin)</argsstring>
        <name>CalcEndPointShift</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezierCurve</declname>
        </param>
        <param>
          <type>double</type>
          <declname>flexibility</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="275" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a8ae7260dabedeffaefc0a4b447047d4c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::ApplyEndPointShift</definition>
        <argsstring>(FloatingCurvePositioner *curve, BezierCurve &amp;bezierCurve, int endPointShiftLeft, int endPointShiftRight)</argsstring>
        <name>ApplyEndPointShift</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezierCurve</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endPointShiftLeft</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endPointShiftRight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="279" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a3b04761decc472a19549ae446f1b42a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::AdjustSlurFromBulge</definition>
        <argsstring>(FloatingCurvePositioner *curve, BezierCurve &amp;bezierCurve, int unit)</argsstring>
        <name>AdjustSlurFromBulge</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezierCurve</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="283" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a06424c1c48e96ec65f7aef9252471a7b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Slur::AllowControlOffsetAdjustment</definition>
        <argsstring>(const BezierCurve &amp;bezierCurve, double symmetry, int unit) const</argsstring>
        <name>AllowControlOffsetAdjustment</name>
        <param>
          <type>const <ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezierCurve</declname>
        </param>
        <param>
          <type>double</type>
          <declname>symmetry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="286" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a652ca54f30e9b820c662bdacae0f426f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; bool, int, int &gt;</type>
        <definition>std::tuple&lt;bool, int, int&gt; vrv::Slur::CalcControlPointOffset</definition>
        <argsstring>(FloatingCurvePositioner *curve, const BezierCurve &amp;bezierCurve, int margin)</argsstring>
        <name>CalcControlPointOffset</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezierCurve</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="289" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a280d7c3b7e35b88a287d036b66dbd266" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvrv_1_1_control_point_adjustment" kindref="compound">ControlPointAdjustment</ref></type>
        <definition>ControlPointAdjustment vrv::Slur::CalcControlPointVerticalShift</definition>
        <argsstring>(FloatingCurvePositioner *curve, const BezierCurve &amp;bezierCurve, double symmetry, int margin)</argsstring>
        <name>CalcControlPointVerticalShift</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezierCurve</declname>
        </param>
        <param>
          <type>double</type>
          <declname>symmetry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="293" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a71c1405941d5d4dc69b75fbe7a70908d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>std::pair&lt;int, int&gt; vrv::Slur::SolveControlPointConstraints</definition>
        <argsstring>(const std::list&lt; ControlPointConstraint &gt; &amp;constraints, double symmetry=0.0) const</argsstring>
        <name>SolveControlPointConstraints</name>
        <param>
          <type>const std::list&lt; <ref refid="structvrv_1_1_control_point_constraint" kindref="compound">ControlPointConstraint</ref> &gt; &amp;</type>
          <declname>constraints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>symmetry</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="297" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a4d31a268f44b474f47091fc158b8b02d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::AdjustSlurShape</definition>
        <argsstring>(BezierCurve &amp;bezierCurve, curvature_CURVEDIR dir, int unit)</argsstring>
        <name>AdjustSlurShape</name>
        <param>
          <type><ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezierCurve</declname>
        </param>
        <param>
          <type>curvature_CURVEDIR</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="301" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_slur_1add43c791df75b2d6b38e8ba5dec468c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvrv_1_1_control_point_adjustment" kindref="compound">ControlPointAdjustment</ref></type>
        <definition>ControlPointAdjustment vrv::Slur::CalcControlPointShift</definition>
        <argsstring>(FloatingCurvePositioner *curve, const BezierCurve &amp;bezierCurve, const ArrayOfFloatingCurvePositioners &amp;innerCurves, double symmetry, int margin)</argsstring>
        <name>CalcControlPointShift</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezierCurve</declname>
        </param>
        <param>
          <type>const ArrayOfFloatingCurvePositioners &amp;</type>
          <declname>innerCurves</declname>
        </param>
        <param>
          <type>double</type>
          <declname>symmetry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
<para>Adjust slur position based on inner slurs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="309" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1ab81dedae2d1ff31e656c9745d3f6e58a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>std::pair&lt;int, int&gt; vrv::Slur::CalcEndPointShift</definition>
        <argsstring>(FloatingCurvePositioner *curve, const BezierCurve &amp;bezierCurve, const ArrayOfFloatingCurvePositioners &amp;innerCurves, double flexibility, int margin)</argsstring>
        <name>CalcEndPointShift</name>
        <param>
          <type><ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezierCurve</declname>
        </param>
        <param>
          <type>const ArrayOfFloatingCurvePositioners &amp;</type>
          <declname>innerCurves</declname>
        </param>
        <param>
          <type>double</type>
          <declname>flexibility</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="313" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_slur_1adc782d8c73385030d24ad5a055031742" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::ShiftEndPoints</definition>
        <argsstring>(int &amp;shiftLeft, int &amp;shiftRight, double ratio, int intersection, double flexibility, bool isBelow, char spanningType) const</argsstring>
        <name>ShiftEndPoints</name>
        <param>
          <type>int &amp;</type>
          <declname>shiftLeft</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>shiftRight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>int</type>
          <declname>intersection</declname>
        </param>
        <param>
          <type>double</type>
          <declname>flexibility</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isBelow</declname>
        </param>
        <param>
          <type>char</type>
          <declname>spanningType</declname>
        </param>
        <briefdescription>
<para>Low level helper functions for slur adjustment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="322" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1aa8ca4ecf910c8f5ba5cbd320c11721dc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt;double, double&gt; vrv::Slur::CalcShiftRadii</definition>
        <argsstring>(bool forShiftLeft, double flexibility, char spanningType) const</argsstring>
        <name>CalcShiftRadii</name>
        <param>
          <type>bool</type>
          <declname>forShiftLeft</declname>
        </param>
        <param>
          <type>double</type>
          <declname>flexibility</declname>
        </param>
        <param>
          <type>char</type>
          <declname>spanningType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="326" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1ac772cdc6ab913b3ae4cc7fc4c241e8eb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::Slur::CalcQuadraticInterpolation</definition>
        <argsstring>(double zeroAt, double oneAt, double arg) const</argsstring>
        <name>CalcQuadraticInterpolation</name>
        <param>
          <type>double</type>
          <declname>zeroAt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>oneAt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="329" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a37ed6f07966aaec7b66d5abb76f1c417" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::Slur::RotateSlope</definition>
        <argsstring>(double slope, double degrees, double doublingBound, bool upwards) const</argsstring>
        <name>RotateSlope</name>
        <param>
          <type>double</type>
          <declname>slope</declname>
        </param>
        <param>
          <type>double</type>
          <declname>degrees</declname>
        </param>
        <param>
          <type>double</type>
          <declname>doublingBound</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upwards</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="334" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_slur_1a938bab0c49f226d7bed912890d9dd245" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float vrv::Slur::GetMinControlPointAngle</definition>
        <argsstring>(const BezierCurve &amp;bezierCurve, float angle, int unit) const</argsstring>
        <name>GetMinControlPointAngle</name>
        <param>
          <type>const <ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezierCurve</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="337" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvrv_1_1_slur_1a7d99192c481e7202eef63242d3c5947d" prot="private" static="no" mutable="no">
        <type>SlurCurveDirection</type>
        <definition>SlurCurveDirection vrv::Slur::m_drawingCurveDir</definition>
        <argsstring></argsstring>
        <name>m_drawingCurveDir</name>
        <briefdescription>
<para>The drawing curve direction This is calculated in the <ref refid="classvrv_1_1_calc_slur_direction_functor" kindref="compound">CalcSlurDirectionFunctor</ref> and contains an additional distinction for s-shaped slurs / mixed direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="348" column="24" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvrv_1_1_slur_1a48b731aec93e5ea7ba9513fcdcc0f60e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Slur::InitBezierControlSides</definition>
        <argsstring>(BezierCurve &amp;bezier, curvature_CURVEDIR curveDir) const</argsstring>
        <name>InitBezierControlSides</name>
        <param>
          <type><ref refid="classvrv_1_1_bezier_curve" kindref="compound">BezierCurve</ref> &amp;</type>
          <declname>bezier</declname>
        </param>
        <param>
          <type>curvature_CURVEDIR</type>
          <declname>curveDir</declname>
        </param>
        <briefdescription>
<para>Set the bezier control sides depending on the curve direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="196" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="24">
        <label>vrv::Phrase</label>
        <link refid="classvrv_1_1_phrase"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>vrv::LinkingInterface</label>
        <link refid="classvrv_1_1_linking_interface"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>vrv::TimePointInterface</label>
        <link refid="classvrv_1_1_time_point_interface"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>vrv::FloatingObject</label>
        <link refid="classvrv_1_1_floating_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>AttTyped</label>
      </node>
      <node id="5">
        <label>vrv::BoundingBox</label>
        <link refid="classvrv_1_1_bounding_box"/>
      </node>
      <node id="16">
        <label>AttStartId</label>
      </node>
      <node id="7">
        <label>vrv::Interface</label>
        <link refid="classvrv_1_1_interface"/>
      </node>
      <node id="13">
        <label>vrv::TimeSpanningInterface</label>
        <link refid="classvrv_1_1_time_spanning_interface"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>AttTimestamp2Log</label>
      </node>
      <node id="18">
        <label>AttStartEndId</label>
      </node>
      <node id="17">
        <label>AttTimestampLog</label>
      </node>
      <node id="8">
        <label>AttAltSym</label>
      </node>
      <node id="23">
        <label>AttLayerIdent</label>
      </node>
      <node id="10">
        <label>AttLinking</label>
      </node>
      <node id="6">
        <label>vrv::AltSymInterface</label>
        <link refid="classvrv_1_1_alt_sym_interface"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>vrv::Slur</label>
        <link refid="classvrv_1_1_slur"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>AttStaffIdent</label>
      </node>
      <node id="2">
        <label>vrv::ControlElement</label>
        <link refid="classvrv_1_1_control_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>vrv::Object</label>
        <link refid="classvrv_1_1_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>AttCurveRend</label>
      </node>
      <node id="21">
        <label>AttCurvature</label>
      </node>
      <node id="20">
        <label>AttColor</label>
      </node>
      <node id="11">
        <label>AttLabelled</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18">
        <label>vrv::LayerElement</label>
        <link refid="classvrv_1_1_layer_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_crossLayer</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_crossStaff</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_graceAlignment</edgelabel>
          <edgelabel>m_alignment</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>vrv::LinkingInterface</label>
        <link refid="classvrv_1_1_linking_interface"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>AttMultinumMeasures</label>
      </node>
      <node id="14">
        <label>vrv::TimePointInterface</label>
        <link refid="classvrv_1_1_time_point_interface"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_start</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>vrv::ScoreDefElement</label>
        <link refid="classvrv_1_1_score_def_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>vrv::FloatingObject</label>
        <link refid="classvrv_1_1_floating_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>AttCourseLog</label>
      </node>
      <node id="44">
        <label>AttSystems</label>
      </node>
      <node id="28">
        <label>vrv::Staff</label>
        <link refid="classvrv_1_1_staff"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_drawingTuning</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>m_drawingStaffDef</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>AttBarring</label>
      </node>
      <node id="46">
        <label>AttDistances</label>
      </node>
      <node id="12">
        <label>AttTyped</label>
      </node>
      <node id="5">
        <label>vrv::BoundingBox</label>
        <link refid="classvrv_1_1_bounding_box"/>
      </node>
      <node id="34">
        <label>vrv::ScoreDefInterface</label>
        <link refid="classvrv_1_1_score_def_interface"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>AttStartId</label>
      </node>
      <node id="7">
        <label>vrv::Interface</label>
        <link refid="classvrv_1_1_interface"/>
      </node>
      <node id="40">
        <label>AttMmTempo</label>
      </node>
      <node id="39">
        <label>AttMidiTempo</label>
      </node>
      <node id="27">
        <label>AttVisibility</label>
      </node>
      <node id="13">
        <label>vrv::TimeSpanningInterface</label>
        <link refid="classvrv_1_1_time_spanning_interface"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
        <childnode refid="55" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>AttStaffDefVis</label>
      </node>
      <node id="55">
        <label>AttTimestamp2Log</label>
      </node>
      <node id="26">
        <label>AttNInteger</label>
      </node>
      <node id="22">
        <label>vrv::Layer</label>
        <link refid="classvrv_1_1_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>AttSpacing</label>
      </node>
      <node id="19">
        <label>vrv::FacsimileInterface</label>
        <link refid="classvrv_1_1_facsimile_interface"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>AttNotationType</label>
      </node>
      <node id="21">
        <label>AttCoordX1</label>
      </node>
      <node id="23">
        <label>vrv::DrawingListInterface</label>
        <link refid="classvrv_1_1_drawing_list_interface"/>
      </node>
      <node id="54">
        <label>AttStartEndId</label>
      </node>
      <node id="29">
        <label>AttCoordY1</label>
      </node>
      <node id="17">
        <label>AttTimestampLog</label>
      </node>
      <node id="8">
        <label>AttAltSym</label>
      </node>
      <node id="30">
        <label>vrv::Tuning</label>
        <link refid="classvrv_1_1_tuning"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>AttLayerIdent</label>
      </node>
      <node id="45">
        <label>vrv::StaffDefDrawingInterface</label>
        <link refid="classvrv_1_1_staff_def_drawing_interface"/>
      </node>
      <node id="32">
        <label>vrv::StaffDef</label>
        <link refid="classvrv_1_1_staff_def"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="public-inheritance">
        </childnode>
        <childnode refid="50" relation="public-inheritance">
        </childnode>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
        <childnode refid="52" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>AttLinking</label>
      </node>
      <node id="37">
        <label>AttLyricStyle</label>
      </node>
      <node id="20">
        <label>AttFacsimile</label>
      </node>
      <node id="52">
        <label>AttTransposition</label>
      </node>
      <node id="36">
        <label>AttDurationDefault</label>
      </node>
      <node id="25">
        <label>AttCue</label>
      </node>
      <node id="6">
        <label>vrv::AltSymInterface</label>
        <link refid="classvrv_1_1_alt_sym_interface"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>vrv::Alignment</label>
        <link refid="classvrv_1_1_alignment"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>AttPianoPedals</label>
      </node>
      <node id="49">
        <label>AttStaffDefLog</label>
      </node>
      <node id="1">
        <label>vrv::Slur</label>
        <link refid="classvrv_1_1_slur"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="56" relation="public-inheritance">
        </childnode>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>AttStaffIdent</label>
      </node>
      <node id="2">
        <label>vrv::ControlElement</label>
        <link refid="classvrv_1_1_control_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>vrv::Object</label>
        <link refid="classvrv_1_1_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>AttCurveRend</label>
      </node>
      <node id="57">
        <label>AttCurvature</label>
      </node>
      <node id="56">
        <label>AttColor</label>
      </node>
      <node id="38">
        <label>AttMeasureNumbers</label>
      </node>
      <node id="48">
        <label>AttScalable</label>
      </node>
      <node id="24">
        <label>vrv::ObjectListInterface</label>
        <link refid="classvrv_1_1_object_list_interface"/>
      </node>
      <node id="51">
        <label>AttTimeBase</label>
      </node>
      <node id="11">
        <label>AttLabelled</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h" line="84" column="34" bodyfile="/home/runner/work/verovio/verovio/include/vrv/slur.h" bodystart="79" bodyend="349"/>
    <listofallmembers>
      <member refid="classvrv_1_1_slur_1a8363bfafa733753cbaff19a3978f8ebb" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>Accept</name></member>
      <member refid="classvrv_1_1_slur_1a1535fc7c420b527645ae039bbf6b86d8" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>Accept</name></member>
      <member refid="classvrv_1_1_slur_1aa7ccff252e9d575c437a9300397243c3" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>AcceptEnd</name></member>
      <member refid="classvrv_1_1_slur_1a0ad32d4b84033b99dfe40f8be7ee131f" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>AcceptEnd</name></member>
      <member refid="classvrv_1_1_linking_interface_1aaa4632e05d5d887b26dbf1789c84f573" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>AddBackLink</name></member>
      <member refid="classvrv_1_1_object_1a2ab113f1faf62ee0332687ff981c0948" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>AddChild</name></member>
      <member refid="classvrv_1_1_slur_1a479f96c0f063d497932d474bcd693871" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>AddPositionerToArticulations</name></member>
      <member refid="classvrv_1_1_slur_1a172a683e43f5efc07b7df01e79fe8e83" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>AddSpannedElements</name></member>
      <member refid="classvrv_1_1_time_point_interface_1a67678cf06ae06579a830344df5c5598a" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>AddStaff</name></member>
      <member refid="classvrv_1_1_slur_1abb3261895833f825208070d230fc69b5" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>AdjustOuterSlur</name></member>
      <member refid="classvrv_1_1_slur_1a435e30e4f2700e05bf8100ce95451c86" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>AdjustSlur</name></member>
      <member refid="classvrv_1_1_slur_1a3b04761decc472a19549ae446f1b42a4" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>AdjustSlurFromBulge</name></member>
      <member refid="classvrv_1_1_slur_1a4d31a268f44b474f47091fc158b8b02d" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>AdjustSlurShape</name></member>
      <member refid="classvrv_1_1_slur_1a06424c1c48e96ec65f7aef9252471a7b" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>AllowControlOffsetAdjustment</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1a845bedb313536e6d19b235330e613860" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>AltSymInterface</name></member>
      <member refid="classvrv_1_1_slur_1a8ae7260dabedeffaefc0a4b447047d4c" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>ApplyEndPointShift</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae9a22cf5d306abb22ff5f557e81bd9af" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ApproximateBezierBoundingBox</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3901a5e4a728b8f3450cce0e30f4bd29" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ApproximateBezierExtrema</name></member>
      <member refid="classvrv_1_1_bounding_box_1aa466757865d8f747cbaaf232e3051177" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ArePointsClose</name></member>
      <member refid="classvrv_1_1_object_1aa63ca849b67044acc38f89a6030b03c2" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>binaryComp</name></member>
      <member refid="classvrv_1_1_bounding_box_1a5601855899250709d9fa94f3c280aa72" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>BoundingBox</name></member>
      <member refid="classvrv_1_1_bounding_box_1a91eb3e2ee9b00bc764283fe1710e199b" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcBezierAtPosition</name></member>
      <member refid="classvrv_1_1_bounding_box_1af1fdd065b198aafe35dcc7e5a35477ee" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcBezierParamAtPosition</name></member>
      <member refid="classvrv_1_1_slur_1a652ca54f30e9b820c662bdacae0f426f" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcControlPointOffset</name></member>
      <member refid="classvrv_1_1_slur_1add43c791df75b2d6b38e8ba5dec468c1" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcControlPointShift</name></member>
      <member refid="classvrv_1_1_slur_1a280d7c3b7e35b88a287d036b66dbd266" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcControlPointVerticalShift</name></member>
      <member refid="classvrv_1_1_bounding_box_1ac09f7239af89a7e19ca235761589e150" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcDeCasteljau</name></member>
      <member refid="classvrv_1_1_bounding_box_1a8008673c300accccc6dd7f10a2f12d45" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcDistance</name></member>
      <member refid="classvrv_1_1_slur_1a61fd32fb1c0a5842551a6736a9fde016" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcDrawingCurveDir</name></member>
      <member refid="classvrv_1_1_slur_1aac3d86a03edf3a035d0f24f22437ebec" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcEndPoints</name></member>
      <member refid="classvrv_1_1_slur_1adc738e558ad5154f3325ca49698d2dd0" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcEndPointShift</name></member>
      <member refid="classvrv_1_1_slur_1ab81dedae2d1ff31e656c9745d3f6e58a" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcEndPointShift</name></member>
      <member refid="classvrv_1_1_slur_1a8e4388d4a78c7ca42d4b0a97dc33c755" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcInitialCurve</name></member>
      <member refid="classvrv_1_1_bounding_box_1af5401bb6040fe859bf6b7dc09c3c35b8" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcLinearInterpolation</name></member>
      <member refid="classvrv_1_1_slur_1adb16600ae6ce2343c6b354073f415970" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcPitchDifference</name></member>
      <member refid="classvrv_1_1_bounding_box_1acf2951ebea74c27b024916a4c96480a5" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcPointAtBezier</name></member>
      <member refid="classvrv_1_1_bounding_box_1a80465f84c7190f8cb0a9765693376be2" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcPositionAfterRotation</name></member>
      <member refid="classvrv_1_1_slur_1ac772cdc6ab913b3ae4cc7fc4c241e8eb" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcQuadraticInterpolation</name></member>
      <member refid="classvrv_1_1_slur_1aa8ca4ecf910c8f5ba5cbd320c11721dc" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcShiftRadii</name></member>
      <member refid="classvrv_1_1_bounding_box_1a98f3d30610a0063965fcac7ec265ef27" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcSlope</name></member>
      <member refid="classvrv_1_1_slur_1ac1b0ad6940cdd79b1d418080cdabaa5f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcSpannedElements</name></member>
      <member refid="classvrv_1_1_bounding_box_1a8fdd811aefcb373533b9cc2795aa04dd" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalcThickBezier</name></member>
      <member refid="classvrv_1_1_slur_1a0b6a473f6cbea7cf14ef2ae593fdadbb" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalculateExtremalStaff</name></member>
      <member refid="classvrv_1_1_slur_1a31bceee0027f6435c47b955d1be94987" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>CalculateExtremalStaff</name></member>
      <member refid="classvrv_1_1_object_1a0af864d1b64a70d4ec8b62a520114bde" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ClearChildren</name></member>
      <member refid="classvrv_1_1_object_1a667b4432b8f9d9e92bfd34fe5c885099" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ClearRelinquishedChildren</name></member>
      <member refid="classvrv_1_1_slur_1a9e7812ed9bc701150792295d4e277802" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>Clone</name></member>
      <member refid="classvrv_1_1_object_1a2a1c4d0ed1a15f33637b03670c9aa98f" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>CloneReset</name></member>
      <member refid="classvrv_1_1_slur_1a1fa3ae7ffa4072755bce165103e1ef6e" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>CollectSpannedElements</name></member>
      <member refid="classvrv_1_1_slur_1a8e9d3c96e496facede3924db1649a2b0" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>ConsiderMelodicDirection</name></member>
      <member refid="classvrv_1_1_control_element_1a85bf4f12a52a3484bd10a638b4b3fbe8" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ControlElement</name></member>
      <member refid="classvrv_1_1_control_element_1aa9be5bc11d51b4d8c0be3ccc93baf6bf" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ControlElement</name></member>
      <member refid="classvrv_1_1_control_element_1a3609eb955915e4f36e0be4262f34176b" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ControlElement</name></member>
      <member refid="classvrv_1_1_object_1a4bf38f527d70161c92062a2347b7c11e" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>CopyChildren</name></member>
      <member refid="classvrv_1_1_object_1aa24fba8bae1f0876567f564f98020966" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>DeleteChild</name></member>
      <member refid="classvrv_1_1_object_1acbb7a83e4ae3f1ba54bcd408dce066ee" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>DeleteChildrenByComparison</name></member>
      <member refid="classvrv_1_1_object_1ac846569894fc8b08083e5a8526ba5834" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>DetachChild</name></member>
      <member refid="classvrv_1_1_slur_1a3edef2a42b791866b101a905a79d7a8f" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>DetectCollisionsNearEnd</name></member>
      <member refid="classvrv_1_1_slur_1aff3f9a6736685a00f98890e8bb699501" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>DiscardTupletElements</name></member>
      <member refid="classvrv_1_1_bounding_box_1a52ac837dc797c5f292c98ddb3f43a098" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Encloses</name></member>
      <member refid="classvrv_1_1_slur_1a8ec242b66414458ac2fbb764954461d2" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>EndsOnBeam</name></member>
      <member refid="classvrv_1_1_object_1a24dd9389c537dda7046c097132ae9a9a" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FillFlatList</name></member>
      <member refid="classvrv_1_1_slur_1ad020b6ee80fdcca7d42d66a1d67dd4eb" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>FilterSpannedElements</name></member>
      <member refid="classvrv_1_1_object_1accb9f790ac276469b8ca9ce7ca5fe19d" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindAllDescendantsBetween</name></member>
      <member refid="classvrv_1_1_object_1a0d0ae6bac5470fbd7aa1555edf9341e5" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindAllDescendantsBetween</name></member>
      <member refid="classvrv_1_1_object_1a02c322a63d089b388e6b122598e88077" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindAllDescendantsByComparison</name></member>
      <member refid="classvrv_1_1_object_1adedb8c10d4e5f780f48aa1a45cf3d20f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindAllDescendantsByComparison</name></member>
      <member refid="classvrv_1_1_object_1a56b1782e737b97f3e3145cbe08296b19" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindAllDescendantsByType</name></member>
      <member refid="classvrv_1_1_object_1a41ee471e72e60d72b177f9f97264fab3" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindAllDescendantsByType</name></member>
      <member refid="classvrv_1_1_object_1a75077fdacaa928e36fe20b90eaca7a7a" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindDescendantByComparison</name></member>
      <member refid="classvrv_1_1_object_1a948e6633d515f523bb38dad79af046b2" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindDescendantByComparison</name></member>
      <member refid="classvrv_1_1_object_1a00d5ad76400a768dd634806998166ab7" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindDescendantByID</name></member>
      <member refid="classvrv_1_1_object_1a71f296d277f77a37c45687f97a73bf83" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindDescendantByID</name></member>
      <member refid="classvrv_1_1_object_1a2c65f3e559db5add1055a45e60d44536" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindDescendantByType</name></member>
      <member refid="classvrv_1_1_object_1a6765a4a8d789472f5c0b1598440d675f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindDescendantByType</name></member>
      <member refid="classvrv_1_1_object_1a95acdd9f46d55cf067b567ef11526b68" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindDescendantExtremeByComparison</name></member>
      <member refid="classvrv_1_1_object_1af9c8c3326a8eb6745bb1a94da8d76627" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindDescendantExtremeByComparison</name></member>
      <member refid="classvrv_1_1_object_1a5783461a8f5bee6d95391b86e0004ff4" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindNextChild</name></member>
      <member refid="classvrv_1_1_object_1a4750585ae6b8737aba3408fcc863dfeb" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FindPreviousChild</name></member>
      <member refid="classvrv_1_1_floating_object_1a881e66e4ba71468555b7a8abae6a346e" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FloatingObject</name></member>
      <member refid="classvrv_1_1_floating_object_1a0988447a69fd83a982391248f4a19944" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FloatingObject</name></member>
      <member refid="classvrv_1_1_floating_object_1a41170245f10c43785287cacb6e34013b" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>FloatingObject</name></member>
      <member refid="classvrv_1_1_object_1ab61ec322562aee0247f49e9fb008a448" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GenerateHashID</name></member>
      <member refid="classvrv_1_1_slur_1a8b8c1b7a6809dc269c02c9c80d7d9b97" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetAdjustedSlurAngle</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1ab8910be3f566440cde2cf57108248478" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetAltSymbolDef</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1ab1e4641a3121765874883831aeb7d9b0" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetAltSymbolDef</name></member>
      <member refid="classvrv_1_1_control_element_1a22fbd4dac4a60f6f69df110cb2e462ea" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetAltSymInterface</name></member>
      <member refid="classvrv_1_1_control_element_1a8e8c44534cf6a7b06c7dac287788af30" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetAltSymInterface</name></member>
      <member refid="classvrv_1_1_object_1a9520082549d438647a7fc8b1126675b4" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetAncestors</name></member>
      <member refid="classvrv_1_1_object_1a323a71a1cb0b2a956e37c4e3da49a0fb" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetAncestors</name></member>
      <member refid="classvrv_1_1_object_1a6cadd7a0feb1425165258e599090f9f9" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetAreaPosInterface</name></member>
      <member refid="classvrv_1_1_object_1aa91dde17d5e02f9fb15441d175ec9ab1" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetAreaPosInterface</name></member>
      <member refid="classvrv_1_1_interface_1aa0b1e2570e8f6c9d0c7f9edd28fc344c" prot="public" virt="non-virtual" ambiguityscope="vrv::"><scope>vrv::Slur</scope><name>GetAttClasses</name></member>
      <member refid="classvrv_1_1_interface_1aa0b1e2570e8f6c9d0c7f9edd28fc344c" prot="public" virt="non-virtual" ambiguityscope="vrv::LinkingInterface::"><scope>vrv::Slur</scope><name>GetAttClasses</name></member>
      <member refid="classvrv_1_1_interface_1aa0b1e2570e8f6c9d0c7f9edd28fc344c" prot="public" virt="non-virtual" ambiguityscope="vrv::TimeSpanningInterface::"><scope>vrv::Slur</scope><name>GetAttClasses</name></member>
      <member refid="classvrv_1_1_object_1aeb7e152a62704071901972bbfa06062c" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetAttributes</name></member>
      <member refid="classvrv_1_1_object_1a6d9d3ae387831fac891f903349348310" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetBeamDrawingInterface</name></member>
      <member refid="classvrv_1_1_object_1ab136df3273e12a93e3699ae62e9d2514" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetBeamDrawingInterface</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3dbe5a481e20ab4d0d9fdd47708d1c2f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetBezierThicknessCoefficient</name></member>
      <member refid="classvrv_1_1_bounding_box_1a91a7bb36d11f909e84caab997fb49c0c" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetBottomBy</name></member>
      <member refid="classvrv_1_1_slur_1af1d3cfea2fd85f61fe7b2504076a20f9" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetBoundaryCrossStaff</name></member>
      <member refid="classvrv_1_1_slur_1ac91b83f8f14d2227eb227763f7557cec" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetBoundaryLayer</name></member>
      <member refid="classvrv_1_1_bounding_box_1a5a9da745d928e71989c23eca8d4b77d7" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetBoundingBoxGlyph</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2b025880f04cefa1cb37b7e6f8bfb8f1" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetBoundingBoxGlyphFontSize</name></member>
      <member refid="classvrv_1_1_object_1a41604299ea07255f348600609ef90c8b" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetChild</name></member>
      <member refid="classvrv_1_1_object_1a63a2dec6cb07702ae147ec3541d44496" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetChild</name></member>
      <member refid="classvrv_1_1_object_1a889936363e6eb4b03172c86219c275fc" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetChild</name></member>
      <member refid="classvrv_1_1_object_1ac42744411cd519011fe914f200f6e0f5" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetChild</name></member>
      <member refid="classvrv_1_1_object_1a96ae60d000961398754d5b22de89cc4e" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetChildCount</name></member>
      <member refid="classvrv_1_1_object_1a21704672a51a54150db818e2e14af2da" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetChildCount</name></member>
      <member refid="classvrv_1_1_object_1a5ebca520373bf015cd3b5667791b8334" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetChildCount</name></member>
      <member refid="classvrv_1_1_object_1a747b062af53580bf736f3c163cb6602a" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetChildIndex</name></member>
      <member refid="classvrv_1_1_object_1a65ebcdfcab707aacab9176303d4d3bf6" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetChildren</name></member>
      <member refid="classvrv_1_1_object_1a676255bd808b50dc0f18b863c3d37be8" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetChildren</name></member>
      <member refid="classvrv_1_1_control_element_1a3443f80d111438969ac10e169fc412ea" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetChildRendAlignment</name></member>
      <member refid="classvrv_1_1_object_1a6613607b9361b6cc4d568ce189ba9c32" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetChildrenForModification</name></member>
      <member refid="classvrv_1_1_object_1aab95929358aad8730f586319a3417264" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetClassId</name></member>
      <member refid="classvrv_1_1_slur_1a0a61fc1769b931320ae12a269fd6dfef" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetClassName</name></member>
      <member refid="classvrv_1_1_object_1a65066ae5b40a4dc3aab9bf76abc57d36" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetClosingComment</name></member>
      <member refid="classvrv_1_1_object_1aa8a0722010e05e1e2cb04d90a9535cc4" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetComment</name></member>
      <member refid="classvrv_1_1_bounding_box_1a74fec7caf937bc6892cd0de8c1f29355" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetContentBottom</name></member>
      <member refid="classvrv_1_1_bounding_box_1a9a33f5750af51cfb292ff2a553744e2d" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetContentLeft</name></member>
      <member refid="classvrv_1_1_bounding_box_1a755302fda960358f076a3175783a5d78" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetContentRight</name></member>
      <member refid="classvrv_1_1_bounding_box_1a8343f2b84e7bb194cb9377c304703bba" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetContentTop</name></member>
      <member refid="classvrv_1_1_bounding_box_1ac2b3dff1054fee47d8d22c2183c4c346" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetContentX1</name></member>
      <member refid="classvrv_1_1_bounding_box_1aca490fbb8d4d5c0179e05f790e0e2951" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetContentX2</name></member>
      <member refid="classvrv_1_1_bounding_box_1afb681918250b5eceeab06a8752c794a0" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetContentY1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7d8f116f3c72430801e43fc9f1fb1e95" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetContentY2</name></member>
      <member refid="classvrv_1_1_floating_object_1a248177357c942919e76c7aa438aeb6a0" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetCorrespFloatingPositioner</name></member>
      <member refid="classvrv_1_1_floating_object_1a670ba7a497b9ebdc58d9a62a1027f71f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetCorrespFloatingPositioner</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a41a52a993d10feeb4e09551b69c5ccf0" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetCrossStaffOverflows</name></member>
      <member refid="classvrv_1_1_floating_object_1a4d92135a6f8a1967fb53ac60e3cbb0c7" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetCurrentFloatingPositioner</name></member>
      <member refid="classvrv_1_1_floating_object_1a4aac146641f1aa60551a927f7eb4d297" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetCurrentFloatingPositioner</name></member>
      <member refid="classvrv_1_1_bounding_box_1a26bfbd087c59e094696d2c0ff1fd89ea" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetCutOutBottom</name></member>
      <member refid="classvrv_1_1_bounding_box_1a341aeebe2fdd010ebf72aaf1c8760df3" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetCutOutLeft</name></member>
      <member refid="classvrv_1_1_bounding_box_1aff4fd28f86884cc8286be692e644521e" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetCutOutLeft</name></member>
      <member refid="classvrv_1_1_bounding_box_1abc3f8eacafe2bfb2becd732507f259ae" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetCutOutRight</name></member>
      <member refid="classvrv_1_1_bounding_box_1ab2703ccf19b57cc32f6e286748cc3e01" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetCutOutRight</name></member>
      <member refid="classvrv_1_1_bounding_box_1a81256810cab77e0d9fedf64fa858690f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetCutOutTop</name></member>
      <member refid="classvrv_1_1_object_1a469db24aaa4907f5437576cb989fcdad" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetDescendantCount</name></member>
      <member refid="classvrv_1_1_object_1a6baacbb5e659f71a051d569b2c34ac07" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetDescendantIndex</name></member>
      <member refid="classvrv_1_1_object_1a4479cf2a953546ff59428752c479ec31" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetDocResources</name></member>
      <member refid="classvrv_1_1_slur_1aebc8bc19eb3cf4dc7c19df7aeb952f3b" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetDrawingCurveDir</name></member>
      <member refid="classvrv_1_1_floating_object_1a67e6ef3b80f122a42bcccd89701bc298" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetDrawingGrpId</name></member>
      <member refid="classvrv_1_1_floating_object_1a5c6d15419321ce64bde495eb3b6b9039" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetDrawingX</name></member>
      <member refid="classvrv_1_1_floating_object_1a87db0b64d7840dcfd006f6af2b32e4bb" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetDrawingY</name></member>
      <member refid="classvrv_1_1_object_1a60120fd33bf1f7227c4dc2f6a9b265c7" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetDurationInterface</name></member>
      <member refid="classvrv_1_1_object_1ae6f71e6b9dc583db08e6d90edbfc8f48" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetDurationInterface</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1ae3bf35a85b17a514c8559bf5e8385fc2" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetEnd</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a2d6e3e1a4210f0cfee8a867a3eef6537" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetEnd</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1ab1286ca2a24e646753e7ffcc6ff3394d" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetEndMeasure</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1af36c73a18e022c83b7a76dbe1902aca5" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetEndMeasure</name></member>
      <member refid="classvrv_1_1_object_1a12c0e976636a155de9c58ead6cd743f8" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetFacsimileInterface</name></member>
      <member refid="classvrv_1_1_object_1ad0ecbf09c07a06496d3c025881ac7898" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetFacsimileInterface</name></member>
      <member refid="classvrv_1_1_object_1a4f539160a7684d67d0c4e01e5dd06c36" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetFirst</name></member>
      <member refid="classvrv_1_1_object_1abafdbeb5dae2dc78a285277fbb12006f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetFirst</name></member>
      <member refid="classvrv_1_1_object_1a4124844dc62f3a263b5f2480a7c4a105" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetFirstAncestor</name></member>
      <member refid="classvrv_1_1_object_1a3c2a13430f342970d3a3cf8f029ba7f0" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetFirstAncestor</name></member>
      <member refid="classvrv_1_1_object_1a5ec4736caa32bf31168fd2ce62f21d0d" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetFirstAncestorInRange</name></member>
      <member refid="classvrv_1_1_object_1a4e9a608419295411e4f3cf4ea7fbf19f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetFirstAncestorInRange</name></member>
      <member refid="classvrv_1_1_object_1a10fe05578ee7f669ca3591c5a2a3a428" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetFirstChildNot</name></member>
      <member refid="classvrv_1_1_object_1a7cde888c2a3a0af025cd706540d7333a" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetFirstChildNot</name></member>
      <member refid="classvrv_1_1_object_1aef1d784524c2d3c60d0c0142d1a8ab53" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetID</name></member>
      <member refid="classvrv_1_1_object_1a2bfb8ee92dbd7e805de0aae51d07d534" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetIdx</name></member>
      <member refid="classvrv_1_1_object_1ad8f7812ad7bdfe96dda1eda108484955" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetInsertOrderFor</name></member>
      <member refid="classvrv_1_1_object_1afeda31a18e057eaa199a5a76d2a8cf78" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetInsertOrderForIn</name></member>
      <member refid="classvrv_1_1_object_1aa7382f9b787c517cf76a6ece195f7766" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetLast</name></member>
      <member refid="classvrv_1_1_object_1a31f762f07969b77792891fdbbc5176e4" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetLast</name></member>
      <member refid="classvrv_1_1_object_1a908d56fef5a5dd9b9808555ab4ea4daf" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetLastAncestorNot</name></member>
      <member refid="classvrv_1_1_object_1a7a014abead37ca3e27f827a5c3ae7434" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetLastAncestorNot</name></member>
      <member refid="classvrv_1_1_control_element_1a21757f229d95373c0d53c4ac94cdcaf2" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetLayerPlace</name></member>
      <member refid="classvrv_1_1_bounding_box_1af329372204a34520779e6b0d0596e8b9" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetLeftBy</name></member>
      <member refid="classvrv_1_1_control_element_1a1ab03ccd8e1610d29508e9e0bb7bc7c5" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetLinkingInterface</name></member>
      <member refid="classvrv_1_1_control_element_1aeb6ccac7f45774c4f7bb78f3b878eafd" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetLinkingInterface</name></member>
      <member refid="classvrv_1_1_floating_object_1ab6520fb847c3341d60fba34277e011e0" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetMaxDrawingYRel</name></member>
      <member refid="classvrv_1_1_object_1a776dc4f75ec176b5189ce8818a221bcf" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetMilestoneEnd</name></member>
      <member refid="classvrv_1_1_slur_1a938bab0c49f226d7bed912890d9dd245" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>GetMinControlPointAngle</name></member>
      <member refid="classvrv_1_1_object_1ab2e351247e616a3f30eaf2e3d125f054" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetNext</name></member>
      <member refid="classvrv_1_1_object_1a0db530be167ba91d886764f066e63c2b" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetNext</name></member>
      <member refid="classvrv_1_1_object_1a3fda6549b288e139959f2e50355792e7" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetNext</name></member>
      <member refid="classvrv_1_1_object_1a8eaec660ff6955684042402e40ea3a99" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetNext</name></member>
      <member refid="classvrv_1_1_linking_interface_1a4002e13d005d2e6eafb7ec2efef4a080" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetNextLink</name></member>
      <member refid="classvrv_1_1_linking_interface_1aad381d647fdfb76e556661d255333053" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetNextLink</name></member>
      <member refid="classvrv_1_1_linking_interface_1adf9d13147005f947251ada4a02c71257" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetNextMeasure</name></member>
      <member refid="classvrv_1_1_linking_interface_1a70e6577025de19a0020dc4ae3f4dcdbe" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetNextMeasure</name></member>
      <member refid="classvrv_1_1_object_1ad2f81f683e9a94713b451395ff781627" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetParent</name></member>
      <member refid="classvrv_1_1_object_1a4e4858957b6d48a75bba2130939fe174" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetParent</name></member>
      <member refid="classvrv_1_1_object_1aace2a15227fa3db1f20b5acbb7f2b4d2" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetPitchInterface</name></member>
      <member refid="classvrv_1_1_object_1abe3b4b7b0763dc04d1c85fdb1d9a81e8" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetPitchInterface</name></member>
      <member refid="classvrv_1_1_object_1a32a7bc21b1323f31cb9d9e68686ce345" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetPlistInterface</name></member>
      <member refid="classvrv_1_1_object_1aa246db2175561352dd71e7d2925697bf" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetPlistInterface</name></member>
      <member refid="classvrv_1_1_object_1a68eb08599ac194e3dfc2c149e96db67a" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetPositionInterface</name></member>
      <member refid="classvrv_1_1_object_1a1125eeb9dfc51655c68758107cd616fe" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetPositionInterface</name></member>
      <member refid="classvrv_1_1_object_1a26a7c60cdf50a4072927aa671112f1f3" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetPrevious</name></member>
      <member refid="classvrv_1_1_object_1ad3b827c4f53d81386c192ce462f09b3e" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetPrevious</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2fe9d4e0cef41c270fe6683e5fbd8223" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetRightBy</name></member>
      <member refid="classvrv_1_1_linking_interface_1ab531ee1a9df9e2edc5413a967fbce53f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetSameasLink</name></member>
      <member refid="classvrv_1_1_linking_interface_1a16e98894fa7294f7d2032466dde3c2ce" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetSameasLink</name></member>
      <member refid="classvrv_1_1_object_1a36ae3be40fa20c6255a6003e5d56133f" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetScoreDefInterface</name></member>
      <member refid="classvrv_1_1_object_1af26b539ef3e271bc568bebff37c01a33" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetScoreDefInterface</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7e55bc05f8dc9b3ff7768fe48c791d83" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetSelfBottom</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2fb7e4b83e390c3cd436e3a73ddfa269" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetSelfLeft</name></member>
      <member refid="classvrv_1_1_bounding_box_1aaae2c8d3d80e7203585052862288f2d5" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetSelfRight</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2e094936f23e6b9c044ccd28a3aa0681" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetSelfTop</name></member>
      <member refid="classvrv_1_1_bounding_box_1a588e6d63bc9e9d149dc6fdd784886a78" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetSelfX1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a025b101dd81de0a3802ba5ac2a86f9c5" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetSelfX2</name></member>
      <member refid="classvrv_1_1_bounding_box_1ad958652328dd6762612727f064f56b3c" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetSelfY1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7ba0ddf13040f3747a7421232c9bc21d" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetSelfY2</name></member>
      <member refid="classvrv_1_1_time_point_interface_1a3cd14634c9ef2903e83a560ba52788a9" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetStart</name></member>
      <member refid="classvrv_1_1_time_point_interface_1a298a2ef9e43a61c8682134ac890b2b0e" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetStart</name></member>
      <member refid="classvrv_1_1_slur_1a10771d5591c5792a08145be896782b6f" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>GetStartEndLocs</name></member>
      <member refid="classvrv_1_1_time_point_interface_1a54007f47ab2054a75b29618b8b47dd4f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetStartMeasure</name></member>
      <member refid="classvrv_1_1_time_point_interface_1ac1222d78b3eb4fefc697eaabb564c368" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetStartMeasure</name></member>
      <member refid="classvrv_1_1_object_1a8f790811faa78e214ba76d2a728fa8e5" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetStemmedDrawingInterface</name></member>
      <member refid="classvrv_1_1_object_1ab7545a6790428020dc60d6f65f50edb0" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetStemmedDrawingInterface</name></member>
      <member refid="classvrv_1_1_object_1ac2308546f247b47d6fdaaf0e90490fa5" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetTextDirInterface</name></member>
      <member refid="classvrv_1_1_object_1a3524d9d7b5a93fed82ad1a90812cfcdd" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetTextDirInterface</name></member>
      <member refid="classvrv_1_1_slur_1af4fa12654548c380dd0eb52f6c746c55" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetTimePointInterface</name></member>
      <member refid="classvrv_1_1_slur_1a245f41e219017a3089b4492f92d08cf1" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetTimePointInterface</name></member>
      <member refid="classvrv_1_1_slur_1ae8bdb13e89832e0c2394cc6d77f513dd" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetTimeSpanningInterface</name></member>
      <member refid="classvrv_1_1_slur_1aece63ca541d9f2dfe578c0e20d15b673" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetTimeSpanningInterface</name></member>
      <member refid="classvrv_1_1_bounding_box_1a9dae1c4940695c403ba67841512f94f3" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetTopBy</name></member>
      <member refid="classvrv_1_1_time_point_interface_1a27a48797d818dd92d3f7ff82f0678a17" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetTstampStaves</name></member>
      <member refid="classvrv_1_1_floating_object_1a3adb54f7d09e39f78107e7afc708f572" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>GetVerticalContentBoundaryRel</name></member>
      <member refid="classvrv_1_1_bounding_box_1a6f1d1de5ac01ce1fe4cf43ed16b47e11" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetX1By</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3a9666c33d5a4a7d01f4b159c128d6c5" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetX2By</name></member>
      <member refid="classvrv_1_1_bounding_box_1ad906e8632b28b1be81fa374ad2b5292e" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetY1By</name></member>
      <member refid="classvrv_1_1_bounding_box_1a242e2a41a61fb347b526a08fef162cdf" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>GetY2By</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1a6f055775c7e579f3151ff7d937226412" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasAltSymbolDef</name></member>
      <member refid="classvrv_1_1_object_1a9020ecbd4da7cb50ed8ffa686eeae8e5" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasAttClass</name></member>
      <member refid="classvrv_1_1_object_1a07880f4ad709e37ca6b5483110905383" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasAttribute</name></member>
      <member refid="classvrv_1_1_slur_1aa0faa81e2bbf612da49c3da7f0f17b85" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>HasBoundaryOnBeam</name></member>
      <member refid="classvrv_1_1_object_1ad52c48d64fdb14dbc0a4dcf40aa87295" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasClosingComment</name></member>
      <member refid="classvrv_1_1_object_1a5d95d6ed5231e12c17d17868d337b218" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasComment</name></member>
      <member refid="classvrv_1_1_bounding_box_1a6cac2a9e7c863969d8e856807936574f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasContentBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3bde41712d93b9badf88b35ac1974503" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasContentHorizontalBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1abe8bb676a5c670242888d9034daa5a22" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasContentVerticalBB</name></member>
      <member refid="classvrv_1_1_object_1a1f38d88b64a7f79bfea9303a16c1f556" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasDescendant</name></member>
      <member refid="classvrv_1_1_slur_1a80a0a6657f853b66b4f1fcf5da3b1ba3" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasDrawingCurveDir</name></member>
      <member refid="classvrv_1_1_object_1ac9dd387934b8960b47b96a0c05bb1b84" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasEditorialContent</name></member>
      <member refid="classvrv_1_1_bounding_box_1a1dfd7207c5f8431bcb56c88b5c469992" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasEmptyBB</name></member>
      <member refid="classvrv_1_1_slur_1ace6b566010648118388c07ea991988fa" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasEndpointAboveEnd</name></member>
      <member refid="classvrv_1_1_slur_1abcd7805aa818cda8633aa35d607a9efe" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasEndpointAboveStart</name></member>
      <member refid="classvrv_1_1_slur_1a2692e973bd07581652583080bd59b73a" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasEndpointBelowEnd</name></member>
      <member refid="classvrv_1_1_slur_1a38661bbed546a998f76716077bffeb48" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasEndpointBelowStart</name></member>
      <member refid="classvrv_1_1_object_1a3eed2cd64bee454f550e6fa22995dafe" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Hash</name></member>
      <member refid="classvrv_1_1_slur_1a191fedd996f44848f54dacc405dbff41" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasInnerSlur</name></member>
      <member refid="classvrv_1_1_object_1a1639642ba9433617ec04608f2d2570bb" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasInterface</name></member>
      <member refid="classvrv_1_1_slur_1a79ef69203a4c127b4263067370a4a31a" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasMixedCurveDir</name></member>
      <member refid="classvrv_1_1_linking_interface_1a634bea817c5bf3e1c4e537a9d3165a63" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasNextLink</name></member>
      <member refid="classvrv_1_1_object_1ae0d0368a66d1c4b590b311a1a94eb717" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasNonEditorialContent</name></member>
      <member refid="classvrv_1_1_linking_interface_1adf9fe3c7fa532723cd218c5258597c4e" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasSameasLink</name></member>
      <member refid="classvrv_1_1_bounding_box_1a72744aa255a0d861577275366e711729" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasSelfBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a33e2d9c410be02f476ca19e0f063284c" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasSelfHorizontalBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a20afc38171ff613053a28a3530a66a05" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasSelfVerticalBB</name></member>
      <member refid="classvrv_1_1_time_point_interface_1a32c10ebc5af582117f680bbf37878ba2" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasStart</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a72115fec5c8b177f926e2b5dc1f4bb01" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HasStartAndEnd</name></member>
      <member refid="classvrv_1_1_bounding_box_1aee28c8f38335a02d395f132eac3174a2" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HorizontalContentOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a0fdfa000c449d4c9b1de755dd1efff55" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HorizontalLeftOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7265ddc2845db5bc543200b037048a2e" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HorizontalRightOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a363e14e29dcb72d6539a832921c538f9" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>HorizontalSelfOverlap</name></member>
      <member refid="classvrv_1_1_slur_1a48b731aec93e5ea7ba9513fcdcc0f60e" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>InitBezierControlSides</name></member>
      <member refid="classvrv_1_1_object_1aaf1ba626f7c0d6be44373b6cfe29855f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>InsertAfter</name></member>
      <member refid="classvrv_1_1_object_1a26dd6389f8b6ce5ff1cf9f0b779a0d14" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>InsertBefore</name></member>
      <member refid="classvrv_1_1_object_1ac14929dac6e5b5e699d16ba7fc258d9d" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>InsertChild</name></member>
      <member refid="classvrv_1_1_interface_1adaf168ce6b150aef8967391bf4f20e5f" prot="public" virt="non-virtual" ambiguityscope="vrv::"><scope>vrv::Slur</scope><name>Interface</name></member>
      <member refid="classvrv_1_1_interface_1adaf168ce6b150aef8967391bf4f20e5f" prot="public" virt="non-virtual" ambiguityscope="vrv::LinkingInterface::"><scope>vrv::Slur</scope><name>Interface</name></member>
      <member refid="classvrv_1_1_interface_1adaf168ce6b150aef8967391bf4f20e5f" prot="public" virt="non-virtual" ambiguityscope="vrv::TimeSpanningInterface::"><scope>vrv::Slur</scope><name>Interface</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1ad2b05c285a481767e4444541211bef04" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>InterfacePrepareAltSym</name></member>
      <member refid="classvrv_1_1_linking_interface_1ad7d1a406fa2117b2f5871c1a556c3559" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>InterfacePrepareLinking</name></member>
      <member refid="classvrv_1_1_linking_interface_1ade7b189fef7032e18fb7525b8f0c8bfe" prot="public" virt="non-virtual" ambiguityscope="vrv::"><scope>vrv::Slur</scope><name>InterfacePrepareStaffCurrentTimeSpanning</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a63be6f435ffec683418a75d225d02fc9" prot="public" virt="non-virtual" ambiguityscope="vrv::TimeSpanningInterface::"><scope>vrv::Slur</scope><name>InterfacePrepareStaffCurrentTimeSpanning</name></member>
      <member refid="classvrv_1_1_time_point_interface_1a28d96885ec00f8a7e577047aa2fca857" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>InterfacePrepareTimePointing</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a11ced307739a635ae5339612837dbb59" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>InterfacePrepareTimeSpanning</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a256b830d51f0563e1204b4f7161c499e" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>InterfacePrepareTimestamps</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1abe9ea486dc1348debbb673b0be83fb9f" prot="public" virt="non-virtual" ambiguityscope="vrv::"><scope>vrv::Slur</scope><name>InterfaceResetData</name></member>
      <member refid="classvrv_1_1_linking_interface_1a0482e4a7ea764d9b54d74b8565dd34f4" prot="public" virt="non-virtual" ambiguityscope="vrv::LinkingInterface::"><scope>vrv::Slur</scope><name>InterfaceResetData</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a490b754ff996837fc27721cb2cbec2d5" prot="public" virt="virtual" ambiguityscope="vrv::TimeSpanningInterface::"><scope>vrv::Slur</scope><name>InterfaceResetData</name></member>
      <member refid="classvrv_1_1_bounding_box_1a29d29a9aaa350b53bcf58dc32978b7f8" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Intersects</name></member>
      <member refid="classvrv_1_1_bounding_box_1a89d4ebda89785d624cb43d1c45dbbbb2" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Intersects</name></member>
      <member refid="classvrv_1_1_bounding_box_1af366b55a8e449a12d689acd9d35ae782" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Is</name></member>
      <member refid="classvrv_1_1_bounding_box_1aaeb23e9d3064f863ef3857efef570a8f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Is</name></member>
      <member refid="classvrv_1_1_object_1af8ee73eca8e0a08ae535318c4462fad1" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsAttribute</name></member>
      <member refid="classvrv_1_1_object_1a24ff4e053bb15d8d893c9a1a6b2f9639" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsAttribute</name></member>
      <member refid="classvrv_1_1_floating_object_1a33e63919403a78ab01c46e22ff264d4c" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>IsCloserToStaffThan</name></member>
      <member refid="classvrv_1_1_object_1aab9a49af1e67891dcfd1b929a6d64aa9" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsControlElement</name></member>
      <member refid="classvrv_1_1_object_1a46776dd312ff3631580f9e0ff293d52e" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsEditorialElement</name></member>
      <member refid="classvrv_1_1_slur_1a9933e8e2f9c92a75e6800d0f2b4d2d58" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>IsElementBelow</name></member>
      <member refid="classvrv_1_1_slur_1a042af0fd53b535540d41b8922eace073" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>IsElementBelow</name></member>
      <member refid="classvrv_1_1_object_1a76f4663d1b09c5fe2b0c771eeb3f7d0e" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsExpansion</name></member>
      <member refid="classvrv_1_1_object_1a07dfe3de52f16cff12eefabe11c6cd96" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsExpansion</name></member>
      <member refid="classvrv_1_1_floating_object_1a8781df9fac1bad66c08cdae278be23e4" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>IsExtenderElement</name></member>
      <member refid="classvrv_1_1_object_1a3b131f39c868a8a1e9b768bdc0eae811" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsFloatingObject</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1a9fd4b58fba2208cc8bd966ac8185a619" prot="public" virt="virtual" ambiguityscope="vrv::"><scope>vrv::Slur</scope><name>IsInterface</name></member>
      <member refid="classvrv_1_1_linking_interface_1ad1a3839eaa143c325b741151e7f9b084" prot="public" virt="virtual" ambiguityscope="vrv::LinkingInterface::"><scope>vrv::Slur</scope><name>IsInterface</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a24093d53e5d2b33603322e16cfafb666" prot="public" virt="virtual" ambiguityscope="vrv::TimeSpanningInterface::"><scope>vrv::Slur</scope><name>IsInterface</name></member>
      <member refid="classvrv_1_1_object_1a311186b3525f994471394fcc38bbcda8" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsLayerElement</name></member>
      <member refid="classvrv_1_1_object_1aa9ad841690ea5c7b3326d8863140a7f8" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsMilestoneElement</name></member>
      <member refid="classvrv_1_1_object_1a4eec6780edc930e49d9874c1036735a4" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsModified</name></member>
      <member refid="classvrv_1_1_time_point_interface_1aedd9182fd1cd2cc1bcfdf5b9de955ab7" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsOnStaff</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a0b129d8417f345a548ced98fd4254390" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsOrdered</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a3366edb934abb270587158a16bb85fbf" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsOrdered</name></member>
      <member refid="classvrv_1_1_object_1a6fe6d0adbd0341a514fc3645039559fd" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsPageElement</name></member>
      <member refid="classvrv_1_1_slur_1a562b4b55746824b34a6424d2cbfd898c" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>IsPortatoSlur</name></member>
      <member refid="classvrv_1_1_object_1af8dd22cf22d58a6c606591b9fe14597d" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsPreOrdered</name></member>
      <member refid="classvrv_1_1_object_1ad507cfd401ea330cca65a4891b90da80" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsReferenceObject</name></member>
      <member refid="classvrv_1_1_object_1a5b19179d87ef32147c3d513fa735c07f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsRunningElement</name></member>
      <member refid="classvrv_1_1_object_1a774acf3d4a93bd2e94451eeb1b883273" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsScoreDefElement</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a239665f006283e9749b3b4e5099887fb" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsSpanningMeasures</name></member>
      <member refid="classvrv_1_1_object_1a06ffb8f7f251aeea862abe1f76b5599d" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>IsSupportedChild</name></member>
      <member refid="classvrv_1_1_object_1a334a7956ff32ade0704f4afdd74f37a6" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsSystemElement</name></member>
      <member refid="classvrv_1_1_object_1a958bf53eb4117b0438aa5ddb9264c1c8" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>IsTextElement</name></member>
      <member refid="classvrv_1_1_linking_interface_1ab0344fae147aef801bfca24e6dd1f016" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>LinkingInterface</name></member>
      <member refid="classvrv_1_1_bounding_box_1a4961ebaf8f99abe31ee894345cd84a16" prot="protected" virt="non-virtual"><scope>vrv::Slur</scope><name>m_cachedDrawingX</name></member>
      <member refid="classvrv_1_1_bounding_box_1a548baf7b854ef877313302670da5d0b8" prot="protected" virt="non-virtual"><scope>vrv::Slur</scope><name>m_cachedDrawingY</name></member>
      <member refid="classvrv_1_1_slur_1a7d99192c481e7202eef63242d3c5947d" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>m_drawingCurveDir</name></member>
      <member refid="classvrv_1_1_time_point_interface_1a0acc50cd71a220b0142a0ec22377c88a" prot="protected" virt="non-virtual"><scope>vrv::Slur</scope><name>m_start</name></member>
      <member refid="classvrv_1_1_time_point_interface_1ac504cb97f324c80f11378f21b9870e38" prot="protected" virt="non-virtual"><scope>vrv::Slur</scope><name>m_startID</name></member>
      <member refid="classvrv_1_1_object_1a74ae0995caefb72a71445ba43fce0652" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>m_unsupported</name></member>
      <member refid="classvrv_1_1_object_1a30996d1e8460f2110900b490425c16ec" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Modify</name></member>
      <member refid="classvrv_1_1_object_1aa846e8099e10d6cf427e8255e4a62dd4" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>MoveChildrenFrom</name></member>
      <member refid="classvrv_1_1_object_1ac7063ea155c08f4e39e5c59b735f1d9e" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>MoveItselfTo</name></member>
      <member refid="classvrv_1_1_object_1ae10fe4f6d8a8b450b680f10cfe39a9cc" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Object</name></member>
      <member refid="classvrv_1_1_object_1a98c0701bde5924c064607250d567883a" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Object</name></member>
      <member refid="classvrv_1_1_object_1a79f4f653686b4f612283302ab443c1c8" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Object</name></member>
      <member refid="classvrv_1_1_object_1a8be4ecf7908559751e728551718a8bfc" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Object</name></member>
      <member refid="classvrv_1_1_object_1a6ad51ecc97faf69c8fa8432a780aed44" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>operator=</name></member>
      <member refid="classvrv_1_1_object_1ab1b4dbc50eb6f628feea75d202a22e18" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Process</name></member>
      <member refid="classvrv_1_1_object_1ac83fb39df04943815cd3a275d2924e16" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Process</name></member>
      <member refid="classvrv_1_1_bounding_box_1a74c28d831f2e14aec44a848a961f8b42" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>RectBottomOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a414f972e6f1e4231d61acdd7329eb414" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>RectLeftOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a4802cf9706608398b887afd2ad3e1188" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>RectRightOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae7003f6708e916b7640d4dda5a8a18ef" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>RectTopOverlap</name></member>
      <member refid="classvrv_1_1_object_1aa5bcd61a747583c6ed2b97039129df68" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>RegisterAttClass</name></member>
      <member refid="classvrv_1_1_object_1a172109ee605efdf2c2b23440adef333c" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>RegisterInterface</name></member>
      <member refid="classvrv_1_1_interface_1a57c9a4f18b81a07ef0d14dc040f84257" prot="public" virt="non-virtual" ambiguityscope="vrv::"><scope>vrv::Slur</scope><name>RegisterInterfaceAttClass</name></member>
      <member refid="classvrv_1_1_interface_1a57c9a4f18b81a07ef0d14dc040f84257" prot="public" virt="non-virtual" ambiguityscope="vrv::LinkingInterface::"><scope>vrv::Slur</scope><name>RegisterInterfaceAttClass</name></member>
      <member refid="classvrv_1_1_interface_1a57c9a4f18b81a07ef0d14dc040f84257" prot="public" virt="non-virtual" ambiguityscope="vrv::TimeSpanningInterface::"><scope>vrv::Slur</scope><name>RegisterInterfaceAttClass</name></member>
      <member refid="classvrv_1_1_object_1a48ea7a78dfbdf0195235b56679924c76" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Relinquish</name></member>
      <member refid="classvrv_1_1_object_1a84d8c0e7b117807cbecca85ca7695ce8" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ReorderByXPos</name></member>
      <member refid="classvrv_1_1_object_1aba32b01b87b8f31455e68c77a3d8ee40" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ReplaceChild</name></member>
      <member refid="classvrv_1_1_slur_1a44edee9624d0cf10b0e35bd772aca3a5" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>Reset</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae79b9324168608f36cb71c8ca4174220" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>ResetBoundingBox</name></member>
      <member refid="classvrv_1_1_object_1a859aecc00ab75fc7ed2f2780bc0a6a51" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>ResetCachedDrawingX</name></member>
      <member refid="classvrv_1_1_object_1ac5b28a8625980d057d6cad83dbd52e26" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>ResetCachedDrawingY</name></member>
      <member refid="classvrv_1_1_floating_object_1a384ed728e57f5ac0b632e94994c1b5ec" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ResetDrawing</name></member>
      <member refid="classvrv_1_1_floating_object_1a19811a14724bc587a5e27ce6768fc35c" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ResetDrawingObjectIDs</name></member>
      <member refid="classvrv_1_1_object_1a6a40859719b200dae8d65ee9d597bccd" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ResetID</name></member>
      <member refid="classvrv_1_1_floating_object_1a577749f2718e2d8e542196f760e7c3b3" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ResetMaxDrawingYRel</name></member>
      <member refid="classvrv_1_1_object_1a5d22ebda01e0b254c13d558f5ffdb098" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>ResetParent</name></member>
      <member refid="classvrv_1_1_slur_1a37ed6f07966aaec7b66d5abb76f1c417" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>RotateSlope</name></member>
      <member refid="classvrv_1_1_object_1a86b033680370fc35b444ef74a55bca92" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SaveObject</name></member>
      <member refid="classvrv_1_1_object_1aa8fa10c3b5d07eec119fe0d73aa9b6ab" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SeedID</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1aec18270c1ba43d7ab203eda65b26b3f4" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetAltSymbolDef</name></member>
      <member refid="classvrv_1_1_object_1a9bc335e3bc5405f5dbaae757b5629996" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetAsReferenceObject</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7eccd9ca1e458dccab9c6b9fb7a24ec4" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetBoundingBoxGlyph</name></member>
      <member refid="classvrv_1_1_object_1af0db1dd88b7d2f6c9068934312ce86c8" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetClosingComment</name></member>
      <member refid="classvrv_1_1_object_1a3b47aa3445a48e681db41607cedcd4b4" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetComment</name></member>
      <member refid="classvrv_1_1_floating_object_1a819ad528a043efce1c9a8f860896b603" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetCurrentFloatingPositioner</name></member>
      <member refid="classvrv_1_1_slur_1aa678637a8f168dce40f8aba74296bbdd" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetDrawingCurveDir</name></member>
      <member refid="classvrv_1_1_floating_object_1a2a54c03eab79c35ce2030916053bd1d4" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetDrawingGrpId</name></member>
      <member refid="classvrv_1_1_floating_object_1abb3c371794922b14e5a0265a0bd27bba" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetDrawingGrpObject</name></member>
      <member refid="classvrv_1_1_bounding_box_1ade8f7ad2283b156a2c7934c4055bd8bf" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetEmptyBB</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a2c3289cd6592a1ea9280b21e41382576" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetEnd</name></member>
      <member refid="classvrv_1_1_object_1aa34da3a7092c0b6753c91459b52648b9" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetID</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1a566a6b1368de80402f164f47ecd3f2b2" prot="protected" virt="non-virtual" ambiguityscope="vrv::"><scope>vrv::Slur</scope><name>SetIDStr</name></member>
      <member refid="classvrv_1_1_linking_interface_1a26bd7ff2e4a7048c03aeb56bb8f598d8" prot="protected" virt="non-virtual" ambiguityscope="vrv::LinkingInterface::"><scope>vrv::Slur</scope><name>SetIDStr</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a065e23ac386fa542f2f94cd3d42ddaec" prot="public" virt="non-virtual" ambiguityscope="vrv::TimeSpanningInterface::"><scope>vrv::Slur</scope><name>SetIDStr</name></member>
      <member refid="classvrv_1_1_floating_object_1a181fb01aa1f109c4d841eef4a5947e4f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetMaxDrawingYRel</name></member>
      <member refid="classvrv_1_1_linking_interface_1aa954c8b863b3372c10ec07e7c8a48087" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetNextLink</name></member>
      <member refid="classvrv_1_1_object_1a9f30aa6a8185b260943003a08980d376" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetParent</name></member>
      <member refid="classvrv_1_1_linking_interface_1a3670fb648c0d3c6958544c5cfc6f6868" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetSameasLink</name></member>
      <member refid="classvrv_1_1_time_point_interface_1a657ad24cb9280451b4a5f2b914be0644" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetStart</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1a26f9c358bc5081656fde4774506a0293" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetStartAndEnd</name></member>
      <member refid="classvrv_1_1_time_point_interface_1a4c3a7f2c3fd21358c4c25dbae8443f4a" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SetStartOnly</name></member>
      <member refid="classvrv_1_1_slur_1adc782d8c73385030d24ad5a055031742" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>ShiftEndPoints</name></member>
      <member refid="classvrv_1_1_slur_1a1ec0689cb00d78dde080ab663e172b67" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Slur</name></member>
      <member refid="classvrv_1_1_slur_1af0c39251d4b580a4199b43135f6acd5d" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Slur</name></member>
      <member refid="classvrv_1_1_slur_1a0e5b41a997c099a63129346c542b9a9b" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>Slur</name></member>
      <member refid="classvrv_1_1_slur_1a71c1405941d5d4dc69b75fbe7a70908d" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>SolveControlPointConstraints</name></member>
      <member refid="classvrv_1_1_bounding_box_1ab4d1764142c6881678dbfcaee124e38f" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SolveCubicPolynomial</name></member>
      <member refid="classvrv_1_1_object_1a6c529b9574392b6c2baeaf8470e2a989" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>sortByUlx</name></member>
      <member refid="classvrv_1_1_object_1aa8caf0942b1ff1c02f6f8e879397ca21" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SortChildren</name></member>
      <member refid="classvrv_1_1_object_1ac97807a0dabfdf0d1d483f7f3e9427f9" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>StableSort</name></member>
      <member refid="classvrv_1_1_slur_1a23cf844d440889da6d5b25d5c47eb9dd" prot="private" virt="non-virtual"><scope>vrv::Slur</scope><name>StartsOnBeam</name></member>
      <member refid="classvrv_1_1_object_1a3c91cd86fa79d2b64ae677f2b2a64e9d" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>SwapID</name></member>
      <member refid="classvrv_1_1_time_point_interface_1a470841fa6a90f560e791882bd0d7ff3d" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>TimePointInterface</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1ac94e8747e0ea08969523467586f59717" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>TimeSpanningInterface</name></member>
      <member refid="classvrv_1_1_floating_object_1a79c7af4267643b1bc2a783be841975c2" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>UpdateContentBBoxX</name></member>
      <member refid="classvrv_1_1_floating_object_1a88f281e9a6394157894a57b546346017" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>UpdateContentBBoxY</name></member>
      <member refid="classvrv_1_1_floating_object_1a29ef524752d056b1f60cab88e77a32ee" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>UpdateSelfBBoxX</name></member>
      <member refid="classvrv_1_1_floating_object_1a1868c149ca8ff416b6275e1637eaa626" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>UpdateSelfBBoxY</name></member>
      <member refid="classvrv_1_1_time_point_interface_1ae039ba772895c597f23b01cc8f0105ab" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>VerifyMeasure</name></member>
      <member refid="classvrv_1_1_bounding_box_1aeff55f50ac7cae031dfa289d422b77c0" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>VerticalBottomOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1acdb36f4007fc88d79a81eed3b440c536" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>VerticalContentOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1ab9bbe1447c1e512c9154825086f34aef" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>VerticalSelfOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1aa4dda490e649a5c4817ef99853e0a3da" prot="public" virt="non-virtual"><scope>vrv::Slur</scope><name>VerticalTopOverlap</name></member>
      <member refid="classvrv_1_1_alt_sym_interface_1afa70bdc6fa3bbd3eb7721746b7744a8e" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>~AltSymInterface</name></member>
      <member refid="classvrv_1_1_bounding_box_1a9f87f4407c2c8d88ab5e4eacfe1ac1f0" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>~BoundingBox</name></member>
      <member refid="classvrv_1_1_control_element_1a2cd0ecb73934d457a4b5dcf18bfd41de" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>~ControlElement</name></member>
      <member refid="classvrv_1_1_floating_object_1ac09ff8994cb1d0119fdd67d25d12f410" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>~FloatingObject</name></member>
      <member refid="classvrv_1_1_interface_1a1fbabd3b506190dc2f1b4584a49a85ea" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>~Interface</name></member>
      <member refid="classvrv_1_1_linking_interface_1a228d75ecb1fef240f421b1fad7c45a64" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>~LinkingInterface</name></member>
      <member refid="classvrv_1_1_object_1a350424e9cf31d3b7d1bb5f5754944401" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>~Object</name></member>
      <member refid="classvrv_1_1_slur_1a6487bbaf1c4a31323a85f7309853d82c" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>~Slur</name></member>
      <member refid="classvrv_1_1_time_point_interface_1af09ee1866e7e88461f21fae70f267862" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>~TimePointInterface</name></member>
      <member refid="classvrv_1_1_time_spanning_interface_1aa23a346e154d20fe23b0c472cc2ad43f" prot="public" virt="virtual"><scope>vrv::Slur</scope><name>~TimeSpanningInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
