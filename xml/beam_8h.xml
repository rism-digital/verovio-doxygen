<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="beam_8h" kind="file" language="C++">
    <compoundname>beam.h</compoundname>
    <includes local="yes">atts_cmn.h</includes>
    <includes local="yes">atts_shared.h</includes>
    <includes refid="drawinginterface_8h" local="yes">drawinginterface.h</includes>
    <includes refid="layerelement_8h" local="yes">layerelement.h</includes>
    <includedby refid="beamspan_8h" local="yes">beamspan.h</includedby>
    <includedby refid="ftrem_8h" local="yes">ftrem.h</includedby>
    <includedby refid="halfmrpt_8h" local="yes">halfmrpt.h</includedby>
    <includedby refid="iopae_8cpp" local="yes">iopae.cpp</includedby>
    <includedby refid="mrpt_8h" local="yes">mrpt.h</includedby>
    <includedby refid="mrpt2_8h" local="yes">mrpt2.h</includedby>
    <includedby refid="multirpt_8h" local="yes">multirpt.h</includedby>
    <includedby refid="neume_8h" local="yes">neume.h</includedby>
    <includedby refid="note_8h" local="yes">note.h</includedby>
    <incdepgraph>
      <node id="19">
        <label>attdef.h</label>
        <link refid="attdef_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>beam.h</label>
        <link refid="beam_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>boundingbox.h</label>
        <link refid="boundingbox_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>clef.h</label>
        <link refid="clef_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>devicecontextbase.h</label>
        <link refid="devicecontextbase_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>drawinginterface.h</label>
        <link refid="drawinginterface_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>facsimileinterface.h</label>
        <link refid="facsimileinterface_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>keysig.h</label>
        <link refid="keysig_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>layerelement.h</label>
        <link refid="layerelement_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>linkinginterface.h</label>
        <link refid="linkinginterface_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>mensur.h</label>
        <link refid="mensur_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>metersig.h</label>
        <link refid="metersig_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>metersiggrp.h</label>
        <link refid="metersiggrp_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>object.h</label>
        <link refid="object_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>vrvdef.h</label>
        <link refid="vrvdef_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="22">
        <label>attclasses.h</label>
      </node>
      <node id="33">
        <label>atts_analytical.h</label>
      </node>
      <node id="2">
        <label>atts_cmn.h</label>
      </node>
      <node id="6">
        <label>atts_externalsymbols.h</label>
      </node>
      <node id="10">
        <label>atts_facsimile.h</label>
      </node>
      <node id="39">
        <label>atts_mei.h</label>
      </node>
      <node id="36">
        <label>atts_mensural.h</label>
      </node>
      <node id="3">
        <label>atts_shared.h</label>
      </node>
      <node id="34">
        <label>atts_visual.h</label>
      </node>
      <node id="23">
        <label>atttypes.h</label>
      </node>
      <node id="26">
        <label>cstdlib</label>
      </node>
      <node id="14">
        <label>functional</label>
      </node>
      <node id="27">
        <label>iterator</label>
      </node>
      <node id="15">
        <label>list</label>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="24">
        <label>math.h</label>
      </node>
      <node id="32">
        <label>optional</label>
      </node>
      <node id="28">
        <label>random</label>
      </node>
      <node id="8">
        <label>set</label>
      </node>
      <node id="20">
        <label>string</label>
      </node>
      <node id="17">
        <label>tuple</label>
      </node>
      <node id="21">
        <label>utility</label>
      </node>
      <node id="18">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>beam.h</label>
        <link refid="beam_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>beamspan.h</label>
        <link refid="beamspan_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>comparison.h</label>
        <link refid="comparison_8h_source"/>
      </node>
      <node id="4">
        <label>ftrem.h</label>
        <link refid="ftrem_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>halfmrpt.h</label>
        <link refid="halfmrpt_8h_source"/>
      </node>
      <node id="3">
        <label>iohumdrum.h</label>
        <link refid="iohumdrum_8h_source"/>
      </node>
      <node id="6">
        <label>mrpt.h</label>
        <link refid="mrpt_8h_source"/>
      </node>
      <node id="7">
        <label>mrpt2.h</label>
        <link refid="mrpt2_8h_source"/>
      </node>
      <node id="8">
        <label>multirpt.h</label>
        <link refid="multirpt_8h_source"/>
      </node>
      <node id="9">
        <label>neume.h</label>
        <link refid="neume_8h_source"/>
      </node>
      <node id="10">
        <label>note.h</label>
        <link refid="note_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classvrv_1_1_beam_segment" prot="public">vrv::BeamSegment</innerclass>
    <innerclass refid="classvrv_1_1_beam_span_segment" prot="public">vrv::BeamSpanSegment</innerclass>
    <innerclass refid="classvrv_1_1_beam" prot="public">vrv::Beam</innerclass>
    <innerclass refid="classvrv_1_1_beam_element_coord" prot="public">vrv::BeamElementCoord</innerclass>
    <innernamespace refid="namespacevrv">vrv</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="beam_8h_1a9db8b51189e727bf40aac9fb8808d469" prot="public" static="no">
        <name>MAX_DURATION_PARTIALS</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/laurent/projects/verovio_develop/include/vrv/beam.h" line="23" column="9" bodyfile="/Users/laurent/projects/verovio_develop/include/vrv/beam.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Name:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beam.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Rodolfo<sp/>Zitellini</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>26/06/2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Authors<sp/>and<sp/>others.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__VRV_BEAM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__VRV_BEAM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;atts_cmn.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;atts_shared.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;drawinginterface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;layerelement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vrv<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BeamElementCoord;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TabDurSym;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StaffAlignment;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>maximum<sp/>allowed<sp/>number<sp/>of<sp/>partials</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_DURATION_PARTIALS<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>PARTIAL_NONE<sp/>=<sp/>0,<sp/>PARTIAL_THROUGH,<sp/>PARTIAL_RIGHT,<sp/>PARTIAL_LEFT<sp/>};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BeamSegment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classvrv_1_1_beam_segment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvrv_1_1_beam_segment" kindref="compound">BeamSegment</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_beam_segment" kindref="compound">BeamSegment</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_segment" kindref="compound">~BeamSegment</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcBeam(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref><sp/>*layer,<sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_BEAMPLACE<sp/>place<sp/>=<sp/>BEAMPLACE_NONE,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayOfBeamElementCoords<sp/>*GetElementCoordRefs();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classvrv_1_1_beam_segment_1aae2d6f202398b11757729b803cad00fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_segment_1aae2d6f202398b11757729b803cad00fd" kindref="member">InitCoordRefs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayOfBeamElementCoords<sp/>*beamElementCoords);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classvrv_1_1_beam_segment_1a29c1c949f0d813b5ffc8303515bc804f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_segment_1a29c1c949f0d813b5ffc8303515bc804f" kindref="member">ClearCoordRefs</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classvrv_1_1_beam_segment_1af13e9a7dcfa6b57fd10e31f68b0384ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_segment_1af13e9a7dcfa6b57fd10e31f68b0384ec" kindref="member">GetAdjacentElementsDuration</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elementX)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetStartingX()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetStartingY()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StemSameas()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_stemSameasRole<sp/>!=<sp/>SAMEAS_NONE);<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StemSameasIsUnset()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_stemSameasRole<sp/>==<sp/>SAMEAS_UNSET);<sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StemSameasIsPrimary()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_stemSameasRole<sp/>==<sp/>SAMEAS_PRIMARY);<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StemSameasIsSecondary()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_stemSameasRole<sp/>==<sp/>SAMEAS_SECONDARY);<sp/>}</highlight></codeline>
<codeline lineno="88"></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitSameasRoles(Beam<sp/>*sameasBeam,<sp/>data_BEAMPLACE<sp/>&amp;drawingPlace);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateSameasRoles(data_BEAMPLACE<sp/>place);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcNoteHeadShiftForStemSameas(Beam<sp/>*sameasBeam,<sp/>data_BEAMPLACE<sp/>place);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classvrv_1_1_beam_segment_1a1650d7d3d85c0a06a2bc642a00024254" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_segment_1a1650d7d3d85c0a06a2bc642a00024254" kindref="member">RequestStaffSpace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>adjust<sp/>stem<sp/>length<sp/>to<sp/>extend<sp/>only<sp/>towards<sp/>outmost<sp/>subbeam<sp/>(if<sp/>option<sp/>&quot;--beam-french-style&quot;<sp/>is<sp/>set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AdjustBeamToFrenchStyle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>adjust<sp/>beam<sp/>positioning<sp/>with<sp/>regards<sp/>to<sp/>ledger<sp/>lines<sp/>(top<sp/>and<sp/>bottom<sp/>of<sp/>the<sp/>staff)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AdjustBeamToLedgerLines(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHorizontal);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AdjustBeamToTremolos(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcBeamInit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface,<sp/>data_BEAMPLACE<sp/>place);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcBeamInitForNotePair(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_note" kindref="compound">Note</ref><sp/>*note1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_note" kindref="compound">Note</ref><sp/>*note2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;yMax,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;yMin);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CalcBeamSlope(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;step);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CalcBeamSlopeStep(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noteStep,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;shortStep);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcMixedBeamPosition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcBeamPosition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHorizontal);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcAdjustSlope(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;step);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>adjust<sp/>position<sp/>of<sp/>starting<sp/>point<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>beam<sp/>start-/endpoints<sp/>touch<sp/>the<sp/>staff<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcAdjustPosition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcBeamPlace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref><sp/>*layer,<sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface,<sp/>data_BEAMPLACE<sp/>place);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcBeamPlaceTab(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref><sp/>*layer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_BEAMPLACE<sp/>place);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>calculate<sp/>the<sp/>longest<sp/>stem<sp/>length<sp/>of<sp/>the<sp/>beam<sp/>(which<sp/>will<sp/>be<sp/>used<sp/>uniformely)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcBeamStemLength(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/>data_BEAMPLACE<sp/>place,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHorizontal);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>set<sp/>the<sp/>stem<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcSetStemValues(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>set<sp/>the<sp/>stem<sp/>values<sp/>for<sp/>tablature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcSetStemValuesTab(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>calculate<sp/>the<sp/>vertical<sp/>center<sp/>of<sp/>mixed<sp/>beams</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CalcMixedBeamCenterY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>calculate<sp/>location<sp/>and<sp/>duration<sp/>of<sp/>the<sp/>note<sp/>that<sp/>would<sp/>be<sp/>setting<sp/>highest/lowest<sp/>point<sp/>for<sp/>the<sp/>beam</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int,<sp/>int&gt;<sp/>CalcStemDefiningNote(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/>data_BEAMPLACE<sp/>place)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>positioning<sp/>for<sp/>the<sp/>horizontal<sp/>beams</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcHorizontalBeam(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>calculate<sp/>relative<sp/>position<sp/>of<sp/>the<sp/>beam<sp/>to<sp/>for<sp/>each<sp/>of<sp/>the<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcMixedBeamPlace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>calculate<sp/>proper<sp/>positioning<sp/>of<sp/>the<sp/>additional<sp/>beamlines<sp/>for<sp/>notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcPartialFlagPlace();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>simply<sp/>set<sp/>the<sp/>values<sp/>of<sp/>each<sp/>BeamElementCoord<sp/>according<sp/>the<sp/>the<sp/>first<sp/>position<sp/>and<sp/>the<sp/>slope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalcSetValues();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>check<sp/>whether<sp/>beam<sp/>fits<sp/>within<sp/>certain<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DoesBeamOverlap(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>topBorder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottomBorder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minStemLength)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>calculate<sp/>the<sp/>vertical<sp/>offset<sp/>of<sp/>the<sp/>beam<sp/>top/bottom<sp/>w.r.t.<sp/>the<sp/>beam<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int,<sp/>int&gt;<sp/>GetVerticalOffset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>calculate<sp/>the<sp/>minimal<sp/>stem<sp/>length<sp/>of<sp/>above/below<sp/>notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int,<sp/>int&gt;<sp/>GetMinimalStemLength(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>check<sp/>mixed<sp/>beam<sp/>positioning<sp/>compared<sp/>to<sp/>other<sp/>elements<sp/>(ledger<sp/>lines,<sp/>staff)<sp/>and<sp/>adjust<sp/>it<sp/>accordingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NeedToResetPosition(<ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*beamInterface);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>values<sp/>set<sp/>by<sp/>CalcBeam</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nbNotesOrChords;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_beamSlope;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>slope<sp/>of<sp/>the<sp/>beam</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_verticalCenter;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_ledgerLinesAbove;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_ledgerLinesBelow;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_uniformStemLength;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>data_BEAMPLACE<sp/>m_weightedPlace;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_beam_element_coord" kindref="compound">BeamElementCoord</ref><sp/>*m_firstNoteOrChord;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_beam_element_coord" kindref="compound">BeamElementCoord</ref><sp/>*m_lastNoteOrChord;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="classvrv_1_1_beam_segment_1a2f8cd54b0cdac4e3db644a8c3bd22e19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayOfBeamElementCoords<sp/><ref refid="classvrv_1_1_beam_segment_1a2f8cd54b0cdac4e3db644a8c3bd22e19" kindref="member">m_beamElementCoordRefs</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>StemSameasDrawingRole<sp/>m_stemSameasRole;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>StemSameasDrawingRole<sp/>*m_stemSameasReverseRole;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">};</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BeamSpanSegment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>for<sp/>storing<sp/>additional<sp/>information<sp/>regarding<sp/>beamSegment<sp/>placement<sp/>(in<sp/>case<sp/>of<sp/>beamSpan<sp/>spanning<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>systems)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="classvrv_1_1_beam_span_segment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvrv_1_1_beam_span_segment" kindref="compound">BeamSpanSegment</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_segment" kindref="compound">BeamSegment</ref><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_beam_span_segment" kindref="compound">BeamSpanSegment</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_span_segment" kindref="compound">~BeamSpanSegment</ref>(){};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classvrv_1_1_beam_span_segment_1ab45fd99b78bcb405ab23d18f08e20f2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref><sp/>*<ref refid="classvrv_1_1_beam_span_segment_1ab45fd99b78bcb405ab23d18f08e20f2e" kindref="member">GetMeasure</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_measure;<sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref><sp/>*<ref refid="classvrv_1_1_beam_span_segment_1ab45fd99b78bcb405ab23d18f08e20f2e" kindref="member">GetMeasure</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_measure;<sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMeasure(Measure<sp/>*measure)<sp/>{<sp/>m_measure<sp/>=<sp/>measure;<sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>Staff<sp/>*GetStaff()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_staff;<sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*GetStaff()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_staff;<sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetStaff(Staff<sp/>*staff)<sp/>{<sp/>m_staff<sp/>=<sp/>staff;<sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>Layer<sp/>*GetLayer()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_layer;<sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Layer<sp/>*GetLayer()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_layer;<sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetLayer(Layer<sp/>*layer)<sp/>{<sp/>m_layer<sp/>=<sp/>layer;<sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>BeamElementCoord<sp/>*GetBeginCoord()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_begin;<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BeamElementCoord<sp/>*GetBeginCoord()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_begin;<sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetBeginCoord(BeamElementCoord<sp/>*begin)<sp/>{<sp/>m_begin<sp/>=<sp/>begin;<sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>BeamElementCoord<sp/>*GetEndCoord()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_end;<sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BeamElementCoord<sp/>*GetEndCoord()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_end;<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEndCoord(BeamElementCoord<sp/>*end)<sp/>{<sp/>m_end<sp/>=<sp/>end;<sp/>}</highlight></codeline>
<codeline lineno="250"></codeline>
<codeline lineno="256" refid="classvrv_1_1_beam_span_segment_1aeb452897f9114b72fbe690e5da506355" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_span_segment_1aeb452897f9114b72fbe690e5da506355" kindref="member">SetSpanningType</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>systemIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>systemCount);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetSpanningType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_spanningType;<sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>append<sp/>coordinates<sp/>for<sp/>the<sp/>beamSpans<sp/>that<sp/>are<sp/>drawn<sp/>over<sp/>systems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AppendSpanningCoordinates(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref><sp/>*measure);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>main<sp/>values<sp/>to<sp/>track<sp/>positioning<sp/>of<sp/>the<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref><sp/>*m_measure;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*m_staff;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref><sp/>*m_layer;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_beam_element_coord" kindref="compound">BeamElementCoord</ref><sp/>*m_begin;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_beam_element_coord" kindref="compound">BeamElementCoord</ref><sp/>*m_end;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spanning<sp/>type<sp/>for<sp/>purposes<sp/>of<sp/>adding<sp/>additional<sp/>coordinates<sp/>to<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_spanningType<sp/>=<sp/>SPANNING_START_END;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Beam</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="classvrv_1_1_beam" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvrv_1_1_beam" kindref="compound">Beam</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref>,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref>,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttBeamedWith,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttBeamRend,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttColor,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttCue<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_beam" kindref="compound">Beam</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam" kindref="compound">~Beam</ref>();</highlight></codeline>
<codeline lineno="293" refid="classvrv_1_1_beam_1ad218c5b74f883ca672b3f287facb594d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*<ref refid="classvrv_1_1_beam_1ad218c5b74f883ca672b3f287facb594d" kindref="member">Clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam" kindref="compound">Beam</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>GetClassName()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Beam&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="297"></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>BeamDrawingInterface<sp/>*GetBeamDrawingInterface()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vrv_cast&lt;BeamDrawingInterface<sp/>*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BeamDrawingInterface<sp/>*GetBeamDrawingInterface()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="304"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vrv_cast&lt;const<sp/>BeamDrawingInterface<sp/>*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetNoteCount()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;GetChildCount(NOTE);<sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="classvrv_1_1_beam_1a2222ff99c31c7384fc4e3c6dff08b47a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_1a2222ff99c31c7384fc4e3c6dff08b47a" kindref="member">IsSupportedChild</ref>(<ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayOfBeamElementCoords<sp/>*GetElementCoords();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="classvrv_1_1_beam_1a26f7b2d176314772a13b06ec15d23758" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_1a26f7b2d176314772a13b06ec15d23758" kindref="member">IsTabBeam</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasStemSameasBeam()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_stemSameas);<sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_beam" kindref="compound">Beam</ref><sp/>*GetStemSameasBeam()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stemSameas;<sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Beam<sp/>*GetStemSameasBeam()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stemSameas;<sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetStemSameasBeam(Beam<sp/>*stemSameas)<sp/>{<sp/>m_stemSameas<sp/>=<sp/>stemSameas;<sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="classvrv_1_1_beam_1a21c2f1a3cf17e6e63015ee71402f9b63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int,<sp/>int&gt;<sp/><ref refid="classvrv_1_1_beam_1a21c2f1a3cf17e6e63015ee71402f9b63" kindref="member">GetAdditionalBeamCount</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="classvrv_1_1_beam_1a059978a0881d8fb74f163808c9186b47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_1a059978a0881d8fb74f163808c9186b47" kindref="member">GetBeamPartDuration</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeRests<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functors<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="classvrv_1_1_beam_1a5330f0f47fa15e055193519f35a7d8b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_1a5330f0f47fa15e055193519f35a7d8b0" kindref="member">AdjustBeams</ref>(<ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref><sp/>*functorParams)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="classvrv_1_1_beam_1adf973ec376fc00891cf66584cbce298f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_1adf973ec376fc00891cf66584cbce298f" kindref="member">AdjustBeamsEnd</ref>(<ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref><sp/>*functorParams)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="classvrv_1_1_beam_1ac64aae8acb03de44fef47888894e6b0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_1ac64aae8acb03de44fef47888894e6b0e" kindref="member">CalcStem</ref>(<ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref><sp/>*functorParams)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="classvrv_1_1_beam_1a0b5295a70f7c90a356219bef2dd87d7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_1a0b5295a70f7c90a356219bef2dd87d7b" kindref="member">ResetHorizontalAlignment</ref>(<ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref><sp/>*functorParams)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="classvrv_1_1_beam_1a3d37072cbcaf7ee26ecac413f6538530" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_1a3d37072cbcaf7ee26ecac413f6538530" kindref="member">ResetData</ref>(<ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref><sp/>*functorParams)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="383" refid="classvrv_1_1_beam_1a2b3cdfa137cce9ffc5df789eb8f063b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_1a2b3cdfa137cce9ffc5df789eb8f063b7" kindref="member">FilterList</ref>(ListOfConstObjects<sp/>&amp;childList)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="classvrv_1_1_beam_1ace52578a0183bd8725abe2c07e92d77a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_1ace52578a0183bd8725abe2c07e92d77a" kindref="member">SetElementShortening</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shortening)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="classvrv_1_1_beam_1ac9348763f6a1dec01f260884674ca79a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_1ac9348763f6a1dec01f260884674ca79a" kindref="member">GetBeamPartDuration</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeRests<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_beam" kindref="compound">Beam</ref><sp/>*m_stemSameas;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_beam_segment" kindref="compound">BeamSegment</ref><sp/>m_beamSegment;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">};</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BeamElementCoord</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="classvrv_1_1_beam_element_coord" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvrv_1_1_beam_element_coord" kindref="compound">BeamElementCoord</ref><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_beam_element_coord" kindref="compound">BeamElementCoord</ref>()</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_element<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_closestNote<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tabDurSym<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stem<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_overlapMargin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxShortening<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_beamRelativePlace<sp/>=<sp/>BEAMPLACE_NONE;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_partialFlagPlace<sp/>=<sp/>BEAMPLACE_NONE;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_element_coord" kindref="compound">~BeamElementCoord</ref>();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="classvrv_1_1_beam_element_coord_1ab840311185d74d49af8357f0d2909db6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>data_STEMDIRECTION<sp/><ref refid="classvrv_1_1_beam_element_coord_1ab840311185d74d49af8357f0d2909db6" kindref="member">GetStemDir</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDrawingStemDir(data_STEMDIRECTION<sp/>stemDir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_segment" kindref="compound">BeamSegment</ref><sp/>*segment,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref><sp/>*interface);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="classvrv_1_1_beam_element_coord_1abd402f9d51ce8ecc55ab130c148e3c27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_element_coord_1abd402f9d51ce8ecc55ab130c148e3c27" kindref="member">SetClosestNoteOrTabDurSym</ref>(data_STEMDIRECTION<sp/>stemDir,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>outsideStaff);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="classvrv_1_1_beam_element_coord_1a2d28e6f4393f9d61fb6ac136ee56f024" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_element_coord_1a2d28e6f4393f9d61fb6ac136ee56f024" kindref="member">CalculateStemLength</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/>data_STEMDIRECTION<sp/>stemDir,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHorizontal)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="classvrv_1_1_beam_element_coord_1a027f4c152d623e5cd81c3f659d15ac05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_element_coord_1a027f4c152d623e5cd81c3f659d15ac05" kindref="member">CalculateStemLengthTab</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff,<sp/>data_STEMDIRECTION<sp/>stemDir)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="classvrv_1_1_beam_element_coord_1ae2413c9f9e24d8829395823ffa2ed51c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_element_coord_1ae2413c9f9e24d8829395823ffa2ed51c" kindref="member">CalculateStemModAdjustment</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stemLength,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>directionBias)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="classvrv_1_1_beam_element_coord_1a331740dc875e84587bb41a76c47bd01c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_stemmed_drawing_interface" kindref="compound">StemmedDrawingInterface</ref><sp/>*<ref refid="classvrv_1_1_beam_element_coord_1a331740dc875e84587bb41a76c47bd01c" kindref="member">GetStemHolderInterface</ref>();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="classvrv_1_1_beam_element_coord_1a599f3e4fefc635f86a348e8313452706" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_beam_element_coord_1a599f3e4fefc635f86a348e8313452706" kindref="member">UpdateStemLength</ref>(<ref refid="classvrv_1_1_stemmed_drawing_interface" kindref="compound">StemmedDrawingInterface</ref><sp/>*stemmedInterface,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stemAdjust);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_x;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_yBeam;<sp/></highlight><highlight class="comment">//<sp/>y<sp/>value<sp/>of<sp/>stem<sp/>top<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_dur;<sp/></highlight><highlight class="comment">//<sp/>drawing<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_breaksec;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_overlapMargin;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_maxShortening;<sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>allowed<sp/>shortening<sp/>in<sp/>half<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_centered;<sp/></highlight><highlight class="comment">//<sp/>beam<sp/>is<sp/>centered<sp/>on<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>data_BEAMPLACE<sp/>m_beamRelativePlace;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>m_partialFlags[MAX_DURATION_PARTIALS];</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>data_BEAMPLACE<sp/>m_partialFlagPlace;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref><sp/>*m_element;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_note" kindref="compound">Note</ref><sp/>*m_closestNote;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_tab_dur_sym" kindref="compound">TabDurSym</ref><sp/>*m_tabDurSym;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_stem" kindref="compound">Stem</ref><sp/>*m_stem;<sp/></highlight><highlight class="comment">//<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>stem<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>to<sp/>have<sp/>to<sp/>re-cast<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal">};</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vrv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/laurent/projects/verovio_develop/include/vrv/beam.h"/>
  </compounddef>
</doxygen>
