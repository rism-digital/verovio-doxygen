<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvrv_1_1_object" kind="class" language="C++" prot="public">
    <compoundname>vrv::Object</compoundname>
    <basecompoundref refid="classvrv_1_1_bounding_box" prot="public" virt="non-virtual">vrv::BoundingBox</basecompoundref>
    <derivedcompoundref refid="classvrv_1_1_alignment" prot="public" virt="non-virtual">vrv::Alignment</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_alignment_reference" prot="public" virt="non-virtual">vrv::AlignmentReference</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_course" prot="public" virt="non-virtual">vrv::Course</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_doc" prot="public" virt="non-virtual">vrv::Doc</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_editorial_element" prot="public" virt="non-virtual">vrv::EditorialElement</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_facsimile" prot="public" virt="non-virtual">vrv::Facsimile</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_fb" prot="public" virt="non-virtual">vrv::Fb</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_floating_object" prot="public" virt="non-virtual">vrv::FloatingObject</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_grp_sym" prot="public" virt="non-virtual">vrv::GrpSym</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_horizontal_aligner" prot="public" virt="non-virtual">vrv::HorizontalAligner</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_instr_def" prot="public" virt="non-virtual">vrv::InstrDef</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_label" prot="public" virt="non-virtual">vrv::Label</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_label_abbr" prot="public" virt="non-virtual">vrv::LabelAbbr</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_layer" prot="public" virt="non-virtual">vrv::Layer</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_layer_element" prot="public" virt="non-virtual">vrv::LayerElement</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_mdiv" prot="public" virt="non-virtual">vrv::Mdiv</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_measure" prot="public" virt="non-virtual">vrv::Measure</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_meter_sig_grp" prot="public" virt="non-virtual">vrv::MeterSigGrp</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_page" prot="public" virt="non-virtual">vrv::Page</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_pages" prot="public" virt="non-virtual">vrv::Pages</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_running_element" prot="public" virt="non-virtual">vrv::RunningElement</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_score" prot="public" virt="non-virtual">vrv::Score</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_score_def_element" prot="public" virt="non-virtual">vrv::ScoreDefElement</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_staff" prot="public" virt="non-virtual">vrv::Staff</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_staff_alignment" prot="public" virt="non-virtual">vrv::StaffAlignment</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_staff_grp" prot="public" virt="non-virtual">vrv::StaffGrp</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_surface" prot="public" virt="non-virtual">vrv::Surface</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_svg" prot="public" virt="non-virtual">vrv::Svg</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_system" prot="public" virt="non-virtual">vrv::System</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_system_aligner" prot="public" virt="non-virtual">vrv::SystemAligner</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_text_element" prot="public" virt="non-virtual">vrv::TextElement</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_timestamp_aligner" prot="public" virt="non-virtual">vrv::TimestampAligner</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_tuning" prot="public" virt="non-virtual">vrv::Tuning</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_zone" prot="public" virt="non-virtual">vrv::Zone</derivedcompoundref>
    <includes refid="object_8h" local="no">object.h</includes>
      <sectiondef kind="user-defined">
      <header>Constructors, destructors, and other standard methods</header>
      <description><para>Reset method resets all attribute classes </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_object_1ae10fe4f6d8a8b450b680f10cfe39a9cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::Object::Object</definition>
        <argsstring>()</argsstring>
        <name>Object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="61" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aa3351c670d6ea28be99e411ac6a667d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::Object::Object</definition>
        <argsstring>(const std::string &amp;classid)</argsstring>
        <name>Object</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>classid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="62" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a350424e9cf31d3b7d1bb5f5754944401" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vrv::Object::~Object</definition>
        <argsstring>()</argsstring>
        <name>~Object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="63" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a21d8756c0c921f9fa7bac0e210eb5e00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ClassId</type>
        <definition>virtual ClassId vrv::Object::GetClassId</definition>
        <argsstring>() const</argsstring>
        <name>GetClassId</name>
        <reimplements refid="classvrv_1_1_bounding_box_1a1431e0fc3dcee6aa1dc4451ffb3b6080">GetClassId</reimplements>
        <reimplementedby refid="classvrv_1_1_timestamp_attr_1a6669b06b78ccbdfae7e5f98776bdc131">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_svg_1a283aeb77bb6b340092af4ced93dd5ded">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_phrase_1ad993211a6d271e769d6163d7b560af6e">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_unclear_1a6a55fea7d67c4f739f0d4594af0845cd">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_supplied_1a7e7d376f551ba374326c64c236a579e9">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_sic_1a0836f3d61bf7d911eec544b8991eecff">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_restore_1ad5755074f209d0f2b9c2e59167239e02">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_reg_1a57d09deeded00eaab66519fba848dc06">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rdg_1a59a5c24eb8fbf5c490623dd8f4c39a82">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_plica_1a13fbdad4acb83168e601c1d531a3e758">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_orig_1a668fd1a5fd0098dfa7aa60f907c3fb05">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lem_1a662e27636bac357de9f1a7ee0cede5e5">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grace_grp_1a62d6db363b7a034da6d8fbcbf41a27fe">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_expan_1a1e15b0165a53d57edb318441059778be">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_del_1a3ca18deb87ff511302d9a30aac767d7d">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_damage_1a93d512ab94a1f096698aafd4e13131bd">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_corr_1a580458350ef082f8c5be2e9afadf1c93">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_app_1a7634a60d7072b0721f55f7ca022c42cf">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_add_1a79d0c7c7fe77084b543a79285025df47">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_abbr_1aeb504b70b1dd5f516c495a6b58f34017">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_text_element_1a3a8b1ead506de9c2493014afb156b8dd">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pg_head2_1aa162c36f29b081908e5004fd79ab8c17">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pg_head_1ad9b47477b6cbee7dcc47a436074ee512">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pg_foot2_1a2d901ee2a5cd91cc5f3a452ca030298e">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pg_foot_1aeb1d311f96e146ae0d7c5270c313ced8">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_choice_1a9f75ad8d16485cbc86930d5ab2898370">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tab_grp_1add808f85d3f7afa207e372d9fba64470">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tab_dur_sym_1a224043358b872bdb1680c80b920629be">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_space_1a408a039a39dde604139de50be00e8475">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lv_1a6f95178659dba9d452decd5875fb17e5">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dot_1a1bafb9e6824ae5082f44834ad5a15865">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_verse_1a59896421a993ca60e2b16ff90ffbe865">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuning_1ac86abdf57336783d98d879ec7ae16872">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_text_1ae3d2b960fc32ccf357ff653622d67c40">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_subst_1a4fa4ccf4f69e890ac07ebe24370dbce1">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_space_1a1065cb6514ee3ee7af1708bbda481d73">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ref_1a52661c180f1152d996626f0705eaae6c">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_proport_1a37fe66566439442473c3b040ccd7d069">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pitch_inflection_1ae003d066ed128651d12ba15edad39620">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lb_1afee7361c659366b2024f040a5cbe26da">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_label_abbr_1aeb1e461db679b89e25d6bdbfbe468d94">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_label_1a84e3b6af4a66b19dfeabbd9b69440b29">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fig_1a2f5f1ed47213a582e9e917eac950ac58">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fb_1ac7cac97a272bd4c0166ab9b43dec7fda">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_course_1a32efc530e079dd01f07eb507850da100">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_b_trem_1a40e3dcb4eb672a7aaf44176abe76e63b">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_element_1a758e163364a8e1db9cd11974a079eb22">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_sb_1a58e18defc2d478bc7f33f08980ecde8b">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pb_1aaa968577f649819d10ed3ee53e60ef58">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_num_1aaf50b38d92b194d8af4a2f349b0bcfa0">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mdiv_1a5a1eb3a43ee2d40bc9141e2bacf7dc08">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_1a5ff39529bba8fe102c31923a12b5162f">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_custos_1a09aa8de289e4ad804464cee76956b7a2">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_caesura_1ae6064907de8f367126357fcfce730299">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_breath_1a7d4f9780bd70df52df3e5d8fe6a50ace">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_annot_1a6005e699fef35ee8e2a4f86ba428457d">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_slur_1a5fa6aa883d9531cc351d362158127e3f">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_1aac48120aea3bf86661bd2fbbdb4ac257">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pages_1a652b6672709453915b30bee50c15e176">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_multi_rpt_1a33143e2bd1ec32d92464fa60d9f04bf9">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_trem_1a7bdd9a33fbda39c95fc449a86627b4a3">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fing_1a73e2219565c97671a89d647c3c629e0f">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_control_element_1a48340f22a9f9255fe91ec63745473e46">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_boundary_end_1a78ebc275970fdb75d2efbacbca166f01">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beat_rpt_1aa7fe876f846f9c5f90ae308425950360">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_anchored_text_1aa4f44c9dd35ee0df9fbf250ee6efc66e">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syllable_1a976c8a832c81de9c04b8403699930521">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rpt2_1a8c5051da4de7dc05a1e15bc2d39cbaed">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rpt_1adebf25fa7047f327c3f4dbf2261638e4">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_meter_sig_1a287508ab8d80be4645d079bfc2ac958f">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_halfm_rpt_1afe70004edd63842c8d78daca04822ae6">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_expansion_1aa3bc2aa2df8a8ac06fb69f04c161fc65">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dots_1ace36ac946510966e683303715be70ca2">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_artic_1a4714c7d0a8b6739daa5a84352e953206">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_section_1a3a8f93b25f4747a02f151d9acbe21339">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_running_element_1a095daae7e2dff3c25631779f380a96ad">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1ae043bc6c34e3044bd8bf1befa9ad3726">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bar_line_1a60fbf7bdd1374144c8c37fcebfa10182">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_zone_1a727b3e2785bb8444ae2928320bb57d55">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_surface_1a8dc1a4356b3f54cd9175915149fb5a50">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ligature_1a3ae9b7786658bd725726f7dc8aef638d">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_key_accid_1ac7d38a0d440e7bbada7c9fb7a2e7af1c">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ending_1aa2da16ca00ba71020bf0650e9792bebe">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_1ac1b78b0bf98f28b9a6f54c4f7a749394">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_instr_def_1ab186eaaae550f24d400123ed19f0247a">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_gliss_1a31d842787e90621d87d15674d7653409">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bracket_span_1a89b639e159000660ca04c3067419861f">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_aligner_1a6aaada146129d7e4c727bb471aa8ad96">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rend_1a6c3d2e306ed9ad45275d48e70c394910">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_page_1aa791ea73a455a4c528fead15b09116e9">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grp_sym_1a87d7fef8fa8c5ed7cca6d1c01d1b76c8">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_facsimile_1a7101cf5ffe6fce1fba0f811308adfe74">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_reh_1ac2ae1d54238fad4c18ee6f0c05a8ca8d">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_multi_rest_1a5626d966235172cca62a2ec49eaa948a">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_hairpin_1a25793bd74be8581827064934c6091f4a">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_arpeg_1a873503501f6985affb961db28f753ea8">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_turn_1a5b87b5dcea0a9ef391588d170218365b">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tie_1a8dc99e4d932100b988b7d640caefde88">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tempo_1a3ddab8ad8b408f9347528f66f9d7f1c3">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_octave_1a90fcca290e82ed40218c093433270888">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rest_1a673c396056144078104a468161c68eb9">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mordent_1a3f628a2ca94eb8605c5bcf92d1ddb192">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_num_1a233e2b78096b56164e2715db94609979">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_harm_1a0e70b0540ba17fcab90ce11044237215">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dynam_1a53536fbd5d750b799e76f64826d381c0">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_clef_1a6361ba106dbac7eac2baaa84345bbcf1">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pedal_1a5d860f4dfd461b76d92c9fd6baf9bdae">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dir_1aafe41c4d53971b746a80d293207d35f5">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_trill_1a09e9e65e884e5db580b3a20243901ddc">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_grp_1adad64497ae7d9d984b9b5fedb6d5b218">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mensur_1aa87d905b4a48a9d56e3a409113a5a2b3">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fermata_1a95cdab08d080a5a17229ee9eaf65d8d7">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_accid_1a3689c1fdcdb79936f916165090337084">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1ad8ddaeb186b8177f2a564569f0483222">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_def_1adce6d45d600288f618295a80674cb19c">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_meter_sig_grp_1a92064fc7ddebe6f8e80f333ae7fa4a18">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_key_sig_1ac721f136d36dae83f351d24e36895519">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syl_1a10371013889039451c45b6240282ba30">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a45ab1dbee2599d16bbdd1184e6f499ff">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_editorial_element_1a0167c3d81c50f835b90a102ac396c228">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_doc_1ab032fe3514cf8bb156c066687e3550c2">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1a193dde1fba281d43e464b4ff44b349b7">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_nc_1a8eed35c4c73391461d4e9e4c3c6a2946">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_def_element_1ac869e0614a1d896bd39da52d7b9c8ed8">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a16c4e518ca56bd1fb4172f4f08bcb53d">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1adfd6e9c10d495f6763d0e92823337a83">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1a7da1bd0f574ea8beaa2d056d6dc9a6c2">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a9f65c7db6b9594f725acfb3f9036fe9d">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_neume_1a228b98c2affe8cb7679f3e9f52958bbb">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1a88b7a68ecd32a24add5288d9e883730a">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_alignment_1a83dd2c33e9c6d89bc21a2d91c0f7a972">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bar_line_attr_1acf78873ec9e3df67f7f3941690c5b382">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_flag_1a3749c17294ae18545ea377ed60c233fc">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_def_1acc5db7ff7fdb0f593d4de90bbcddf30a">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beam_1ab71aee85c2aa5a40f3108de7cf6d4b5f">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_alignment_1a20d7a25eb66364941345cc321f95e99c">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_bracket_1a37f8007d0623fb4990b7dd9a16f019c2">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_num_1a9f1077d40af92d6f16f5c85b9ebc16f3">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_alignment_reference_1a62d722004288cf230d54c2b02e4b4619">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_stem_1a1c6de5b9422c0ce447ee7745e09444b5">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_aligner_1aed6055de2a0f45d8cdc5a524e491d5fa">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grace_aligner_1aeb3adc12f4eaf05b065d610d8ae2d35f">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_timestamp_aligner_1ad14bb298375cb9e59a82aa77880a0961">GetClassId</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="64" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a85f5f4c2c61b31f3e0cfafccf6893dd3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string vrv::Object::GetClassName</definition>
        <argsstring>() const</argsstring>
        <name>GetClassName</name>
        <reimplementedby refid="classvrv_1_1_timestamp_attr_1ad4050d022ea8c15ccee2638709b0c66f">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_svg_1a69e47858bc4822f9a900dc2575852001">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_phrase_1a04f81d0ac9f511f8f6a6b09390f97587">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_unclear_1a0a001dd044cb25c0e3836f770664c7d5">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_supplied_1a259a81eaf4b46f9ff9a36f7c7a1c8121">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_sic_1a2847a2005fd1c3a459a4446187cc45df">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_restore_1ae7794e08ac80255658332e268598c2a6">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_reg_1a333def24df83f51122906b3075dbd1a4">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rdg_1ad3d754c0f612126151b8d59ac206be2f">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_plica_1adff4bb05d86797cdaf411515b6619aa9">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_orig_1ac488373a096ccbb7818b9d17fff5c945">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lem_1aafa81ea60f3438d5140d5286b2fa8af3">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grace_grp_1a93216b4ebfc9ef11c5a2ef8d4604a9c2">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_expan_1a2f63e8db77d2eb6ea0553e5a0c239a7d">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_del_1a202e885866ba149c00f17fb8a5b24afd">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_damage_1a6527885dd8f780b49d96e2fd361910fc">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_corr_1aef97d87d64491c58e0b64598e3d36b81">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_app_1a8d1d561a48a1d30f53b25f6a159b6393">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_add_1a1f059713d9e3547764250a838bad3543">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_abbr_1a4e1e79b7a106cd95a8c07002476bad33">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pg_head2_1a60236b524941d45a21ae47a305cc65d2">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pg_head_1a2938093ee475654a599a2b8ac8c0a450">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pg_foot2_1a742a25002aaccf7676d77c884645c6f8">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pg_foot_1a76e83795b57754fe88c37c4786733b16">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_choice_1a568317d32339905a334d9350370dabf6">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tab_grp_1a24fb5b2a70b3181293dd6f01125dd2b2">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tab_dur_sym_1ac9ebcdb95e02b71a3efd0ce61d6b6d56">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_space_1a39574eb7ac95055d5dd5b43406ad9793">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lv_1add8210807259683af191790db1b3ae26">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dot_1aabcde78742af726ff904103de75fc789">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_verse_1a37836f552f298a3b22d8614b4386ad4e">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuning_1a1532038385cc69a393312f775092b481">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_text_1aa53a047f37b8ecde1f1052c298c5cd77">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_subst_1a216c07d734446aa5ae9eab9a52f2c415">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_space_1a4c0e4916fb72394771df7fc03ffd4272">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ref_1ad46a51726bdc61bf07cff7719cd62705">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_proport_1ab4db17374e6da8cd875e66fafecbbdc2">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pitch_inflection_1a2587cc1860959894a6fc61fe1b819c1c">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lb_1ad678650e3538ee3cf291ebfa83d0f752">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_label_abbr_1a4e84b467d510e2a3a1dc8218a9ae290a">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_label_1a0a6f2745b291b7b579f333cf50ba1038">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fig_1a2fe2ec897e18642d0844b4d8a7c9758d">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fb_1ad4099ad8fe48d6e7c5377c305d5d5eb8">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_course_1a8dcf681960de13564e779d99f1037766">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_b_trem_1a734f71d5b174eb977b17e3829406173a">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_sb_1a28c3b2f4003c0a24e9526767aa2b3948">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pb_1adf3ce979bc817d3ea3e8615f75586a67">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_num_1ab9f8d037fc2e6e65c435aed39c19ebd6">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mdiv_1a104654f21bd69ec37d12794e3c56ed96">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_1adcd33d7962e8b28ba1266b4a59bfe2c9">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_custos_1ae1d9ed3b8898b4ccef02bedf933c052d">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_caesura_1acec40982f8ed7d27d1340a638d46e72a">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_breath_1af04fa11e669fab538d126827e6f9f0eb">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_annot_1a298a5acc7e6533854c43ff768a16af2e">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_slur_1ab39993d37ee0c8444785c9d1fc52749c">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_1a59a9ccc5f7848360dde90eb1ec8cd6f6">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pages_1ad3f3236ac1f36516613e8d3e057b4712">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_multi_rpt_1a27e54efc19e2b360a66b5044d469dc9f">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_trem_1afa1e493c18d2ef33388f92b50181bd0b">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fing_1a0f6193d530bb2bbb631548494b55f27e">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_boundary_end_1a985e1f6874a282e7cbc265d17c0a7ea1">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beat_rpt_1ae787f3bd2e6b76d2c895be9b329187ad">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_anchored_text_1a22102f18825dad644de0f46d58519104">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syllable_1a2a5c9602b56b551464071f273a4ab4a3">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rpt2_1ab22ccc833c4149c4acc3dd265c34af08">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rpt_1a4b142f0e9fac9b421a474e5ecae5cbeb">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_meter_sig_1a6ed6b7343b2688e4dd4eb9c8b6ff1ebc">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_halfm_rpt_1a8b51d0fb86a502412f2d382d34a26b7f">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_expansion_1a2d692fc7025868a47148e6c9e4ebd692">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dots_1a32afb4429a89eebf9ca95d6b13b71a97">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_artic_1ac993bfadffd73b30fe6b372399d2d352">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_section_1ad58f3e2338a0c69d60712ee4a15a9f6d">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bar_line_1a1874f31186ae0ce4db753c4acb43a6f3">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ligature_1a6d55fd013e98a7f50096ab6209da6810">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_key_accid_1aa51b7b52aa25b4e49f25b512a8cc2898">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ending_1a5bb919f72e9a70848f1984fd709bf547">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_1ae62bb3aa3c15a091d8d64a5366671ca8">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_instr_def_1a4375301d21ab5ee659b707504a9f6ed9">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_gliss_1a479807b355134a620a7ba620c00dae57">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bracket_span_1ac65c6039e5ee44ad256cf7b313076d80">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rend_1a4d502b287aa6e4ec369820fd26ffc258">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_page_1a2654a81e9c2b64be38c3da1ee6c38f2d">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grp_sym_1a9351cba3a4f112b9261f53a3081da7c4">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_reh_1aee84efc18df7f1aa2b864282a72dd95c">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_multi_rest_1ae8ef756ef78bc1f72210ab4a99bd4f89">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_hairpin_1a34ac5d23a8589f900b882d4a37bbe6ef">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_arpeg_1a80bcbb96849f494a87db04dae4a6c6a0">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_turn_1a4c987b975705e2435348abd1b9872e2a">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tie_1aaa7b56a76a77bc866a6b49f26ad13fdd">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tempo_1a95d82557e3abe86d6cbb90ee2cd0d0df">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_octave_1a37c8e7efd2a2521801bfeb23087b35ca">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rest_1a92c399e5cc8e7d0649f8d0047648ecb8">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mordent_1a938a87da4cf6bd6dbacd47f2c18d9ca9">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_num_1afeaf6bd7fed835dbae80952478690182">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_harm_1a8f59154cf70725cf9630c6bc7fa92a6d">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_facsimile_1ae88b780a44a7ae89e3d11d3ee911fd4c">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dynam_1a577bdd14c6d28306dc57cf187b50fb2e">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_clef_1a6d73d3bcf05d8a99e58bd094e734f93e">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pedal_1a64e9f16f7a62fd02d6d7491d052754c5">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dir_1afc284a6a1c4a5176ec8a80f2873156f4">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_trill_1accf6c63b5e3866d436398dc1ca23f761">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_grp_1aa7b93aae121239427d02183c48631275">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mensur_1a1e84a5086829f087234f1911f9cdb9fb">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fermata_1a63abb14ee6e2bbc2e2af07a9a7337e1b">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_accid_1a818f5a0b5822e8231f33898bce3f07ac">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a688880f7c6b9b9c75f3124df1dea65ba">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_def_1ae0013f0e223f9e450295fa96f1f6ad62">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_meter_sig_grp_1a514deb6dec769caf3e5e3d305c9f2eb9">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_key_sig_1a02524e3562b11cd590f785d9e957143f">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syl_1a7438acbc222b7cf550e1cc791c123af2">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a80895a7014216eebfbe9d25887f5f256">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1a7902af1e7f1494c546bc11afb6be5766">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_nc_1a8df2aea4fe02fd6c3abb8fa7451ca3e1">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a4bf613cd46cb142f95c45c4312b1d682">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1a023099b099b09a829f1a120b7cf0b1c2">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a098196c1420ef58217b023e710b2fe99">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_neume_1acb59b225603532388b96aa777165dda4">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1aae29d17ca525e7bc9c258d5697ae20de">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bar_line_attr_1a15b3c95296bbd8ef19ca525a023a5d5c">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_flag_1a8e1b942f4c24d383ab8c5a9e71a6a02a">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_def_1a0eb1eacbcf4060a8ec958d73a8d5f65e">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beam_1a5c43590b54de49afaa058cd8efe96851">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_bracket_1ac578832ee8b44bcbaaf26018ce9e59d6">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_num_1a211e62b53e1595de68c3f4b649c86240">GetClassName</reimplementedby>
        <reimplementedby refid="classvrv_1_1_stem_1af5d69a843ce040620e33fb64e5e17f31">GetClassName</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="65" column="25" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="65" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a9bc335e3bc5405f5dbaae757b5629996" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::SetAsReferenceObject</definition>
        <argsstring>()</argsstring>
        <name>SetAsReferenceObject</name>
        <briefdescription>
<para>Make an object a reference object that do not own children. </para>
        </briefdescription>
        <detaileddescription>
<para>This cannot be un-done and has to be set before any child is added. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="73" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ad507cfd401ea330cca65a4891b90da80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsReferenceObject</definition>
        <argsstring>() const</argsstring>
        <name>IsReferenceObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="74" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="74" bodyend="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for checking if an object is part of a group of classId&apos;s.</header>
      <description><para>For example, all <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> child class classId&apos;s are between LAYER_ELEMENT and LAYER_ELEMENT_max.</para>
<para>See classId enum. </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_object_1aab9a49af1e67891dcfd1b929a6d64aa9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsControlElement</definition>
        <argsstring>() const</argsstring>
        <name>IsControlElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="93" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a46776dd312ff3631580f9e0ff293d52e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsEditorialElement</definition>
        <argsstring>() const</argsstring>
        <name>IsEditorialElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="97" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a311186b3525f994471394fcc38bbcda8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsLayerElement</definition>
        <argsstring>() const</argsstring>
        <name>IsLayerElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="101" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a5b19179d87ef32147c3d513fa735c07f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsRunningElement</definition>
        <argsstring>() const</argsstring>
        <name>IsRunningElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="105" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a774acf3d4a93bd2e94451eeb1b883273" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsScoreDefElement</definition>
        <argsstring>() const</argsstring>
        <name>IsScoreDefElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="109" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a334a7956ff32ade0704f4afdd74f37a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsSystemElement</definition>
        <argsstring>() const</argsstring>
        <name>IsSystemElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="113" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a958bf53eb4117b0438aa5ddb9264c1c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsTextElement</definition>
        <argsstring>() const</argsstring>
        <name>IsTextElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="117" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="117" bodyend="117"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for registering a MEI att class and for registering interfaces regrouping MEI att classes.</header>
      <memberdef kind="function" id="classvrv_1_1_object_1aa5bcd61a747583c6ed2b97039129df68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::RegisterAttClass</definition>
        <argsstring>(AttClassId attClassId)</argsstring>
        <name>RegisterAttClass</name>
        <param>
          <type>AttClassId</type>
          <declname>attClassId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="124" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a9020ecbd4da7cb50ed8ffa686eeae8e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::HasAttClass</definition>
        <argsstring>(AttClassId attClassId) const</argsstring>
        <name>HasAttClass</name>
        <param>
          <type>AttClassId</type>
          <declname>attClassId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="125" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a172109ee605efdf2c2b23440adef333c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::RegisterInterface</definition>
        <argsstring>(std::vector&lt; AttClassId &gt; *attClasses, InterfaceId interfaceId)</argsstring>
        <name>RegisterInterface</name>
        <param>
          <type>std::vector&lt; AttClassId &gt; *</type>
          <declname>attClasses</declname>
        </param>
        <param>
          <type>InterfaceId</type>
          <declname>interfaceId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="129" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a1639642ba9433617ec04608f2d2570bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::HasInterface</definition>
        <argsstring>(InterfaceId interfaceId) const</argsstring>
        <name>HasInterface</name>
        <param>
          <type>InterfaceId</type>
          <declname>interfaceId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="130" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="130" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Insert an object before or after a given child</header>
      <memberdef kind="function" id="classvrv_1_1_object_1a26dd6389f8b6ce5ff1cf9f0b779a0d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::InsertBefore</definition>
        <argsstring>(Object *child, Object *newChild)</argsstring>
        <name>InsertBefore</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>newChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="188" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aaf1ba626f7c0d6be44373b6cfe29855f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::InsertAfter</definition>
        <argsstring>(Object *child, Object *newChild)</argsstring>
        <name>InsertAfter</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>newChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="189" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Children count, with or without a ClassId.</header>
      <description><para>Used for classes with several types of children.</para>
<para>The methods count at the first level. </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_object_1a96ae60d000961398754d5b22de89cc4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Object::GetChildCount</definition>
        <argsstring>() const</argsstring>
        <name>GetChildCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="246" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a21704672a51a54150db818e2e14af2da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Object::GetChildCount</definition>
        <argsstring>(const ClassId classId) const</argsstring>
        <name>GetChildCount</name>
        <param>
          <type>const ClassId</type>
          <declname>classId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="247" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a88129489683bd7a5ec580f87e43e3360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Object::GetChildCount</definition>
        <argsstring>(const ClassId classId, int deepth)</argsstring>
        <name>GetChildCount</name>
        <param>
          <type>const ClassId</type>
          <declname>classId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="248" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iterator methods for accessing children.</header>
      <description><para>GetFirst returns the first element child of the specified type.</para>
<para>Its position and the specified type are stored and used of accessing next elements The methods returns NULL when no child is found or when the end is reached. Always call GetFirst before calling GetNext() or call GetNext(child) </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_object_1a4f539160a7684d67d0c4e01e5dd06c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::GetFirst</definition>
        <argsstring>(const ClassId classId=UNSPECIFIED)</argsstring>
        <name>GetFirst</name>
        <param>
          <type>const ClassId</type>
          <declname>classId</declname>
          <defval>UNSPECIFIED</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="287" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ab2e351247e616a3f30eaf2e3d125f054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::GetNext</definition>
        <argsstring>()</argsstring>
        <name>GetNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="288" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Retrieving next or previous sibling of a certain type.</header>
      <description><para>Returns NULL is not found </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_object_1a3fda6549b288e139959f2e50355792e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::GetNext</definition>
        <argsstring>(const Object *child, const ClassId classId=UNSPECIFIED)</argsstring>
        <name>GetNext</name>
        <param>
          <type>const <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type>const ClassId</type>
          <declname>classId</declname>
          <defval>UNSPECIFIED</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="296" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a26a7c60cdf50a4072927aa671112f1f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::GetPrevious</definition>
        <argsstring>(const Object *child, const ClassId classId=UNSPECIFIED)</argsstring>
        <name>GetPrevious</name>
        <param>
          <type>const <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type>const ClassId</type>
          <declname>classId</declname>
          <defval>UNSPECIFIED</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="297" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Get the X and Y drawing position</header>
      <memberdef kind="function" id="classvrv_1_1_object_1af17afdb1b9eba2df2d2f9b14bf98a8b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::GetDrawingX</definition>
        <argsstring>() const</argsstring>
        <name>GetDrawingX</name>
        <reimplements refid="classvrv_1_1_bounding_box_1a97b2b5920eb6e08b8bdf8d791c853dce">GetDrawingX</reimplements>
        <reimplementedby refid="classvrv_1_1_text_element_1a9b49c48f2ac323926ab4fcb33ccbf65f">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_arpeg_1acc23d06529c683a70382d3388e95fce2">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1a9173ddc12fab3e823f592b4688cec8e0">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grp_sym_1a41460b521dec232a40ad03a729f2ac16">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a58772000b1d3e3f62cfed3fac78d5e77">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_running_element_1a114aaaa3b66641995e6d29597eeb951b">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1aaf9d5cd441fed66414ec7165c1fa4d10">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a7d781ed88cc2163372144e0b14a86158">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a4c15879eb45487137492ccbd8a96fc39">GetDrawingX</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="343" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a93703095a714be5684eb0968475a87c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::GetDrawingY</definition>
        <argsstring>() const</argsstring>
        <name>GetDrawingY</name>
        <reimplements refid="classvrv_1_1_bounding_box_1a94c585ec874e040e3e6e39c5d8dddc5c">GetDrawingY</reimplements>
        <reimplementedby refid="classvrv_1_1_text_element_1af57d119e49cea8bd91294d09af229bb1">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1a44a902421018e125f191dfcb31d8c50a">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grp_sym_1a5133bfc250ab2ed745270c7b77edfaf1">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a8bb75b3cabf6f6b55b512744aed3d261">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_running_element_1ae279927170b7ea4627f06142fad9c9eb">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a3d6e1da7c6a779c77eebdcc749723e1e">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a19ea22c5c2f0cbd87cf19430d1cedefe">GetDrawingY</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="344" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Reset the cached values of the drawingX and Y values.</header>
      <description><para>Reset all children recursively </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_object_1a7cd2ff14f4324ac8fdb54739fac93532" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::Object::ResetCachedDrawingX</definition>
        <argsstring>() const</argsstring>
        <name>ResetCachedDrawingX</name>
        <reimplements refid="classvrv_1_1_bounding_box_1a5b37b259a20df6f83ff94908c4d9fbea">ResetCachedDrawingX</reimplements>
        <reimplementedby refid="classvrv_1_1_measure_1ab9a3f0be6d3e66a6fafc27ff5a8b7372">ResetCachedDrawingX</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="352" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1acdcf2a3a18e5b0451d902720ef1408ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::Object::ResetCachedDrawingY</definition>
        <argsstring>() const</argsstring>
        <name>ResetCachedDrawingY</name>
        <reimplements refid="classvrv_1_1_bounding_box_1a928808d6ff900985afdfe1856490d505">ResetCachedDrawingY</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="353" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Setter and getter of the attribute flag</header>
      <memberdef kind="function" id="classvrv_1_1_object_1af8ee73eca8e0a08ae535318c4462fad1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsAttribute</definition>
        <argsstring>() const</argsstring>
        <name>IsAttribute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="490" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="490" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a24ff4e053bb15d8d893c9a1a6b2f9639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::IsAttribute</definition>
        <argsstring>(bool isAttribute)</argsstring>
        <name>IsAttribute</name>
        <param>
          <type>bool</type>
          <declname>isAttribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="491" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="491" bodyend="491"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Setter and getter of the expansion flag</header>
      <memberdef kind="function" id="classvrv_1_1_object_1a76f4663d1b09c5fe2b0c771eeb3f7d0e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsExpansion</definition>
        <argsstring>() const</argsstring>
        <name>IsExpansion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="498" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="498" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a07dfe3de52f16cff12eefabe11c6cd96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::IsExpansion</definition>
        <argsstring>(bool isExpansion)</argsstring>
        <name>IsExpansion</name>
        <param>
          <type>bool</type>
          <declname>isExpansion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="499" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="499" bodyend="499"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functors for finding objects</header>
      <memberdef kind="function" id="classvrv_1_1_object_1a3a8ac50b3a292c42c0b24d7c7a6cd3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::FindByUuid</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>FindByUuid</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Find a <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> with a specified uuid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="573" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a7cfaeb87486d72cd79c8aec19f8b8108" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::FindByComparison</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>FindByComparison</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Find a <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> with a <ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> functor . </para>
        </briefdescription>
        <detaileddescription>
<para><linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="577" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ae21b1881fd8e810d784efd2b3327ce9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::FindExtremeByComparison</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>FindExtremeByComparison</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Find a <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> with the extreme value with a <ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> functor . </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="582" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aa5fd51861abce2d3237ef9d115d32ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::FindAllByComparison</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>FindAllByComparison</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Find a all <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> with an <ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> functor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="587" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1afe64fa5f9df4e735ed7f1e9a5935a339" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::FindAllBetween</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>FindAllBetween</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Find a all <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> between a start and end <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> and with an <ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> functor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="592" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1acd19a93751c317da1c6a0873e606f882" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::FindAllReferencedObjects</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>FindAllReferencedObjects</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Find a all <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> to which another object points to in the data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="597" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a9af0cce7b5db85a68ed87c274176aa66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::LayerCountInTimeSpan</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>LayerCountInTimeSpan</name>
        <reimplementedby refid="classvrv_1_1_meter_sig_1a52ae19681b0e8e94cef2481ce90312bf">LayerCountInTimeSpan</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mensur_1a13788ec7feed5b0312421efbf60e5329">LayerCountInTimeSpan</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a4a33beb818e9013104f3b54d738d17dc">LayerCountInTimeSpan</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Look if the time / duration passed as parameter overlap with a space in the alignment references. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="602" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="602" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1add866a8144bcb528808a3e9d6a8f9d45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::LayerElementsInTimeSpan</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>LayerElementsInTimeSpan</name>
        <reimplementedby refid="classvrv_1_1_layer_element_1a14ce747ddac9314656a445974ed2bf8a">LayerElementsInTimeSpan</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Look for all the layer elements that overlap with the time / duration within certain layer passed as parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="607" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="607" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1adf698716d3820efeb5d1af9bfd24a187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::FindSpannedLayerElements</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>FindSpannedLayerElements</name>
        <reimplementedby refid="classvrv_1_1_layer_element_1a5333826e9fc9e8438f4852208113e418">FindSpannedLayerElements</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Retrieve the layer elements spanned by two points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="612" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="612" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a3eb3c52e16525ed1a559a825fa85e00e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::GetAlignmentLeftRight</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>GetAlignmentLeftRight</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Retrieve the minimum left and maximum right for an alignment. </para>
        </briefdescription>
        <detaileddescription>
<para>Used in GraceAligner::GetGraceGroupLeft and GraceAligner::GetGraceGroupRight </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="618" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functors for loading and saving the docuement</header>
      <memberdef kind="function" id="classvrv_1_1_object_1ae930432f04c711ac22a14c66a92feb5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ConvertToPageBased</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ConvertToPageBased</name>
        <reimplementedby refid="classvrv_1_1_system_element_1a40e18f5218b411bfe4caf158138b97e2">ConvertToPageBased</reimplementedby>
        <reimplementedby refid="classvrv_1_1_section_1acdd7e18394d27f6b6772e54906db980c">ConvertToPageBased</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ending_1ad02f22cea7a4925749540248da475e26">ConvertToPageBased</reimplementedby>
        <reimplementedby refid="classvrv_1_1_editorial_element_1a2c4de467927781e48d6c968d2d8bdf3e">ConvertToPageBased</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_def_1a682908fdfabf7d58172278157d910e22">ConvertToPageBased</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1ad7f854dba4cbe22e81661f7acf10e56c">ConvertToPageBased</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Convert top-level all container (section, endings) and editorial elements to boundary elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="631" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="631" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ada7452f72d022232966a2d5822b8bbc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ConvertToPageBasedEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ConvertToPageBasedEnd</name>
        <reimplementedby refid="classvrv_1_1_section_1aad5c117f568a40b961f32149ec187661">ConvertToPageBasedEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ending_1a9dcb8acc92d09f15876bbd170ea5b026">ConvertToPageBasedEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_editorial_element_1aba5490648183a9e5b757f43b0bebd445">ConvertToPageBasedEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="632" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="632" bodyend="632"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1ada935f44326f0c4ecfc068694461718b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ConvertToCastOffMensural</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>ConvertToCastOffMensural</name>
        <reimplementedby refid="classvrv_1_1_system_element_1ae63697014c36d8fdb42b33bb304712ad">ConvertToCastOffMensural</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bar_line_1a504350fdc36aaae756529a237981cc34">ConvertToCastOffMensural</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1aefef81d13f6dddad4edb00ba33e220c9">ConvertToCastOffMensural</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1ad17da9513b74e8fcfd3e8893a54da16d">ConvertToCastOffMensural</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a7f755d22cf46575c6f1069edeb2f89d5">ConvertToCastOffMensural</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Convert mensural MEI into cast-off (measure) segments looking at the barLine objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Segment positions occur where a barLine is set on all staves. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="640" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a4dc4ba189667de40dfbb15b88adb5b0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ConvertToUnCastOffMensural</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ConvertToUnCastOffMensural</name>
        <reimplementedby refid="classvrv_1_1_section_1a40e9dad5539e0a06760cfc518956f4a5">ConvertToUnCastOffMensural</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1a0c1820fbd11943a83be7d9fc85bd372c">ConvertToUnCastOffMensural</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1af84b21d4ad5d2220833b830d5b2721aa">ConvertToUnCastOffMensural</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="641" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="641" bodyend="641"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1ad471da0d7ec33b8a818cc94c9630314b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ConvertMarkupAnalytical</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ConvertMarkupAnalytical</name>
        <reimplementedby refid="classvrv_1_1_m_rest_1a845ac484506e96521355ced8674bca54">ConvertMarkupAnalytical</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a6f1cb03d66b90861cb71fe0a013ead6a">ConvertMarkupAnalytical</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1a58500ef2d78bf38608369f80ec64bf03">ConvertMarkupAnalytical</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1aba95f5cbd284314def2cb1601f5b8887">ConvertMarkupAnalytical</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Convert analytical markup (@fermata, @tie) to elements. </para>
        </briefdescription>
        <detaileddescription>
<para>See Doc::ConvertMarkupAnalyticalDoc </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="649" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="649" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a677194130b19ebd382b4868f9284985b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ConvertMarkupAnalyticalEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ConvertMarkupAnalyticalEnd</name>
        <reimplementedby refid="classvrv_1_1_chord_1a8ead5cf51796bffbe369766983605b7a">ConvertMarkupAnalyticalEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a9ef54d0ae25fead7b4be98041aab013e">ConvertMarkupAnalyticalEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="650" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="650" bodyend="650"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a7262b554ba150b54b434fc7c0c93001d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ConvertMarkupArtic</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ConvertMarkupArtic</name>
        <reimplementedby refid="classvrv_1_1_artic_1a566d6c721af17c666de8c98089056298">ConvertMarkupArtic</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Convert markup of artic@artic multi value into distinct artic elements. </para>
        </briefdescription>
        <detaileddescription>
<para>See Doc::ConvertMarkupAnalyticalDoc </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="658" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="658" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1adeeaf95b17b15194260884d306a72214" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ConvertMarkupArticEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ConvertMarkupArticEnd</name>
        <reimplementedby refid="classvrv_1_1_layer_1ae4714f7955fca2b17211f4592dfaa91c">ConvertMarkupArticEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="659" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="659" bodyend="659"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a8ec6663670b4b6522cb4892babf36742" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::Save</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>Save</name>
        <reimplementedby refid="classvrv_1_1_dots_1a4454529ca358ddefdf610c417d6d28bc">Save</reimplementedby>
        <reimplementedby refid="classvrv_1_1_flag_1a82e80def83d663169416ba589fafce81">Save</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_bracket_1ab4989f09c8e7b778808e713aecb2c991">Save</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_num_1a40de91808c7743a5b9c8383f1aea32dd">Save</reimplementedby>
        <reimplementedby refid="classvrv_1_1_stem_1a85e737a4827ede4cc5621048db5f0b8e">Save</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_num_1a00abba36e85227ee915fb9f8bde32f68">Save</reimplementedby>
        <reimplementedby refid="classvrv_1_1_running_element_1a3d92ee04ae6d9d496dd678aff7a90c71">Save</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a53146c5860c0e95b6510108dbc5493d8">Save</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Save the content of any object by calling the appropriate FileOutputStream method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="666" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ad628dce30da1167aa84313ea7a4f5612" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::SaveEnd</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>SaveEnd</name>
        <reimplementedby refid="classvrv_1_1_dots_1a435160807c159bb5db166095ce73c3ab">SaveEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_flag_1a8f4b4b5fa187b3b4b9a843756fe00680">SaveEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_bracket_1a437d58d44cad85d3e4a75ffd5dde1cb5">SaveEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_num_1a575b3cf982c10899855aad041c7acd6f">SaveEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_stem_1a1fce85e741b0c8266c25c4ad09b6553a">SaveEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_num_1a422110e5b3cb160b43038ef48b681f86">SaveEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_running_element_1a8a84599f9400c228af119dcb7c5c22a1">SaveEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1af731c117b6225ac76b540a9946a7a105">SaveEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="667" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functors for aligning the content horizontally</header>
      <memberdef kind="function" id="classvrv_1_1_object_1acea387d6c12925339a10f94312d9a82f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ResetHorizontalAlignment</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ResetHorizontalAlignment</name>
        <reimplementedby refid="classvrv_1_1_dot_1ad9646c30e98336c512bc195c87d535be">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_custos_1a7b61ca3e20e31a1a89ce896f46e31c79">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rest_1a96355153a35f29e29e3268f8b5b578ea">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1a73c7828c73925d4b483c90ea3c45e0a6">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dots_1adfc4ce46f30c6307b3977cddc94aa752">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_arpeg_1afe4fc5c1345b90506ebe58d2f30dfaba">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_accid_1a31dd8a56288fb35ead86ddd8fd82b74b">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_1a569147ed101cd672f91ec02a8e671338">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a7b59b9f07f33f684e142d888cb068187">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a1ce3b747859b8527f6678952e51c2d8c">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1a8dfad94746e5bc31420776c9783224f2">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_bracket_1a41915a43a5710c574e62d990b5336c79">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1ad80313afbd3e9a3d22a320cfbc6b5685">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1a57ed94630df5769cc71b832f6ea5522b">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a13da1440d609e772eb651bf169802999">ResetHorizontalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_num_1a1b8777b182073961ae82249c0c464a65">ResetHorizontalAlignment</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Reset the horizontal alignment environment for various types for object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="680" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="680" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ac3beb8d8246e880f20c92c4e3725545a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AlignHorizontally</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AlignHorizontally</name>
        <reimplementedby refid="classvrv_1_1_meter_sig_grp_1a1500fe7f2da3f97147c772d0fd0d24c0">AlignHorizontally</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1ac5485e7573278cc935c49edbe75e580e">AlignHorizontally</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a1a5a6358590d1e40aa6db5111897d955">AlignHorizontally</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1ab2e1b95d9f6b6be1a493a2c483094b04">AlignHorizontally</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1aa9313165677a808adb9ac9084aa012d2">AlignHorizontally</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1aa3b562577b2c8ee3703bef304dc848d9">AlignHorizontally</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Align horizontally the content of a page. </para>
        </briefdescription>
        <detaileddescription>
<para>For each <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref>, instanciate its <ref refid="classvrv_1_1_alignment" kindref="compound">Alignment</ref>. It creates it if no other note or event occurs at its position. At the end, for each <ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref>, align the grace note stacked in GraceAlignment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="689" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="689" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a475456da50e7eeb1320dcd93134c2b1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AlignHorizontallyEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AlignHorizontallyEnd</name>
        <reimplementedby refid="classvrv_1_1_layer_1aa8aa7f77d951d8ab597c1556b54e1ad9">AlignHorizontallyEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a9393bb9c3877fef29c07d468ecacb044">AlignHorizontallyEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="690" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="690" bodyend="690"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a4360c3bd5d8f241c0b0dc1624d7402cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AlignMeasures</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AlignMeasures</name>
        <reimplementedby refid="classvrv_1_1_system_1a6c2c305854d0f875af16f0a48c98425c">AlignMeasures</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a82457254eec82c88afa981df53a0c47c">AlignMeasures</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Align the measures by adjusting the m_drawingXRel position looking at the <ref refid="classvrv_1_1_measure_aligner" kindref="compound">MeasureAligner</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>At the end, store the width of the system in the <ref refid="classvrv_1_1_measure_aligner" kindref="compound">MeasureAligner</ref> for justification. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="698" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="698" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ae8638bfdf6291004aa08e84311b6e33d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AlignMeasuresEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AlignMeasuresEnd</name>
        <reimplementedby refid="classvrv_1_1_system_1aebda3fe2863694e533669eafc693fbd0">AlignMeasuresEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="699" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="699" bodyend="699"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a9a7ac871bbd388bc57ad3efbcd5523e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustArpeg</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustArpeg</name>
        <reimplementedby refid="classvrv_1_1_arpeg_1a5dd32e1801e6fd0b203ac40b5e99c3a3">AdjustArpeg</reimplementedby>
        <reimplementedby refid="classvrv_1_1_alignment_1a7a0dad8192abed90b8eedc6b5b224dd5">AdjustArpeg</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="731" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="731" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1adbd52d9a86b0a97174b734269a690048" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustArpegEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustArpegEnd</name>
        <reimplementedby refid="classvrv_1_1_measure_1a273ae3933bf78d6c3d439dadf059a673">AdjustArpegEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="732" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="732" bodyend="732"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a1745790d27bcd5c9b11754ea44fdc376" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustDots</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustDots</name>
        <reimplementedby refid="classvrv_1_1_layer_element_1a971d0cc89a6ddfeabfa1d60362d9121c">AdjustDots</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1aac3c762c3008a89cfda33dee7d4f3a47">AdjustDots</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the position of the dots for multiple layers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="744" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="744" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ae0790c79940de6c0bd58e9022043b493" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustDotsEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustDotsEnd</name>
        <reimplementedby refid="classvrv_1_1_alignment_1accd249535f98c56e371409a7c964730f">AdjustDotsEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="745" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="745" bodyend="745"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Lay out the X positions of the grace notes looking at the bounding boxes.</header>
      <description><para>The functor is redirected from the <ref refid="classvrv_1_1_measure_aligner" kindref="compound">MeasureAligner</ref> and then from the appropriate alignment to the <ref refid="classvrv_1_1_grace_aligner" kindref="compound">GraceAligner</ref> </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_object_1a7f4019d68ac2206469e1ed0de22610a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustGraceXPos</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustGraceXPos</name>
        <reimplementedby refid="classvrv_1_1_alignment_1ab9c27a19a896037763c272763344e650">AdjustGraceXPos</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1ac7edd83b4e5ccb384a51ee21587409cf">AdjustGraceXPos</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1aad4e143d91b129999b2cf020925b40b1">AdjustGraceXPos</reimplementedby>
        <reimplementedby refid="classvrv_1_1_alignment_reference_1a1d1d8ec73574cab1273446e88f72d021">AdjustGraceXPos</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="759" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="759" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a935fdcf665ba277d9a7879a91b8b6f57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustGraceXPosEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustGraceXPosEnd</name>
        <reimplementedby refid="classvrv_1_1_alignment_1abce9fcb87cebbb71ef1549bc56d15198">AdjustGraceXPosEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="760" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="760" bodyend="760"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Adjust the horizontal position of harms by groups in order to avoid overlapping</header>
      <memberdef kind="function" id="classvrv_1_1_object_1a905f84521c7583c3f1cdaf806ceecdaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustHarmGrpsSpacing</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustHarmGrpsSpacing</name>
        <reimplementedby refid="classvrv_1_1_harm_1a916874198ae12c2140dfee6eea802958">AdjustHarmGrpsSpacing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a1fa7e0cd77f95fbbd8ae1d10b2b05c47">AdjustHarmGrpsSpacing</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="767" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="767" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a3feb79622f62f2a9282f3dd1201c3a0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustHarmGrpsSpacingEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustHarmGrpsSpacingEnd</name>
        <reimplementedby refid="classvrv_1_1_system_1ae5f180851992bc7707c42d719d126a40">AdjustHarmGrpsSpacingEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1ae9fc5caf5dd3c333254e72661775fd68">AdjustHarmGrpsSpacingEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="768" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="768" bodyend="768"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Adjust the x position of a right barline in order to make sure the is no text content</header>
      <description><para>overlflowing in the right margin </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_object_1af18e010dd5e84c10b4c10cfa0636db08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustXOverflow</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustXOverflow</name>
        <reimplementedby refid="classvrv_1_1_control_element_1aea71378f75a3c731e87e23494a2b1acc">AdjustXOverflow</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1acf17073cb929dc3eb114d8daac30c016">AdjustXOverflow</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a40bdd6c57d7af0c706eb91cd20144089">AdjustXOverflow</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="786" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="786" bodyend="786"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ae373581b24540ce6c308bd86ccca6e93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustXOverflowEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustXOverflowEnd</name>
        <reimplementedby refid="classvrv_1_1_system_1a40fab7159edc3c6a8f44a50122faaaec">AdjustXOverflowEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="787" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="787" bodyend="787"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1adacbf7e25c213d82303c739fec53828a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustXPos</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustXPos</name>
        <reimplementedby refid="classvrv_1_1_alignment_1a93b9611a56a39c342f74ab87ddb703fc">AdjustXPos</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1aad11c8d0fb029a782acddd5d043de3ff">AdjustXPos</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a0dbda8c45a7eec4faeeb76181fb13572">AdjustXPos</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Lay out the X positions of the staff content looking at the bounding boxes. </para>
        </briefdescription>
        <detaileddescription>
<para>The functor process by aligned-staff content, that is from a rediction in the <ref refid="classvrv_1_1_measure_aligner" kindref="compound">MeasureAligner</ref> and then staff by staff but taking into account cross-staff elements </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="796" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="796" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aa328ebfcfc62471e4fb0ed19523bcc1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustXPosEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustXPosEnd</name>
        <reimplementedby refid="classvrv_1_1_alignment_1aa69589c917373da6dd82120b819063c9">AdjustXPosEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="797" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="797" bodyend="797"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1af1cfac1b1885dea453542d8fccdc4461" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustSylSpacing</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustSylSpacing</name>
        <reimplementedby refid="classvrv_1_1_verse_1ae078d8962d502e9eff9db1185eb3bc25">AdjustSylSpacing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a4fbcd2b5cd79c2325cabe4beb4c36655">AdjustSylSpacing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a6790f6311e231fb5898d10c2b5499559">AdjustSylSpacing</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the spacing of the syl processing verse by verse. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="804" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="804" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ada977235c88371e047043642cb5ff3bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustSylSpacingEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustSylSpacingEnd</name>
        <reimplementedby refid="classvrv_1_1_system_1a214233f856e854a25d50e1699119bb2d">AdjustSylSpacingEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1ae14b75d9c98a3737a1993baea142a126">AdjustSylSpacingEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="805" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="805" bodyend="805"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functors for aligning the content vertically.</header>
      <memberdef kind="function" id="classvrv_1_1_object_1ab5f42b79ff1721982121a8a9c493a8c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ResetVerticalAlignment</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ResetVerticalAlignment</name>
        <reimplementedby refid="classvrv_1_1_text_element_1a0951e85f2d524582b37d2dfac38e3883">ResetVerticalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1a641ed5d645ade83bf5c970d3e5cc02c4">ResetVerticalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_artic_1a96699bdbf8423b7c51e2620fb3b1b83a">ResetVerticalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_page_1a61012e25938fbe0a4e6d29faf9f77ba3">ResetVerticalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a42ce9e0d7c04ddd4c0f3318c4a899485">ResetVerticalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1adbd0ace09326958de6ddde0b709ab727">ResetVerticalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_bracket_1ab0f87012efb4af420cf11c25fc12e744">ResetVerticalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a1911c3248161c492f5d1fdad9e429ae0">ResetVerticalAlignment</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_num_1a878c731c260402f7a0e2b0dcfcc9b653">ResetVerticalAlignment</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Reset the verticall alignment environment for various types for object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="823" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="823" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a318b62923fa869781ad0effd2ff40648" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AlignVertically</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AlignVertically</name>
        <reimplementedby refid="classvrv_1_1_verse_1ab0782d026d9a53cd1c20d31a356c7dca">AlignVertically</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fig_1ab57c1d4df37e134bf3d958ae02a6f8f0">AlignVertically</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rend_1afdd5efc85bd23787d48ed9ddd4aedb4d">AlignVertically</reimplementedby>
        <reimplementedby refid="classvrv_1_1_running_element_1aa9598aa7d2125993646e8d840f195385">AlignVertically</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a117c874984f47c04a116e5a369f73b52">AlignVertically</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a5ea92acba6b1e62923e9411ee702670c">AlignVertically</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1ae07050f3560322d506406ee7784c67d2">AlignVertically</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Align vertically the content of a page. </para>
        </briefdescription>
        <detaileddescription>
<para>For each <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref>, instanciate its <ref refid="classvrv_1_1_staff_alignment" kindref="compound">StaffAlignment</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="830" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="830" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a7456561dbdda3f5d7f47e520c3819cd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AlignVerticallyEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AlignVerticallyEnd</name>
        <reimplementedby refid="classvrv_1_1_page_1a878519b8c9d6f053b62ef525c38430c2">AlignVerticallyEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1aa6ccd840bf1679cf670b822f276e30d2">AlignVerticallyEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_alignment_1ad298e382b3f7a8037abcda735a656d13">AlignVerticallyEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="831" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="831" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a1579484058fb14c4c8cdf4ad58249db6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ApplyPPUFactor</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ApplyPPUFactor</name>
        <reimplementedby refid="classvrv_1_1_page_1aee8cf1f81854af6351ef2dd1cf63d4c7">ApplyPPUFactor</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a6805d86791ce23c50b0a3183c6153bc0">ApplyPPUFactor</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a4da5a3d4db00bc3b2d0fe5da397dc764">ApplyPPUFactor</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1af9a09348014736c76d46b2ba76ef7feb">ApplyPPUFactor</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1ae622172e1691680b9cd37266d359a8b3">ApplyPPUFactor</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Apply the Pixel Per Unit factor of the page to its elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="949" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="949" bodyend="949"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a6bdcb61d424d48a52281eec119128ceb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustXRelForTranscription</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustXRelForTranscription</name>
        <reimplementedby refid="classvrv_1_1_layer_element_1a65d2f6acbf90a39ce5e7b34b8713ddc1">AdjustXRelForTranscription</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the X/YRel positions taking into account the bounding boxes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="954" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="954" bodyend="954"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1aa102c1e31b16c63319763a5fc1c8351c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CalcLedgerLines</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CalcLedgerLines</name>
        <reimplementedby refid="classvrv_1_1_note_1a67c593777c501900d80826cfcf7ed535">CalcLedgerLines</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Calculate the ledger lines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="843" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="843" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a56b580832eec7871b18371835a61e136" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CalcLedgerLinesEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CalcLedgerLinesEnd</name>
        <reimplementedby refid="classvrv_1_1_staff_1afd87f281f2fdce027cae2ba1594a0372">CalcLedgerLinesEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="844" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="844" bodyend="844"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Adjust the position of cross-staff element after the adjustment of the staves.</header>
      <description><para>This is called by Chords and Tuplets with cross-staff content </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_object_1abeee6db6564ff37f1fd686033751d51f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustCrossStaffYPos</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustCrossStaffYPos</name>
        <reimplementedby refid="classvrv_1_1_chord_1a68f8accce00e216ba8cf8e74bc7b33f2">AdjustCrossStaffYPos</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="882" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="882" bodyend="882"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a91e929fac940d876aa172b0b6c160c26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustCrossStaffYPosEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustCrossStaffYPosEnd</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="883" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="883" bodyend="883"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Align the system by adjusting the m_drawingYRel position looking at the SystemAligner.</header>
      <memberdef kind="function" id="classvrv_1_1_object_1ab07299113bca877d821a79246e887bd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AlignSystems</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AlignSystems</name>
        <reimplementedby refid="classvrv_1_1_page_1a98ab67d3c831b71bddd4669833ef01c1">AlignSystems</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a1f768818060e11b8722854d86591389a">AlignSystems</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="935" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="935" bodyend="935"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a5e3a70072c31ed3ddf96fca1d40b4241" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AlignSystemsEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AlignSystemsEnd</name>
        <reimplementedby refid="classvrv_1_1_page_1acaf7f9335da4f1cb6df7d0b33a9bd372">AlignSystemsEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="936" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="936" bodyend="936"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functors setting the current scoreDef.</header>
      <memberdef kind="function" id="classvrv_1_1_object_1aa1c070a008b1db58a5036c27c2fb8307" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ReplaceDrawingValuesInStaffDef</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ReplaceDrawingValuesInStaffDef</name>
        <reimplementedby refid="classvrv_1_1_staff_def_1a3437c34ecc3b1de05c6ee1e9e1e3ede8">ReplaceDrawingValuesInStaffDef</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Replace the drawing values a staffDef. </para>
        </briefdescription>
        <detaileddescription>
<para>Set the current / drawing clef, key signature, etc. to the <ref refid="classvrv_1_1_staff_def" kindref="compound">StaffDef</ref> Called form <ref refid="classvrv_1_1_score_def_1a1225a27011925b11b208356a11bebdd3" kindref="member">ScoreDef::ReplaceDrawingValues</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="968" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="968" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a0b4cf8509ee8d9876d163b309e7da1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ScoreDefSetCurrent</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>ScoreDefSetCurrent</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Set the current scoreDef wherever need. </para>
        </briefdescription>
        <detaileddescription>
<para>This is include a scoreDef for each system. It also includes a scoreDef for each measure where a change occured before. A change can be either a scoreDef before or a clef, meterSig, etc. within the previous measure. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="976" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ac45facd18e6a4ac0b8ea7483e228aa0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ScoreDefOptimize</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ScoreDefOptimize</name>
        <reimplementedby refid="classvrv_1_1_system_1a88ab3987a0850373552e273005af3cbe">ScoreDefOptimize</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a27725920026a027bc04b700c361fe846">ScoreDefOptimize</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a24a6343ec40f95bfe3cfa1a646864f66">ScoreDefOptimize</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Optimize the scoreDef for each system. </para>
        </briefdescription>
        <detaileddescription>
<para>For automatic breaks, looks for staves with only mRests. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="983" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="983" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a286c8a894a3743271f63924da2f610e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ScoreDefOptimizeEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ScoreDefOptimizeEnd</name>
        <reimplementedby refid="classvrv_1_1_staff_grp_1a69b67d11eb2ddb5c61e9680e8da9eccb">ScoreDefOptimizeEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1ada8bf9cf502c9dcdc1451e72b629bfd9">ScoreDefOptimizeEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="984" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="984" bodyend="984"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functors for preparing drawing</header>
      <memberdef kind="function" id="classvrv_1_1_object_1a392d061080fee243ac4beb6f7e77434d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareDrawingCueSize</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareDrawingCueSize</name>
        <reimplementedby refid="classvrv_1_1_layer_element_1acd49ed27e7980afd591351044681401d">PrepareDrawingCueSize</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Set the drawing cue size of all <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1015" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1015" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a873d7c2f7805530e06ebd07885c399b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareCrossStaff</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareCrossStaff</name>
        <reimplementedby refid="classvrv_1_1_layer_element_1a4ffe0fd5c34b338d71c7b0dbe7cf250b">PrepareCrossStaff</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a0e2cb2c7caca730fcd1db213e3d92e20">PrepareCrossStaff</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>See cross-staff / layer pointers on <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1021" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1021" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a79600c0f5d0d0c68a2501f60ef077126" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareCrossStaffEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareCrossStaffEnd</name>
        <reimplementedby refid="classvrv_1_1_layer_element_1af036ca361bb026bae7290265e5da54d3">PrepareCrossStaffEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1022" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1022" bodyend="1022"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a506499857fa99ad918b7c236670acaf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareLinking</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>PrepareLinking</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Match linking element (e.g, @next). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1039" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1af10db2b195d5667b53c982409ecb9500" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PreparePlist</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>PreparePlist</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Match elements of @plist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1051" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a70fc6206cd0d6608724d91d03e64d767" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareTimePointing</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareTimePointing</name>
        <reimplementedby refid="classvrv_1_1_f_1a091bd82b82db7f9c0e1e20cb89db82a9">PrepareTimePointing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1a2c126764fd8116a54fa94700ef98494f">PrepareTimePointing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a3be9e2b87933dfacf3e4603d58053282">PrepareTimePointing</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Match start for TimePointingInterface elements (such as fermata or harm). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1058" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1058" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a5ea18a2c77fc31c9a0eee2a948660d5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareTimePointingEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareTimePointingEnd</name>
        <reimplementedby refid="classvrv_1_1_measure_1aab286a69c4afe89144619b3d886895be">PrepareTimePointingEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1059" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1059" bodyend="1059"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1ac052d42c0d724ca5f16192d7398193d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareTimeSpanning</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareTimeSpanning</name>
        <reimplementedby refid="classvrv_1_1_f_1abc21564f4ef433bf746d7f97abdf518e">PrepareTimeSpanning</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1ad0b4a076b299fc6e9ed32cc51aab1bf7">PrepareTimeSpanning</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a72dc4f513f06956e474ca0bfca73aeb2">PrepareTimeSpanning</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Match start and end for <ref refid="classvrv_1_1_time_spanning_interface" kindref="compound">TimeSpanningInterface</ref> elements (such as tie or slur). </para>
        </briefdescription>
        <detaileddescription>
<para>If fillList is set to false, only the remaining elements will be matched. This is used when processing a second time in the other direction </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1068" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1068" bodyend="1068"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a8049b8c19d504912d3eb535b8aba95e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareTimeSpanningEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareTimeSpanningEnd</name>
        <reimplementedby refid="classvrv_1_1_measure_1a37630e9ee44eb6aa4f615fb8ab92aa43">PrepareTimeSpanningEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1069" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1069" bodyend="1069"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a52209d31a076ecb09fa2081bddea0311" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareTimestamps</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareTimestamps</name>
        <reimplementedby refid="classvrv_1_1_f_1a6832f8a85e21917df8eedaf0a9e737d7">PrepareTimestamps</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1ada6846dddeb271c4eb74a753ed763ed7">PrepareTimestamps</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Match start and end for <ref refid="classvrv_1_1_time_spanning_interface" kindref="compound">TimeSpanningInterface</ref> elements with tstamp(2) attributes. </para>
        </briefdescription>
        <detaileddescription>
<para>It is performed only on <ref refid="classvrv_1_1_time_spanning_interface" kindref="compound">TimeSpanningInterface</ref> elements withouth @startid (or @endid). It adds to the start (and end) measure a TimeStampAttr to the Measure::m_tstamps. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1078" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1078" bodyend="1078"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a9cf511bc173faafb24b5a87149acb897" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareTimestampsEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareTimestampsEnd</name>
        <reimplementedby refid="classvrv_1_1_doc_1a225743740ee9d092d651d76a6fa4fd8f">PrepareTimestampsEnd</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a7a5b451606b8378d0e4cdbc4728996d4">PrepareTimestampsEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1079" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1079" bodyend="1079"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a1bda4d7b151d3ceb49e8dcf2a6b4474e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareLyrics</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareLyrics</name>
        <reimplementedby refid="classvrv_1_1_syl_1a1a6e9b3882e72eb56dfc0335dbf3f63d">PrepareLyrics</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1abe7983adf04930b56757c181df0d0b31">PrepareLyrics</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Set wordpos and connector ends The functor is processed by staff/layer/verse using an ArrayOfComparisons filter. </para>
        </briefdescription>
        <detaileddescription>
<para>At the end, the functor is processed by doc at the end of a document of closing opened syl. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1094" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1094" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a93eb8a93ec7ea199f54a59b8139e1a38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareLyricsEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareLyricsEnd</name>
        <reimplementedby refid="classvrv_1_1_doc_1aa8a7c978b60c76370c50a6fe78667c38">PrepareLyricsEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1095" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1095" bodyend="1095"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functor for grouping FloatingObject by drawingGrpId.</header>
      <description><para>Also chains the <ref refid="classvrv_1_1_dynam" kindref="compound">Dynam</ref> and <ref refid="classvrv_1_1_hairpin" kindref="compound">Hairpin</ref> </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_object_1af6ece837a732f054019b9230c59d8701" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareFloatingGrps</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareFloatingGrps</name>
        <reimplementedby refid="classvrv_1_1_dir_1ae0cd9ccfa5b0b12b8ded46fbc96eef6d">PrepareFloatingGrps</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pedal_1aeb36f6f66bcf6aa7ca0623de7352da1e">PrepareFloatingGrps</reimplementedby>
        <reimplementedby refid="classvrv_1_1_boundary_end_1aef934306b4b9e06e1c9ddb0f3270f7fb">PrepareFloatingGrps</reimplementedby>
        <reimplementedby refid="classvrv_1_1_harm_1add368fade92218f154a2d285976d310f">PrepareFloatingGrps</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ending_1a8c250cc55adc4807606ccb467ea650f5">PrepareFloatingGrps</reimplementedby>
        <reimplementedby refid="classvrv_1_1_hairpin_1afad23517c1e64cb20986be956ed4814e">PrepareFloatingGrps</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dynam_1a0739a1199a1933b88eb6af34aa352cd5">PrepareFloatingGrps</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1aa9f379a505dfb64bf467d99e83e57f5e">PrepareFloatingGrps</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1120" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1120" bodyend="1120"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ac9850da37f019eae12da8c42776e67b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareFloatingGrpsEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareFloatingGrpsEnd</name>
        <reimplementedby refid="classvrv_1_1_measure_1a564bd959985570be8099926e5c05eaab">PrepareFloatingGrpsEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1121" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1121" bodyend="1121"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a75266bd3b8cdd0db529367a5f9f16450" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::FillStaffCurrentTimeSpanning</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>FillStaffCurrentTimeSpanning</name>
        <reimplementedby refid="classvrv_1_1_f_1a52eb7173a2889ce5fca5907f13a5d8c7">FillStaffCurrentTimeSpanning</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syl_1a97f982b99f0becd3d207dcb7c621636a">FillStaffCurrentTimeSpanning</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1a26acefe41b29aa28c85eb244f624d2c1">FillStaffCurrentTimeSpanning</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a0315f172bfa34a1b25afa4a62e77db09">FillStaffCurrentTimeSpanning</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Go through all the <ref refid="classvrv_1_1_time_spanning_interface" kindref="compound">TimeSpanningInterface</ref> elements and set them a current to each staff where required. </para>
        </briefdescription>
        <detaileddescription>
<para>For <ref refid="classvrv_1_1_note" kindref="compound">Note</ref> with DrawingTieAttr, the functor is redirected to the tie object. At the end, remove the <ref refid="classvrv_1_1_time_spanning_interface" kindref="compound">TimeSpanningInterface</ref> element from the list when the last measure is reached. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1130" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1130" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aa35be27cc82fd95f7a353a705721778b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::FillStaffCurrentTimeSpanningEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>FillStaffCurrentTimeSpanningEnd</name>
        <reimplementedby refid="classvrv_1_1_measure_1a10521d415e6f5270a6f26c67cf5b3427">FillStaffCurrentTimeSpanningEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1131" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1131" bodyend="1131"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functors for justification</header>
      <memberdef kind="function" id="classvrv_1_1_object_1af644f5ed4600bb29ca03ded3f95b3467" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::JustifyX</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>JustifyX</name>
        <reimplementedby refid="classvrv_1_1_alignment_1a1b1e214293bf75dfacc6e6dbfc561913">JustifyX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a3f54a62351d3e54fcea861225a52bcb0">JustifyX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1ad0c8a3ad617244b1025761ae4b1042ca">JustifyX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_aligner_1afff0b187b72ed77654718681ab8f5c19">JustifyX</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Justify the X positions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1156" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1156" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1afc5a347cc3aa0a158036cdabc32157da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::JustifyY</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>JustifyY</name>
        <reimplementedby refid="classvrv_1_1_chord_1aa98457ec1747c9d715c9053262afb740">JustifyY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a9fda5426b8a20ffbef63b554159f16bc">JustifyY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_alignment_1ac23582a6a1d3a690fdba96d73e7f51dc">JustifyY</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Justify the Y positions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1161" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1161" bodyend="1161"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functors for calculating the layout of a document.</header>
      <memberdef kind="function" id="classvrv_1_1_object_1a15c5f866aed95ea5c5b051c5c7e47137" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CastOffSystems</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CastOffSystems</name>
        <reimplementedby refid="classvrv_1_1_sb_1ab25617535beabced2e5bb1bf874b9624">CastOffSystems</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_element_1a4035bbb129d06c9c4f3f60e42f72490c">CastOffSystems</reimplementedby>
        <reimplementedby refid="classvrv_1_1_boundary_end_1ae0b4120a6ca6470fca91d69b1c865932">CastOffSystems</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ending_1a90e151ed74273b4ae227d27b3b41c4d8">CastOffSystems</reimplementedby>
        <reimplementedby refid="classvrv_1_1_editorial_element_1a55eb6f409988796198cbcd14a8abafe9">CastOffSystems</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_def_1a0201cf78e1a7efbf950650f6105fa0cd">CastOffSystems</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a079569c6758abafd6d1136bbdd1d3b90">CastOffSystems</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Fill a page by adding systems with the appropriate length. </para>
        </briefdescription>
        <detaileddescription>
<para>At the end, add all the pending objects where reaching the end </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1175" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1175" bodyend="1175"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aee6f8abfde8d2fe26b067f97b6ba9f0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CastOffSystemsEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CastOffSystemsEnd</name>
        <reimplementedby refid="classvrv_1_1_system_1a5939e85d1c866caa9a6e0668b7197bc0">CastOffSystemsEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1176" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1176" bodyend="1176"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functors for generating MIDI output.</header>
      <memberdef kind="function" id="classvrv_1_1_object_1a1e1336770fd1b687628ef53b207d29f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CalcOnsetOffset</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CalcOnsetOffset</name>
        <reimplementedby refid="classvrv_1_1_staff_1a31043856d7ca807142154185f4f1eacd">CalcOnsetOffset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1aaac00d03690b56d5c5c61cc3765af867">CalcOnsetOffset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a4cb316760f79f10a53b29936e8439e22">CalcOnsetOffset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a980d96f6f3e15a9a2c9be8018e41201c">CalcOnsetOffset</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Prepare <ref refid="classvrv_1_1_note" kindref="compound">Note</ref> onsets. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1206" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1206" bodyend="1206"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ae8d2bbd8c168fd6904c864f297b3deeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CalcOnsetOffsetEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CalcOnsetOffsetEnd</name>
        <reimplementedby refid="classvrv_1_1_chord_1af50769e5d312c8618af00ff9ba4fdf8f">CalcOnsetOffsetEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1207" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1207" bodyend="1207"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a93b5fe054b2d26fe91ff50a5861fe08c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ResolveMIDITies</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ResolveMIDITies</name>
        <reimplementedby refid="classvrv_1_1_layer_element_1a75e5001ec1a419764ece5141bf00726c">ResolveMIDITies</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tie_1a64255b08d5587d1d97e383d4eea3928c">ResolveMIDITies</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust note timings based on ties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1214" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1214" bodyend="1214"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1a426081ffba31e4251a2c36ceeb2a43ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::GenerateMIDI</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>GenerateMIDI</name>
        <reimplementedby refid="classvrv_1_1_m_rpt_1a59ada8011f93e34e4c7e57ef188612a9">GenerateMIDI</reimplementedby>
        <reimplementedby refid="classvrv_1_1_b_trem_1a6e00d9fc4421a51dfb72f4aca40a6798">GenerateMIDI</reimplementedby>
        <reimplementedby refid="classvrv_1_1_halfm_rpt_1a80f34ae7921bca1727980dfa23740dd7">GenerateMIDI</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beat_rpt_1a342926628a5badf0e3c7e85d27be005a">GenerateMIDI</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_trem_1a5e2e8de23909abe5b0bb986bc21c3122">GenerateMIDI</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pedal_1a1f4162a8567c8f86e71c158cb1344aec">GenerateMIDI</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a3ce2c8573bacc56a9ef6d6eed96ad6fb">GenerateMIDI</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1a2bc1140c2a72c564fe0806238d7b8684">GenerateMIDI</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a7454a0a6922a5682093047666c63102f">GenerateMIDI</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1af0a102d6699c8d6949f3ee9a3390859b">GenerateMIDI</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Export the object to a MidiFile. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1221" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1221" bodyend="1221"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_object_1abe889073301d6e1dfe55e725b6532948" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::GenerateTimemap</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>GenerateTimemap</name>
        <reimplementedby refid="classvrv_1_1_note_1a8f88949434306c66a20ed4d28d6bea85">GenerateTimemap</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1acaa8acf77da1dec85348c36879318e97">GenerateTimemap</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a950524d9d7199aea4a2848c128893ac3">GenerateTimemap</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Export the object to a JSON timemap file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1228" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1228" bodyend="1228"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="classvrv_1_1_object_1aedb15995b4bfd32c033ed7788e09e6e1" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vrv::Object::m_uuid</definition>
        <argsstring></argsstring>
        <name>m_uuid</name>
        <briefdescription>
<para>Members for storing / generating uuids. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1290" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_object_1a1236cb26b1c35eff5e0036827a94ffa2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vrv::Object::m_classid</definition>
        <argsstring></argsstring>
        <name>m_classid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1291" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1291" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="classvrv_1_1_object_1a40306fa2a0b5290cb7f57429a9d0a689" prot="private" static="no" mutable="no">
        <type>ArrayOfObjects::iterator</type>
        <definition>ArrayOfObjects::iterator vrv::Object::m_iteratorEnd</definition>
        <argsstring></argsstring>
        <name>m_iteratorEnd</name>
        <briefdescription>
<para>Members used for caching iterator values. </para>
        </briefdescription>
        <detaileddescription>
<para>See Object::IterGetFirst, Object::IterGetNext and Object::IterIsNotEnd Values are set when GetFirst is called (which is mandatory) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1314" column="30" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_object_1a78cfd4b7fb317a899662ffa890500766" prot="private" static="no" mutable="no">
        <type>ArrayOfObjects::iterator</type>
        <definition>ArrayOfObjects::iterator vrv::Object::m_iteratorCurrent</definition>
        <argsstring></argsstring>
        <name>m_iteratorCurrent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1314" column="44" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_object_1a67b5776a98fe63578a3c17868e72de59" prot="private" static="no" mutable="no">
        <type>ClassId</type>
        <definition>ClassId vrv::Object::m_iteratorElementType</definition>
        <argsstring></argsstring>
        <name>m_iteratorElementType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1315" column="13" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1315" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classvrv_1_1_object_1aa63ca849b67044acc38f89a6030b03c2" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* vrv::Object::binaryComp) (Object *, Object *)</definition>
        <argsstring>)(Object *, Object *)</argsstring>
        <name>binaryComp</name>
        <briefdescription>
<para>Sort children by a function that takes two arguments and returns true if the first argument is less than the second. </para>
        </briefdescription>
        <detaileddescription>
<para>If the order of children changes, this returns true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="197" column="13" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classvrv_1_1_object_1a74ae0995caefb72a71445ba43fce0652" prot="public" static="no" mutable="no">
        <type>ArrayOfStrAttr</type>
        <definition>ArrayOfStrAttr vrv::Object::m_unsupported</definition>
        <argsstring></argsstring>
        <name>m_unsupported</name>
        <briefdescription>
<para>Keep an array of unsupported attributes as pairs. </para>
        </briefdescription>
        <detaileddescription>
<para>This can be used for writing back data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1270" column="20" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1270" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvrv_1_1_object_1a3f896d8fcccd24f2d443db940aa086e5" prot="private" static="no" mutable="no">
        <type>ArrayOfObjects</type>
        <definition>ArrayOfObjects vrv::Object::m_children</definition>
        <argsstring></argsstring>
        <name>m_children</name>
        <briefdescription>
<para>A vector of child objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Unless SetAsReferenceObject is set or with detached and relinquished, the children are own by it. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1279" column="20" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_object_1ae64179a13e2edae80b712cc726867ad4" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::m_parent</definition>
        <argsstring></argsstring>
        <name>m_parent</name>
        <briefdescription>
<para>A pointer to the parent object;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1284" column="12" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_object_1aaaab3c4888b5cf47362c260a0829aca4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::Object::m_isReferenceObject</definition>
        <argsstring></argsstring>
        <name>m_isReferenceObject</name>
        <briefdescription>
<para>A reference object do not own children. </para>
        </briefdescription>
        <detaileddescription>
<para>Destructor will not delete them. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1298" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_object_1a49f9e52d30df777fc8eb8cdbdfb7c7e9" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool vrv::Object::m_isModified</definition>
        <argsstring></argsstring>
        <name>m_isModified</name>
        <briefdescription>
<para>Indicates whether the object content is up-to-date or not. </para>
        </briefdescription>
        <detaileddescription>
<para>This is useful for object using sub-lists of objects when drawing. For example, <ref refid="classvrv_1_1_beam" kindref="compound">Beam</ref> has a list of children notes and this value indicates if the list needs to be updated or not. Is is mostly an optimization feature. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1306" column="18" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_object_1aa864e5826f181dfc783aa98517152e32" prot="private" static="no" mutable="no">
        <type>std::vector&lt; AttClassId &gt;</type>
        <definition>std::vector&lt;AttClassId&gt; vrv::Object::m_attClasses</definition>
        <argsstring></argsstring>
        <name>m_attClasses</name>
        <briefdescription>
<para>A vector for storing the list of AttClassId (MEI att classes) implemented. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1321" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_object_1a2d2e5ea3946a8673faa67d08cf0acee2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; InterfaceId &gt;</type>
        <definition>std::vector&lt;InterfaceId&gt; vrv::Object::m_interfaces</definition>
        <argsstring></argsstring>
        <name>m_interfaces</name>
        <briefdescription>
<para>A vector for storing the list of InterfaceId (group of MEI att classes) implemented. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1326" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_object_1a0426badbb9f00a508881a1862274715c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vrv::Object::m_comment</definition>
        <argsstring></argsstring>
        <name>m_comment</name>
        <briefdescription>
<para>String for storing a comments attached to the object when printing an MEI element. </para>
        </briefdescription>
        <detaileddescription>
<para>m_comment is to be printed immediately before the element m_closingComment is to be printed before the closing tag of the element </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1333" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_object_1a9a1effd7a4cf9a0017d665726d2a1fed" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vrv::Object::m_closingComment</definition>
        <argsstring></argsstring>
        <name>m_closingComment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1334" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_object_1af06d35e8d5895822a03500585aa7f31a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::Object::m_isAttribute</definition>
        <argsstring></argsstring>
        <name>m_isAttribute</name>
        <briefdescription>
<para>A flag indicating if the <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> represents an attribute in the original MEI. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, a <ref refid="classvrv_1_1_artic" kindref="compound">Artic</ref> child in <ref refid="classvrv_1_1_note" kindref="compound">Note</ref> for an original @artic </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1341" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_object_1a1514c6c11754e70d2f1718049ed319e5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::Object::m_isExpansion</definition>
        <argsstring></argsstring>
        <name>m_isExpansion</name>
        <briefdescription>
<para>A flag indicating if the <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> is a copy created by an expanded expansion element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1346" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1346" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classvrv_1_1_object_1a0858d6ed6414c5c4740ca65b773ca7bb" prot="private" static="yes" mutable="no">
        <type>thread_local unsigned long</type>
        <definition>thread_local unsigned long vrv::Object::s_objectCounter</definition>
        <argsstring></argsstring>
        <name>s_objectCounter</name>
        <briefdescription>
<para>A static counter for uuid generation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1355" column="39" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1355" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvrv_1_1_object_1a3b131f39c868a8a1e9b768bdc0eae811" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsFloatingObject</definition>
        <argsstring>() const</argsstring>
        <name>IsFloatingObject</name>
        <briefdescription>
<para>Wrapper for checking if an element is a floating object (system elements and control elements) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="80" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a5b1d528341ef806d382cdd1c27911021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsBoundaryElement</definition>
        <argsstring>()</argsstring>
        <name>IsBoundaryElement</name>
        <briefdescription>
<para>Wrapper for checking if an element has a boundary start interface and also if is set as a boundary element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="85" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a60120fd33bf1f7227c4dc2f6a9b265c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_duration_interface" kindref="compound">DurationInterface</ref> *</type>
        <definition>virtual DurationInterface* vrv::Object::GetDurationInterface</definition>
        <argsstring>()</argsstring>
        <name>GetDurationInterface</name>
        <reimplementedby refid="classvrv_1_1_tab_grp_1a9d5017d1c3211087f6017c9a8964d8db">GetDurationInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_space_1ad232f9f5d449c4cf556bb60a3051b595">GetDurationInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_nc_1af8c719d56e68346254e026d7e7eba4ac">GetDurationInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1a17e0bd6b6cb3c44f3b904958634aed83">GetDurationInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1aee501b600391fb19b2b224f087b1c2ea">GetDurationInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1a8f681874ac5c6e434eac390455ae68f4">GetDurationInterface</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="136" column="31" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a817a55b73b4356214fecf01d9da87d26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_linking_interface" kindref="compound">LinkingInterface</ref> *</type>
        <definition>virtual LinkingInterface* vrv::Object::GetLinkingInterface</definition>
        <argsstring>()</argsstring>
        <name>GetLinkingInterface</name>
        <reimplementedby refid="classvrv_1_1_control_element_1a5f10fa01845e54916a8cc68a29ee96a6">GetLinkingInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_meter_sig_grp_1aa70015242e7d24bdbe3e19c89c4dc1a5">GetLinkingInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a6d3ca2b7de44fc77676a0c340e1934ae">GetLinkingInterface</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="137" column="30" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a12c0e976636a155de9c58ead6cd743f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_facsimile_interface" kindref="compound">FacsimileInterface</ref> *</type>
        <definition>virtual FacsimileInterface* vrv::Object::GetFacsimileInterface</definition>
        <argsstring>()</argsstring>
        <name>GetFacsimileInterface</name>
        <reimplementedby refid="classvrv_1_1_staff_1a09d1b17015dc87defb658131d2897117">GetFacsimileInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a2d2ab0942a3ca7398e8966ca7934d8f6">GetFacsimileInterface</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="138" column="32" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aace2a15227fa3db1f20b5acbb7f2b4d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_pitch_interface" kindref="compound">PitchInterface</ref> *</type>
        <definition>virtual PitchInterface* vrv::Object::GetPitchInterface</definition>
        <argsstring>()</argsstring>
        <name>GetPitchInterface</name>
        <reimplementedby refid="classvrv_1_1_key_accid_1a6c0e1e3fc6b9066d80ece2f9e0adb66a">GetPitchInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_custos_1a078de34fc81fc732137fb4ffd13986e1">GetPitchInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_nc_1acb9603f8efde985da78b470e7fd579c5">GetPitchInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1a9fe7c87d2ca44ee1d7eddf14e39b7b4c">GetPitchInterface</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="139" column="28" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a32a7bc21b1323f31cb9d9e68686ce345" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_plist_interface" kindref="compound">PlistInterface</ref> *</type>
        <definition>virtual PlistInterface* vrv::Object::GetPlistInterface</definition>
        <argsstring>()</argsstring>
        <name>GetPlistInterface</name>
        <reimplementedby refid="classvrv_1_1_expansion_1adce9af1d87af5c365cd655e342169b63">GetPlistInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_arpeg_1a955f2163f0bd80878193db1abfbebea3">GetPlistInterface</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="140" column="28" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a68eb08599ac194e3dfc2c149e96db67a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_position_interface" kindref="compound">PositionInterface</ref> *</type>
        <definition>virtual PositionInterface* vrv::Object::GetPositionInterface</definition>
        <argsstring>()</argsstring>
        <name>GetPositionInterface</name>
        <reimplementedby refid="classvrv_1_1_dot_1a6b787d5cafe704e4c5596ede2b4f628b">GetPositionInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_accid_1a4f38c9700d655ba4ed231bb3bff0c4ec">GetPositionInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rest_1a7b6b093deffe67282b38a1cd93f1333a">GetPositionInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a5cea5baecadbf26150fedc2e5a06e358">GetPositionInterface</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="141" column="31" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a36ae3be40fa20c6255a6003e5d56133f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_score_def_interface" kindref="compound">ScoreDefInterface</ref> *</type>
        <definition>virtual ScoreDefInterface* vrv::Object::GetScoreDefInterface</definition>
        <argsstring>()</argsstring>
        <name>GetScoreDefInterface</name>
        <reimplementedby refid="classvrv_1_1_score_def_element_1ae98319158b6db4c30ab5ded9ab765a41">GetScoreDefInterface</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="142" column="31" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a8f790811faa78e214ba76d2a728fa8e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_stemmed_drawing_interface" kindref="compound">StemmedDrawingInterface</ref> *</type>
        <definition>virtual StemmedDrawingInterface* vrv::Object::GetStemmedDrawingInterface</definition>
        <argsstring>()</argsstring>
        <name>GetStemmedDrawingInterface</name>
        <reimplementedby refid="classvrv_1_1_chord_1aa2b9f4e5dae1424608caae31230481e3">GetStemmedDrawingInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1a71274e9a15a5002858728613005ef147">GetStemmedDrawingInterface</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="143" column="37" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ac2308546f247b47d6fdaaf0e90490fa5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_text_dir_interface" kindref="compound">TextDirInterface</ref> *</type>
        <definition>virtual TextDirInterface* vrv::Object::GetTextDirInterface</definition>
        <argsstring>()</argsstring>
        <name>GetTextDirInterface</name>
        <reimplementedby refid="classvrv_1_1_fing_1ac9db7c9566a8b2bf918d952cf48184a5">GetTextDirInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_anchored_text_1a6fa0bae1a45815dd59a4abf49f313a90">GetTextDirInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_reh_1a9732a6a77ff4a618637cca1f79b47e56">GetTextDirInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tempo_1aa553ffccdc329e97a1a5d70313e03476">GetTextDirInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_num_1a77c4d3ae34b53609262b1ee5901bbfb2">GetTextDirInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_harm_1aeb213f52b78957210645243166ae4953">GetTextDirInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dynam_1a94ac71e8b1aa3864c6e6b53432b10a45">GetTextDirInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dir_1af6190b09efcc865616870fefe1970ec1">GetTextDirInterface</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="144" column="30" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a738ca662cfaa09bb0122966cb29b43c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_time_point_interface" kindref="compound">TimePointInterface</ref> *</type>
        <definition>virtual TimePointInterface* vrv::Object::GetTimePointInterface</definition>
        <argsstring>()</argsstring>
        <name>GetTimePointInterface</name>
        <reimplementedby refid="classvrv_1_1_pitch_inflection_1a98a021b70fb6367a6f8af8de8107174e">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_1ab73341e44e8bc2cb2cbdbcc696dc7518">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_caesura_1a17467558c176effb1f3da299d8883318">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_breath_1a55cf6006bbbc7b4a95540ccedf57ec1a">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_slur_1ae637e2e59d5e7cb88fb96e6dce4c1baf">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fing_1a0882dd9295c0619155d2cd05bb7ce204">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_gliss_1a8888bb6e97f9777062a3ac2bddf8331d">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bracket_span_1a7c448b382f0ae6aa4cbdb199937c8595">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_hairpin_1afc6f933f7cbc3f4bca2a8f168a80fe3a">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_turn_1ace2f5bb2edc7b98f933cb91203a736fe">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tie_1a403d6c9b23874c148167fc487e6bc346">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_reh_1ace5e9654d44c474e1b6dfdcd860170d6">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_octave_1a9e64e14acd8aa03b12549e1766ad3f1e">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mordent_1a09beb830c03e44997c91236af94f3e16">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tempo_1a9a4204ff4a0177f32dbf5a557f1e1551">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pedal_1a88f63173566ab3c5e897f7edf30e3b6d">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_num_1adb3fd530961c8deddf7ce16f3ee0e502">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_harm_1aba26690ce0c5e4f340c6a422eb4e522e">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dynam_1a5305925f82202889890c32f4cb10b78d">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_trill_1adc01fc8d0e8d51f0b19ea136da3d5186">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fermata_1aa494aa59a8c97fb1385bb1f7ab322948">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dir_1a2364b7032c3e368720db2fdf71a4c618">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syl_1ace61c5236a8c0ad372dadca3f9d43630">GetTimePointInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_arpeg_1ac0555a056f010e504f5942e6ea8440fe">GetTimePointInterface</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="145" column="32" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a2ac1817c7492a51e6bb550f3002b32de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classvrv_1_1_time_spanning_interface" kindref="compound">TimeSpanningInterface</ref> *</type>
        <definition>virtual TimeSpanningInterface* vrv::Object::GetTimeSpanningInterface</definition>
        <argsstring>()</argsstring>
        <name>GetTimeSpanningInterface</name>
        <reimplementedby refid="classvrv_1_1_pitch_inflection_1aba4dd5050bd1a6e800b86b987684089c">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_1a13ebf084cd43c63c6f8b4dbbe3f3ac70">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_slur_1aa77005731f1ab5666433f1a2ee4b8c9f">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_gliss_1a334ee4ba68662836443fddb38f951de6">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bracket_span_1aa532f756747cc3276f46d4d53f1f14dc">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_hairpin_1a38f168274635794e840adbd7c5e12dd1">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tie_1aac977fbbda6f1ca6fe02604c4842b562">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_octave_1a2309ae8ac80729cb41c3384aec9ed015">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pedal_1a908b1acbe725b069b417cc4b1d643bab">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_harm_1ad51100a4bdea7686c250e5586ed7c3e0">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dynam_1a14ac04f421eb2b6dcdbc23cfa63772d4">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_trill_1ac40754b6e55da01c08a45c5c3b155bfe">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dir_1a4eb6f92b618b322be4f1d0340deb9005">GetTimeSpanningInterface</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syl_1af1b2a4a8269a722e8c149cf478029980">GetTimeSpanningInterface</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="146" column="35" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1acdbfa3602b2a05ed4c7ba41c77f92b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::Object::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <reimplementedby refid="classvrv_1_1_timestamp_attr_1a18518bfeb14edf87293657d25cb5ef30">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_svg_1aa53f518e90f2675c6d82e64026fb5159">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_phrase_1a4cf2c9d446af6d44f68cbf97a574ff9a">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_unclear_1aa5046e312c4ed0ffea9b8e7c28396a85">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_supplied_1a4afaec93c95f56e6c4b857d20f120184">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_sic_1a6778a5a0c6542a13850d37da59c925da">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_restore_1aa7f43e964e7e9b287e319b221e35ff53">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_reg_1a6e95e8401a483fab8101da795bc79136">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rdg_1ac3cad7c428be4125ce816a64bc0b082b">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_plica_1aa0d31cf6a7bec8c36e3cd7806e32e6cf">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_orig_1ad98c66ed00ddf29ab9e6daf78bf112ce">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lem_1a07ff80c4cacf4d2a707eb68f94d70ba1">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grace_grp_1a513e21b0cd7a353e6df39c76e4e55e8c">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_expan_1ab3244a775bf1372733f7a27f72c1549c">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_del_1a26bbb25b17b1332e0a4d7a9d37e4900b">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_damage_1a1e069800a85fe9d3a32f9e49fc5d307c">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_corr_1a135cb83134f4260398e0d06ec8d8b058">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_app_1ab257604e5582c2d2961a202ec83e09ba">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_add_1aa50868e956e276fe32abbdc44c86f7ab">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_abbr_1ac7d315b6903e06a22126c42a7141e82d">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pg_head2_1a3b1aeaa75f90ba77d3f1c3125dcdf386">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pg_head_1afc47d0c29393a65faf0435f83bbef342">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pg_foot2_1a5261ca0997b6115bbb0bf30c93fee7d1">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pg_foot_1adb065ab455bef63920bea7c2f392bcf6">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_choice_1ae7d8c67af83a44e01ac8d16512314ac6">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_text_element_1a8ac1eec61d858d477357d64e0b6f1338">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tab_grp_1aec861a67a88f0ea1f0f1333b36da40ba">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tab_dur_sym_1a35e719fd0e6335bc3f56892252db16cd">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_space_1aabc8c405d293b80fffc2f8ae5ef90ac8">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lv_1a0d1caa85c135d19a1e99cbee75e8c0c0">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dot_1a573879ea0cb5a2aa550fb99faf7f0a52">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_verse_1a274a32008d98d318d126e70dd812948b">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuning_1a29b79b7dfe19da7b6b46c5f558a35942">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_text_1a0f10976c135be6c5b73c2f6eecd8a4c3">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_subst_1ad62d527419deffbc48b2d5fd6556e1ca">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_space_1a480f2a5a33f8256c0c088b2e9846cd62">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ref_1aa4ac1349f6a13087f34081516dfefb11">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_proport_1abe080e5bc139c410e93ffb36e244a01c">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pitch_inflection_1a52f617af981b4bbfa15bf096ff83162e">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lb_1ad2cd52c48685373de02fd93c1bb24a7a">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_label_abbr_1ac29dcd911aff05bca4e15facd49a7235">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_label_1a5538e9b2ac0780674ca00937db718501">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fig_1a883e1b825c5f0c33daedd4f52ee0f80e">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fb_1aa0de47ab5710dd1074ea1b6c89240c88">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_course_1a097d015db1764fb9f652417a119c6b97">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_b_trem_1a8c7cd9ab4c8b07e187f72e4036e8c517">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_sb_1a551be1cf0301942047b57576508f1134">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pb_1a7826c28da54c675a9e504fc6b223c5e8">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_num_1a50094d076b7177e5c4bef5309b692ef7">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mdiv_1a5c5020b2bc33951b1ef83c106b6a035f">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_1a2b01a80ac456149dc4d17a7951ce39ec">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_custos_1a32c4ea04b40a718aabdd6199f8ed4423">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_caesura_1aba782d2233f6c6f36d1812a428eda2f8">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_breath_1a46922dc1a012ad4e22d387d367076412">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_annot_1accca6c7f265148eeac13e8dabc061a84">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_element_1ae1759cdc3693ad2f404cb0cf5cfe327a">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_slur_1ad489e51d4fbd05c4a7b77171979c980d">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_1a21257b2604924e3a3b77019d81dc55f1">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pages_1a3f334f0863e2e38f5bd2144bc86df19a">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_multi_rpt_1a6c228ab031ba4a04bdf3352f926ad3f1">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_trem_1abfe7d983b09535ba5c074878c70eeed9">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fing_1ad52aa2d93592433e12041c97a37f2c53">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_boundary_end_1a810d3a039a5ae97a502f032af3c72b4f">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beat_rpt_1a1b56d52250e9f0a38bd1a058bdad6cdd">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_anchored_text_1a994b8d19db67c14b85ef4543ec9add53">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syllable_1a0ca49af721550295a990e95a9e3ca2ba">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rpt2_1ad5bba7b0c95f8f1ca9354d4fc1933bb7">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rpt_1a12037c7e9b9c29330ea3c62dc7de7227">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_meter_sig_1ae6ca88828841d660bdc908132b230e6b">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_halfm_rpt_1ac440c47f80b8f3153c2f6d0992b88b9f">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_expansion_1a5fc93a2c358ef3458ae4eb29e49fefda">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dots_1aadf21dd52ae09cf3ce97f26bda9ad9c7">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_control_element_1a4798e8da3af4e07b1b4d95d7df515416">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_artic_1a111b2fe726683343b7edc43ec7730919">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_section_1afcb0ff64a71c4041ad1f64a27af9b2cd">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bar_line_1af5652cfb6a6ceac082aff24efe345e82">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_running_element_1ac5e8c435b16512ea3daf18f29b31b004">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ligature_1abbbb11eae3514269e4c6ad03b0c52416">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_key_accid_1afdd546a5f24a549742468f6b49733409">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1a598b5443645caf3544285c9b99bfcdbb">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ending_1a8c2c8987af55410b2bc755cdeb73e1e0">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_zone_1af7c913653c3a15fda766c961ba08368f">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_1a464671f725eb5ac5f54affe1c94470de">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_surface_1ab92f73e0e48d946fc3385409b3ea1949">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_instr_def_1a3d2006a820bcf3a73c8ab42ec8bff1cd">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_gliss_1afdb61005647e94fb0ea0a45b2fd5941a">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bracket_span_1ab95bb9424735e1fc9e5fb91670f4d6c4">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rend_1a1d459bbc6fbe07e56de1e35deb64d9df">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_page_1ac858909c078a4a4c7c3879aad83e45d7">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grp_sym_1a14756a349793abd3d996c1b28f61c14c">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_reh_1aa803b111fcc7fc461cb2f888c802f011">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_multi_rest_1ab51f1dff1cdb12d373ed4d42e9b3ab89">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_hairpin_1acf6ebba6694c86e28faee5c18844bb4d">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_facsimile_1a5b271a6c524ae5a42d7dc62f1b93c3d9">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_arpeg_1a153c3a0c91d7a8a3ef171d10b70ea933">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_turn_1a9cfcaad7fe3a7f4c3492a2b98449f03b">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tie_1aa2dcc8217fbcb23238941592457f994d">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tempo_1a3a16d51f3ccb7a68b4c8a6efe01c6718">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_octave_1a229ec2da837f68c480ab55161beb1cb8">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rest_1a22ac6f8f4a0c036f50a3468b331b9700">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mordent_1afd27521658395ee7405f3cbbb84ca0d5">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_num_1aa68a27dc8215d8698cbb608b43f9ac47">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_harm_1a2edec90bcf59cb039a4341cfd1060050">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dynam_1a796634a0f186838ef311761060835d05">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_clef_1a1ba48f8992f81f64e0bfd68116b893d0">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pedal_1a578f94f90ceb7176bb547357536e9bf9">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dir_1ae432921bad571110afc4dc541f657984">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_trill_1a95b44674c5d5ce648a04c3af5e92e9b9">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_grp_1a347677b55f3e9749ac925d19b3e55b9b">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mensur_1a2a4d0f5eb80e43876dfa8ab61edc8ad3">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fermata_1aa3caa25c49531e06f69bb0828a629258">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_accid_1a77f0229943afc71686a9a5ad48866ab6">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a0204eb6fce138e7edbaef95ae3c707b1">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_def_1a9ad4b6e622c59afd708421d253ffd21d">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_meter_sig_grp_1ab5eeeb9706064d45e1a25d438bf7dce1">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_key_sig_1a5d508aa999353ab19a1bb00e5aa4a356">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syl_1ad8421ee7c48a1a2810a40cd268613400">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1aaf72035d9ae4ae883541f3c4e7eab9ad">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1a3041f812957ab5e179668e832b86746e">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_editorial_element_1abd7e8631e1dd27b74faf50fa278d0a11">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_nc_1a39e89152fddafecfe0327be2f7a2535b">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_def_element_1a1e121d95814e70d0123bb7be2e69f634">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_aligner_1a9adc9a3111069c7abdb3854eaa57533d">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a9b09bf380303f8e8be757229a4ba6e45">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1a37534ad2cdc258e0b41df2f96ec115df">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a82fee57a4557d152cdecc5c97c9d1d6b">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1afda62d2037293f7448dc26ca2e445b68">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_doc_1a351c9c94a26f5cf02356d873287f469c">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_neume_1a866f47751f685f9d0c2084f16359935b">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1a3c55cee5bba501897681e52b8dd71203">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_alignment_1a0287d653bbc3253df179dfcaaab2f343">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_flag_1ab80b6e5b40e3e33230e0c3671cfc1af5">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_def_1ab7953cd561585a76c37a35410e7c2df8">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beam_1af9658a57fe7b26e291db0937e03aaeae">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_bracket_1a32bbc81d5af44c5f16166658c2449484">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_num_1a6bee26c00bf3985757d6b26722173020">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_alignment_reference_1aadc2d7cae6429e02e91766794b4667a2">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_stem_1a653600afa3c68bf5002e445a6b24f9a7">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_horizontal_aligner_1a39e353a84078dd5357877f2a06aeb2a0">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_aligner_1a5a533dcbe8644f3c92975643210a0341">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grace_aligner_1a84a6f582c3cc58b12bcfdd14686f0a84">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_timestamp_aligner_1a985b1e565b90e6bcbab6e88b09fd50c0">Reset</reimplementedby>
        <briefdescription>
<para>Reset the object, that is 1) removing all childs and 2) resetting all attributes. </para>
        </briefdescription>
        <detaileddescription>
<para>The method is virtual, so <emphasis>always</emphasis> call the parent in the method overriding it. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="152" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a8be4ecf7908559751e728551718a8bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::Object::Object</definition>
        <argsstring>(const Object &amp;object)</argsstring>
        <name>Object</name>
        <param>
          <type>const <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Copy constructor that also copy the children. </para>
        </briefdescription>
        <detaileddescription>
<para>The children are copied using the <ref refid="classvrv_1_1_object_1ab2d363effa62d58a65f8aba1330c1379" kindref="member">Object::Clone</ref> virtual method that needs to be overridden in the child class - otherwise, it will crash. Because this will create a problem if we don&apos;t check this (the parents will one the same child...) UUID: the uuid is copied, is needs to be reset later if this is not wished </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="162" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a6ad51ecc97faf69c8fa8432a780aed44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> &amp;</type>
        <definition>Object&amp; vrv::Object::operator=</definition>
        <argsstring>(const Object &amp;object)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Copy assignement - see copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="167" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aa846e8099e10d6cf427e8255e4a62dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::MoveChildrenFrom</definition>
        <argsstring>(Object *sourceParent, int idx=-1, bool allowTypeChange=false)</argsstring>
        <name>MoveChildrenFrom</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>sourceParent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>allowTypeChange</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Move all the children of the object passed as parameter to this one. </para>
        </briefdescription>
        <detaileddescription>
<para>Objects must be of the same type. After this operation, the object passed as parameter has no child anymore. If idx is provided, move the children to the idx position in the object children. Only moving to the same type is allow unless allowTypeChange is true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="176" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aba32b01b87b8f31455e68c77a3d8ee40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::ReplaceChild</definition>
        <argsstring>(Object *currentChild, Object *replacingChild)</argsstring>
        <name>ReplaceChild</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>currentChild</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>replacingChild</declname>
        </param>
        <briefdescription>
<para>Replace the currentChild with the replacingChild. </para>
        </briefdescription>
        <detaileddescription>
<para>The currentChild is not deleted by the methods. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="182" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aa8caf0942b1ff1c02f6f8e879397ca21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::SortChildren</definition>
        <argsstring>(binaryComp comp)</argsstring>
        <name>SortChildren</name>
        <param>
          <type><ref refid="classvrv_1_1_object_1aa63ca849b67044acc38f89a6030b03c2" kindref="member">binaryComp</ref></type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="198" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ac7063ea155c08f4e39e5c59b735f1d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::MoveItselfTo</definition>
        <argsstring>(Object *targetParent)</argsstring>
        <name>MoveItselfTo</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>targetParent</declname>
        </param>
        <briefdescription>
<para>Move an object to another parent. </para>
        </briefdescription>
        <detaileddescription>
<para>The object is relinquished from its current parent - see <ref refid="classvrv_1_1_object_1a48ea7a78dfbdf0195235b56679924c76" kindref="member">Object::Relinquish</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="204" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ab2d363effa62d58a65f8aba1330c1379" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>virtual Object* vrv::Object::Clone</definition>
        <argsstring>() const</argsstring>
        <name>Clone</name>
        <reimplementedby refid="classvrv_1_1_phrase_1acf61f7ae0a6358dd0abee565af236ab9">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_unclear_1a52c5e7da09a23c35995bb9a6d5a0ebbd">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_supplied_1a5f2ef5c5b0307393908e377175354b56">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_sic_1aa7c66c839f343ceeff1c937f54a36dd9">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_restore_1ae3d85957dc3b437a406e61729c5faf52">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_reg_1a9fae4c4a2c0e3662ad184476f15a4802">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rdg_1ab288482effb65929e6ea8a53b870a054">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_plica_1ada80d5bda202d078f837923474480479">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_orig_1af00cb438fa26b81e5f4dbacbe0d0afb6">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lem_1a8eb8e9175ee1df1154d672a1a0224190">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grace_grp_1af37a39530c01c3c5f7a2b9fcd66b696f">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_expan_1a681af653bee0ab1728c48e6054b86fb9">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_del_1a87af93dceaaadd228c9e7741f97cd9a4">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_damage_1aa147922619d6a5b36f24dc6f71652fb9">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_corr_1a2a01f86822aacb087e8bb7c2dd505e12">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_choice_1a31fe804059b1cd80f6ec34f34101ae37">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_app_1ab342926bfe019d33b4fa73f044308364">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_add_1ad21027e925d2aaee11ac2bc6fd4bb5cc">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_abbr_1a2ee39ba18ad78caead86c74ea521668b">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_space_1a20fe56d8916bf3ef25543c214b4ab587">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lv_1aa4a100dc9163da75915fe9f841d992a5">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dot_1aa510618130fc68c247e44cd5ac9be1b1">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_verse_1a4d1595e500c8141c72e001dd43e7e1a7">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuning_1a5e8e6b6ac8de0b443533f55942559600">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_text_1aa7e711c41836402f619f5fba0e45402d">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_subst_1a10ae14cea7284306a07f353ca648be0c">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_space_1a7d54a6eeca3904f4a31790227e5a2346">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ref_1aeff0a5ff7af8e49470e2d219b67623cb">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_proport_1a5655e9edaba74e66bbba0da1a8b9e3c5">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pitch_inflection_1aeca09c2567b4c883253f417c83fef8fc">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_lb_1af4312caadbf5dbd104dd587d2f698675">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_label_abbr_1af14a6b9f5f1ab6a04b72892ef8092bb8">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_label_1a5115492c0f37bd5545a0eeab1b45c1ae">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fig_1a3c8263a6c7c2ac8239f71c4be526192a">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fb_1a567b375cee8004f13b44e02bbeb7a00d">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_course_1a02cc7676b68251fdd8dd834723d17851">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_b_trem_1ae923c2ba91fa1b81e5600d46069b670b">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_sb_1aaa03bd2fa2230cd5149bf6cf4db0f93e">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pb_1aa361938fda6df1b4e420572a8a6e84a3">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_num_1a87cc850aba6d5d2bc6197f2c836de3dd">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mdiv_1a4216f61ba0ec8d8557fd0f30eb1fe885">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_1af787c8f1949a30a260edf99a951d0afd">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_custos_1a3d64c576ca5154a564de6249f6352a9c">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_caesura_1a6153b578c3e9fb85b772b225eab2af09">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_breath_1aec9d2fce65a21babf5964fca4320363e">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_slur_1a952ccc695fffeea63dfa92910bc4177f">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_multi_rpt_1a251bb8897e0fcabd0a66e28b393be151">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_trem_1a1181f23b4370b0bd175e606847a130df">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fing_1afe9d9aa9e651b67bce5b9bc1b7a9b6ac">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beat_rpt_1a120a95fbe727ae63e9dbcc37156b3f8e">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_anchored_text_1a20764ae832f7cef4148c8a419d878646">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syllable_1a9734872327c3f62ce612bdf535d12482">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rpt2_1a4c3bed760b9a8155c0c15e20cd9fbfc1">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rpt_1a430c30f62f2d32245a21feb7a0c07fb7">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_meter_sig_1af217e14ce28f19664ff88680a37b951a">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_halfm_rpt_1a12296319004a0d194e448ee278b8b76a">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_expansion_1a7f9a78c88f753fdb8f7d22a7d0729734">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_artic_1a6f90e122532ccc8ef0bf869813f38068">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_section_1ab0994156af03552f53f00e72f50d8306">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bar_line_1ad582205a58e0df8139cf87eb8ea9ae03">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ligature_1ad3b3189bad93536136d5e56733a368c4">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_key_accid_1ac56abc1e8683f45ee933bfd1d74aaa61">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ending_1a35fc37132c747f6d3521c68bc19d096c">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_zone_1a48ce69c151bbd947402d95b926ecbbaf">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_1a019a73b63c401903c8ace051236f9a5a">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_surface_1a008583483ea73ef24dc20474f7b6c844">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_instr_def_1a4cf3d341c49401f86c89bcf40f5e9467">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_gliss_1a49246a1084ee3648a7f7327d29d30847">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bracket_span_1ac5684a09e86d4b66c5666442f80a1889">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rend_1a1ed2be34a1f4bd3086b67e6c91f30b09">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grp_sym_1a81b289aff852ac04b2b8cc2e6e096c97">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_reh_1a75b9750167f36861077cc51d7aa5c850">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_multi_rest_1afe027428df1507780d133d2923891d3d">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_hairpin_1ad30a7a760082e1ca519a0200a56701ff">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_facsimile_1a78467e34a6f7b121a4cb5c8a17e8c42e">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_arpeg_1ab774c9c55fb6b881f101d15b077276ee">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_turn_1a074ddf138a10033b10b64bef73dc78f9">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tie_1adfda19f910a88a11cbac436f19e28afb">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tempo_1a6e765445e376927719d418b21b894441">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_octave_1a3de09a21e3f229b61293a501dd77e46f">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rest_1ad7be714d2e1382633bd2be562e127bc0">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mordent_1aeb98ac0a39d298666b4930cfd707743b">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_num_1a8ef88d638e956cdda46843781b03ef80">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_harm_1a25542ab84d0d139b6382ed79e55a5276">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dynam_1aa9d45f07e2bc85cc4fb99a334fcf2472">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_clef_1af4329c1d512e1df1af7c73ae86ca1c0f">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pedal_1acf5b9771b7ac04a7e349b82bc89ad62d">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dir_1acc4cb5664e448ae9b42c2a119d845bff">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_trill_1a31ec7d7d353791efd8f78d9d74029067">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_grp_1aa514749edfce8e38079e8be763c036b7">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mensur_1a879317e2ac917dbd0829549dc10a4f1e">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fermata_1ad24103e5d24e542fa2cedf31d10b1c9e">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_accid_1a93a65794738d7589660518832e5d22bc">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_def_1a1fe5138bb30bad885747a679f7257dcd">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_meter_sig_grp_1a9cc37d091ca6fe2a27ea1eac34cb06b9">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_key_sig_1a4603d05b2d150b965de3593467370aa3">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syl_1a5e69117c04b4db86874de66f0c5d8270">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a49f589ba0558922e1a2e0e9c22b172ac">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_running_element_1a04ba4d5006ebb734329b199bed29dfba">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1ad6961cffad65b4347639a7bf93d5e409">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_nc_1ad2f34a9457fcd8d4c4c46b142fba0bf2">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a7993997c921837a240f3e04f4fd7d7f6">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1a07f9f5a3d2722d9ae7cca4b40722232e">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1ab0185d809c59283051da9becf63e5d66">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_neume_1a89401dde8ddf84d0931a4eeddcc96428">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1a4fac2b9a8fb11c0b9b5764535eafd777">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_bar_line_attr_1a8ef81ad6367eae8c94f72512be252f7d">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_def_1abe767118fd157ab3c3760a8f17beb52f">Clone</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beam_1aefb179940f5416e7be8297c6869643e5">Clone</reimplementedby>
        <briefdescription>
<para>Method call for copying child classes. </para>
        </briefdescription>
        <detaileddescription>
<para>The method has to be overridden. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="210" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a4bf38f527d70161c92062a2347b7c11e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool vrv::Object::CopyChildren</definition>
        <argsstring>() const</argsstring>
        <name>CopyChildren</name>
        <reimplementedby refid="classvrv_1_1_system_aligner_1a3bc76fd12fc590ddc2f40681cc17965a">CopyChildren</reimplementedby>
        <reimplementedby refid="classvrv_1_1_horizontal_aligner_1aa5ef753812c2c22af63fa22c1c734934">CopyChildren</reimplementedby>
        <briefdescription>
<para>Indicate whereas children have to be copied in copy / assignment constructors. </para>
        </briefdescription>
        <detaileddescription>
<para>This is true by default but can be overriden (e.g., for <ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref>, <ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref>) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="216" column="18" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a2a1c4d0ed1a15f33637b03670c9aa98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::Object::CloneReset</definition>
        <argsstring>()</argsstring>
        <name>CloneReset</name>
        <reimplementedby refid="classvrv_1_1_staff_1a1441f71be201fc4caee78f13f23b9162">CloneReset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1a0dbcfa79324fe3b15905d8ba97f90131">CloneReset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a50f15216aaa5825c6ccbcc17852d0bb0">CloneReset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a1ba728231a9d00e4ef654fde6bdf6088">CloneReset</reimplementedby>
        <briefdescription>
<para>Reset pointers after a copy and assignment constructor call. </para>
        </briefdescription>
        <detaileddescription>
<para>This methods has to be called expicitly when overriden because it is not called from the constructors. Do not forget to call base-class equivalent whenever applicable (e.g, with more than one hierarchy level). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="223" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a7bcc3062c90aa6f927f8c51f180b585b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; vrv::Object::GetUuid</definition>
        <argsstring>() const</argsstring>
        <name>GetUuid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="225" column="23" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a190abc310da990f676c931d272bbb434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::SetUuid</definition>
        <argsstring>(std::string uuid)</argsstring>
        <name>SetUuid</name>
        <param>
          <type>std::string</type>
          <declname>uuid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="226" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1af4f98c391b356cf51597e4777bf31185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::SwapUuid</definition>
        <argsstring>(Object *other)</argsstring>
        <name>SwapUuid</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="227" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aadeb99ea27241a64bf942e469a04445e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::ResetUuid</definition>
        <argsstring>()</argsstring>
        <name>ResetUuid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="228" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aa8a0722010e05e1e2cb04d90a9535cc4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Object::GetComment</definition>
        <argsstring>() const</argsstring>
        <name>GetComment</name>
        <briefdescription>
<para>Methods for setting / getting comments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="233" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a3b47aa3445a48e681db41607cedcd4b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::SetComment</definition>
        <argsstring>(std::string comment)</argsstring>
        <name>SetComment</name>
        <param>
          <type>std::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="234" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="234" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a5d95d6ed5231e12c17d17868d337b218" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::HasComment</definition>
        <argsstring>()</argsstring>
        <name>HasComment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="235" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a65066ae5b40a4dc3aab9bf76abc57d36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Object::GetClosingComment</definition>
        <argsstring>() const</argsstring>
        <name>GetClosingComment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="236" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1af0db1dd88b7d2f6c9068934312ce86c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::SetClosingComment</definition>
        <argsstring>(std::string endComment)</argsstring>
        <name>SetClosingComment</name>
        <param>
          <type>std::string</type>
          <declname>endComment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="237" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ad52c48d64fdb14dbc0a4dcf40aa87295" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::HasClosingComment</definition>
        <argsstring>()</argsstring>
        <name>HasClosingComment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="238" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="238" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a6bd78730c9d5f0302710213488708adb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::GetChild</definition>
        <argsstring>(int idx) const</argsstring>
        <name>GetChild</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Child access (generic) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="254" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a889936363e6eb4b03172c86219c275fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::GetChild</definition>
        <argsstring>(int idx, const ClassId classId)</argsstring>
        <name>GetChild</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const ClassId</type>
          <declname>classId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="255" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a35273845b5714fd8e78ce82e18a60f3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const ArrayOfObjects *</type>
        <definition>virtual const ArrayOfObjects* vrv::Object::GetChildren</definition>
        <argsstring>(bool docChildren=true) const</argsstring>
        <name>GetChildren</name>
        <reimplementedby refid="classvrv_1_1_staff_1aa4a035cb69c6135b5ca21531aa578382">GetChildren</reimplementedby>
        <param>
          <type>bool</type>
          <declname>docChildren</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a const pointer to the children. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="260" column="34" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="260" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a36a7f108361c29dae9b92078359ca105" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ArrayOfObjects *</type>
        <definition>ArrayOfObjects* vrv::Object::GetChildrenForModification</definition>
        <argsstring>()</argsstring>
        <name>GetChildrenForModification</name>
        <briefdescription>
<para>Return a pointer to the children that allows modification. </para>
        </briefdescription>
        <detaileddescription>
<para>This method should be all only in AddChild overrides methods </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="266" column="20" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aeb7e152a62704071901972bbfa06062c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Object::GetAttributes</definition>
        <argsstring>(ArrayOfStrAttr *attributes) const</argsstring>
        <name>GetAttributes</name>
        <param>
          <type>ArrayOfStrAttr *</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
<para>Fill an array of pairs with all attributes and their values. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the number of attributes found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="272" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a07880f4ad709e37ca6b5483110905383" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::HasAttribute</definition>
        <argsstring>(std::string attribute, std::string value) const</argsstring>
        <name>HasAttribute</name>
        <param>
          <type>std::string</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Check if an <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> has an attribute with the specified value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="277" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a16cba5d613527c43c79025065f82be93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::GetLast</definition>
        <argsstring>() const</argsstring>
        <name>GetLast</name>
        <briefdescription>
<para>Return the last child of the object (if any, NULL otherwise) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="303" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a96ca869c3849c0f108655ad5d900a2c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::GetParent</definition>
        <argsstring>() const</argsstring>
        <name>GetParent</name>
        <briefdescription>
<para>Get the parent of the <ref refid="classvrv_1_1_object" kindref="compound">Object</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="308" column="12" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="308" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a9f30aa6a8185b260943003a08980d376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::SetParent</definition>
        <argsstring>(Object *parent)</argsstring>
        <name>SetParent</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Set the parent of the <ref refid="classvrv_1_1_object" kindref="compound">Object</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The current parent is expected to be NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="314" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a5d22ebda01e0b254c13d558f5ffdb098" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::ResetParent</definition>
        <argsstring>()</argsstring>
        <name>ResetParent</name>
        <briefdescription>
<para>Reset the parent of the <ref refid="classvrv_1_1_object" kindref="compound">Object</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The current parent is not expected to be NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="320" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="320" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a06ffb8f7f251aeea862abe1f76b5599d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool vrv::Object::IsSupportedChild</definition>
        <argsstring>(Object *object)</argsstring>
        <name>IsSupportedChild</name>
        <reimplementedby refid="classvrv_1_1_grace_grp_1af946a640bdcdfb4566087e081856d434">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuning_1aeeca4fc5e9b04f51e5b2b13318a18ed6">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_course_1aa5fc5c82b71784c7ad3f883ea03ab5b8">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_app_1a3fafd4a8815ac21942ea4497900dc125">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_verse_1af9058fe62a08ee9f21386980ad5ceeba">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_surface_1a38bb199abab97cea1cb2561ff2f78613">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_num_1a29615114b7ac7f659e2ebd8f53219935">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_label_abbr_1a166a5be1b0807048467c10c793b0ecb4">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_label_1a908638f25ead153029bef06d4b0d27d1">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fb_1a06248a241f24c2557aeb222d908e752a">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_choice_1a9858d8c40d863a944a4d6c4bcade08bb">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_b_trem_1a4dc0461f664a02b7205dd777f209213b">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tab_dur_sym_1af430b2d6ba6fc6d94ba50fed5b898f49">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_mdiv_1a8a4814991a589decdb5af38d6d07f556">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_annot_1a76ea8b351c8d1bdf06eb4b83221ed5f2">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_subst_1ab67dc54048f21a4fe3c213f949e60261">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_1a892eb5ad48f37d495b4fe93930ebbd55">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pages_1a528a2d9aa5a7f1c49b1b9ad09a0491f1">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_trem_1af57ffc64972d26b9156795ecc77c0001">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syllable_1a7e8020b5fa554bd0d3a305bbded89227">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_section_1a707be137fa9c0cd02c44e0290005445a">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_facsimile_1a5bd29155581104e4788affef991f5931">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ending_1a97d92533b4c47e3fbc6e403c286a854b">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tab_grp_1a691512c1f016a420dc55e8783772ddb5">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_1aec8524e5296e4c15954974723cb2de87">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_page_1ad3d4ee3e1674476c6c110fc4a80aad4d">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ligature_1ad2e92ac5e2a2ec5a59d4cf534fe4fa28">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fig_1ac7e3acaeb3ca1ca7964b5b520e47bb9f">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_1a6abe3beb0b7bee6e7eea79c9f8394a68">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_anchored_text_1aee388004d3d13c844e24890dade1dd78">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_running_element_1adee4e660a51a94e8f035be0c28671586">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_fing_1abfebf279297f45a42ae17244ae9ffa8e">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_custos_1aef459ff92dd4fc94100ed4a9ac33c3ee">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_grp_1a8a7dc49e7551930bbe65cab7ff11b66f">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1aa016a2db50574ea0eb45c29549dcab93">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_def_1a9f052c6b2b835e1c41f4626c216b2016">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_doc_1a9e5c6d769a8edcf00d38c9acb47b15cd">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rend_1a112f5141174e5ae8a4dd70482dcd7a43">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_editorial_element_1a6e47611a92fd87e59eec40244afa3e6b">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_reh_1a968a2f231ef4ba2e3305e843e7ac4f28">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tempo_1a6efb6c725df26fc6490d745f81a43ad1">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_num_1aec54a45c12b4d0d7e3aec32924486a92">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_key_sig_1af06c536cacef5aef925b0aad6bb53ff3">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_harm_1a17ceaaefab60b5f294218cf6f536776b">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dynam_1ae25aacf2064a19f0f69ec24af9c6b75d">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a182fd69b5fd2e047956e0d84c547f278">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dir_1a589e5bcbb3cc78958fad4cbf39a0b0b9">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_meter_sig_grp_1a76795fa19747bc920b1946156b8bc3d6">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1add3ece7e57070b36092d85f7b58e7b3a">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syl_1a2e7542e7dc6a79d46043912c281c7b21">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1aa00165c434ab1ab55478b8cd7c28fc90">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1acd736f43548230fda02b92158a176ca8">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1a1530256eb902efeb334099f034d6eded">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_neume_1a54078846b5d8bf453cdfc9aa0c022ebf">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_alignment_1adc9b6237ee57e0c98b3b93d8d1edb44e">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1af8978d10060897439846033392758ef6">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_def_1a37bb21b40890e0788b64879b95d337bb">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beam_1af420328a2d142e36095a11b6cea16f3f">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_alignment_reference_1a5042b74cd1f6292ef8d74dda10c5bfbf">IsSupportedChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_stem_1a1e28dcfc4fc249320e82f62a8ab24af0">IsSupportedChild</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Base method for checking if a child can be added. </para>
        </briefdescription>
        <detaileddescription>
<para>The method has to be overridden. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="326" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a2ab113f1faf62ee0332687ff981c0948" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::Object::AddChild</definition>
        <argsstring>(Object *object)</argsstring>
        <name>AddChild</name>
        <reimplementedby refid="classvrv_1_1_lb_1a13b749f23ee6431215e651b3be92bd0f">AddChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_1a091eac9913c75a427dca15b7db03b84b">AddChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a375cbeaa0d5bab366974d70bf7aba00c">AddChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1ae003b9ef10ebe3e78f523c72f436ca55">AddChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1a777cd96f58898204059f5f08dbf2a736">AddChild</reimplementedby>
        <reimplementedby refid="classvrv_1_1_alignment_reference_1a47c762054e8476db159a24df3ef1991b">AddChild</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Base method for adding children. </para>
        </briefdescription>
        <detaileddescription>
<para>The method can be overridden. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="332" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a2bfb8ee92dbd7e805de0aae51d07d534" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Object::GetIdx</definition>
        <argsstring>() const</argsstring>
        <name>GetIdx</name>
        <briefdescription>
<para>Return the index position of the object in its parent (-1 if not found) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="337" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aa187432e90c784c80ac11e25ba92161c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Object::GetChildIndex</definition>
        <argsstring>(const Object *child)</argsstring>
        <name>GetChildIndex</name>
        <param>
          <type>const <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Look for the <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> in the children and return its position (-1 if not found) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="359" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a318be52d7897d2a16d699374a4b702ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Object::GetDescendantIndex</definition>
        <argsstring>(const Object *child, const ClassId classId, int deepth)</argsstring>
        <name>GetDescendantIndex</name>
        <param>
          <type>const <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type>const ClassId</type>
          <declname>classId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deepth</declname>
        </param>
        <briefdescription>
<para>Look for all Objects of a class and return its position (-1 if not found) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="364" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ac14929dac6e5b5e699d16ba7fc258d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::InsertChild</definition>
        <argsstring>(Object *element, int idx)</argsstring>
        <name>InsertChild</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Insert an element at the idx position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="369" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ac846569894fc8b08083e5a8526ba5834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::DetachChild</definition>
        <argsstring>(int idx)</argsstring>
        <name>DetachChild</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Detach the child at the idx position (NULL if not found) The parent pointer is set to NULL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="375" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a32d88cd25d424a5c15b014efe736ee20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::HasDescendant</definition>
        <argsstring>(Object *child, int deepness=UNLIMITED_DEPTH) const</argsstring>
        <name>HasDescendant</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deepness</declname>
          <defval>UNLIMITED_DEPTH</defval>
        </param>
        <briefdescription>
<para>Return true if the object has the child <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> as descendant (reference of direct). </para>
        </briefdescription>
        <detaileddescription>
<para>Processes in depth-first. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="381" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1af7647ce739175bbba03428b59969727c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::FindDescendantByUuid</definition>
        <argsstring>(std::string uuid, int deepness=UNLIMITED_DEPTH, bool direction=FORWARD)</argsstring>
        <name>FindDescendantByUuid</name>
        <param>
          <type>std::string</type>
          <declname>uuid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deepness</declname>
          <defval>UNLIMITED_DEPTH</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>direction</declname>
          <defval>FORWARD</defval>
        </param>
        <briefdescription>
<para>Look for a descendant with the specified uuid (returns NULL if not found) This method is a wrapper for the <ref refid="classvrv_1_1_object_1a3a8ac50b3a292c42c0b24d7c7a6cd3b1" kindref="member">Object::FindByUuid</ref> functor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="387" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a2c65f3e559db5add1055a45e60d44536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::FindDescendantByType</definition>
        <argsstring>(ClassId classId, int deepness=UNLIMITED_DEPTH, bool direction=FORWARD)</argsstring>
        <name>FindDescendantByType</name>
        <param>
          <type>ClassId</type>
          <declname>classId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deepness</declname>
          <defval>UNLIMITED_DEPTH</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>direction</declname>
          <defval>FORWARD</defval>
        </param>
        <briefdescription>
<para>Look for a descendant with the specified type (returns NULL if not found) This method is a wrapper for the Object::FindByType functor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="393" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a75077fdacaa928e36fe20b90eaca7a7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::FindDescendantByComparison</definition>
        <argsstring>(Comparison *comparison, int deepness=UNLIMITED_DEPTH, bool direction=FORWARD)</argsstring>
        <name>FindDescendantByComparison</name>
        <param>
          <type><ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> *</type>
          <declname>comparison</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deepness</declname>
          <defval>UNLIMITED_DEPTH</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>direction</declname>
          <defval>FORWARD</defval>
        </param>
        <briefdescription>
<para>Return the first element matching the <ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> functor Deepness allow to limit the depth search (EditorialElements are not count) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="399" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a95acdd9f46d55cf067b567ef11526b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::FindDescendantExtremeByComparison</definition>
        <argsstring>(Comparison *comparison, int deepness=UNLIMITED_DEPTH, bool direction=FORWARD)</argsstring>
        <name>FindDescendantExtremeByComparison</name>
        <param>
          <type><ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> *</type>
          <declname>comparison</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deepness</declname>
          <defval>UNLIMITED_DEPTH</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>direction</declname>
          <defval>FORWARD</defval>
        </param>
        <briefdescription>
<para>Return the element matching the extreme value with an <ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> functor Deepness allow to limit the depth search (EditorialElements are not count) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="406" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1af3c1aa93cec13297b8535cccc01ff719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::FindAllDescendantByComparison</definition>
        <argsstring>(ListOfObjects *objects, Comparison *comparison, int deepness=UNLIMITED_DEPTH, bool direction=FORWARD, bool clear=true)</argsstring>
        <name>FindAllDescendantByComparison</name>
        <param>
          <type>ListOfObjects *</type>
          <declname>objects</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> *</type>
          <declname>comparison</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deepness</declname>
          <defval>UNLIMITED_DEPTH</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>direction</declname>
          <defval>FORWARD</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return all the objects matching the <ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> functor Deepness allow to limit the depth search (EditorialElements are not count) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="413" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a7ba7ae169a7258a16d3ff24cd2620420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::FindAllDescendantBetween</definition>
        <argsstring>(ListOfObjects *objects, Comparison *comparison, Object *start, Object *end, bool clear=true)</argsstring>
        <name>FindAllDescendantBetween</name>
        <param>
          <type>ListOfObjects *</type>
          <declname>objects</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> *</type>
          <declname>comparison</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return all the objects matching the <ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> functor and being between start and end in the tree. </para>
        </briefdescription>
        <detaileddescription>
<para>The start and end objects are included in the result set. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="420" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a48ea7a78dfbdf0195235b56679924c76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::Relinquish</definition>
        <argsstring>(int idx)</argsstring>
        <name>Relinquish</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Give up ownership of the child at the idx position (NULL if not found) This is a method to be used only in the very particular case where the child object cannot be detached straight away. </para>
        </briefdescription>
        <detaileddescription>
<para>It is typically the case when this has to be done within an iterator. The parent of the object will be set to NULL but the object will not be removed. If the parent is not destroyed after that, you should expect problems unless <ref refid="classvrv_1_1_object_1a667b4432b8f9d9e92bfd34fe5c885099" kindref="member">Object::ClearRelinquishedChildren</ref> is called In other words: do not use unless you are absolutely sure what you are doing </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="432" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a667b4432b8f9d9e92bfd34fe5c885099" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::ClearRelinquishedChildren</definition>
        <argsstring>()</argsstring>
        <name>ClearRelinquishedChildren</name>
        <briefdescription>
<para>Removes all the children that were previously relinquished. </para>
        </briefdescription>
        <detaileddescription>
<para>This has to be used when children are moved but then the parent is not deleted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="438" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a0af864d1b64a70d4ec8b62a520114bde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::ClearChildren</definition>
        <argsstring>()</argsstring>
        <name>ClearChildren</name>
        <briefdescription>
<para>Clear the children vector and delete all the objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="443" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aa24fba8bae1f0876567f564f98020966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::DeleteChild</definition>
        <argsstring>(Object *child)</argsstring>
        <name>DeleteChild</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Remove and delete the child. </para>
        </briefdescription>
        <detaileddescription>
<para>Return false if the child could not be found. In that case it will not be deleted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="449" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a214d80f16352cda785bdbf1ba3423b68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::GetFirstAncestor</definition>
        <argsstring>(const ClassId classId, int maxSteps=-1) const</argsstring>
        <name>GetFirstAncestor</name>
        <param>
          <type>const ClassId</type>
          <declname>classId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxSteps</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Return the first ancestor of the specified type. </para>
        </briefdescription>
        <detaileddescription>
<para>The maxSteps parameter limits the search to a certain number of level if not -1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="455" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ad12836ab87743384cac90b940a454585" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::GetFirstAncestorInRange</definition>
        <argsstring>(const ClassId classIdMin, const ClassId classIdMax, int maxDepth=-1) const</argsstring>
        <name>GetFirstAncestorInRange</name>
        <param>
          <type>const ClassId</type>
          <declname>classIdMin</declname>
        </param>
        <param>
          <type>const ClassId</type>
          <declname>classIdMax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxDepth</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="457" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a908d56fef5a5dd9b9808555ab4ea4daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::GetLastAncestorNot</definition>
        <argsstring>(const ClassId classId, int maxSteps=-1)</argsstring>
        <name>GetLastAncestorNot</name>
        <param>
          <type>const ClassId</type>
          <declname>classId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxSteps</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Return the last ancestor that is NOT of the specified type. </para>
        </briefdescription>
        <detaileddescription>
<para>The maxSteps parameter limits the search to a certain number of level if not -1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="463" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a10fe05578ee7f669ca3591c5a2a3a428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::GetFirstChildNot</definition>
        <argsstring>(const ClassId classId)</argsstring>
        <name>GetFirstChildNot</name>
        <param>
          <type>const ClassId</type>
          <declname>classId</declname>
        </param>
        <briefdescription>
<para>Return the first child that is NOT of the specified type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="468" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a3749f83f36adfc8748438ca17b1e5f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::FillFlatList</definition>
        <argsstring>(ArrayOfObjects *list)</argsstring>
        <name>FillFlatList</name>
        <param>
          <type>ArrayOfObjects *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Fill the list of all the children <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used for navigating in a <ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> (See Layer::GetPrevious and Layer::GetNext). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="474" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a4eec6780edc930e49d9874c1036735a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::IsModified</definition>
        <argsstring>() const</argsstring>
        <name>IsModified</name>
        <briefdescription>
<para>Check if the content was modified or not. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="479" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="479" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a985728e489aed60707c313327bf7c464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::Modify</definition>
        <argsstring>(bool modified=true)</argsstring>
        <name>Modify</name>
        <param>
          <type>bool</type>
          <declname>modified</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Mark the object and its parent (if any) as modified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="484" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ac9dd387934b8960b47b96a0c05bb1b84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::HasEditorialContent</definition>
        <argsstring>()</argsstring>
        <name>HasEditorialContent</name>
        <briefdescription>
<para>Return true if the object contains any editorial content. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="505" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ae0d0368a66d1c4b590b311a1a94eb717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Object::HasNonEditorialContent</definition>
        <argsstring>()</argsstring>
        <name>HasNonEditorialContent</name>
        <briefdescription>
<para>Return true if the object contains anything that is not editorial content. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="510" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a74097c855ed070b02fd06810207d0ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::Save</definition>
        <argsstring>(Output *output)</argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classvrv_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Saves the object (and its children) using the specified output stream. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates functors that will parse the tree. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="516" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ac97807a0dabfdf0d1d483f7f3e9427f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Compare</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::Object::StableSort</definition>
        <argsstring>(Compare comp)</argsstring>
        <name>StableSort</name>
        <param>
          <type>Compare</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
<para>Sort the child elements using std::stable_sort. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="521" column="22" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="521" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a6865cdd4b0cc47a90e1cdf4a2aaa2c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::Object::ReorderByXPos</definition>
        <argsstring>()</argsstring>
        <name>ReorderByXPos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="526" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a5783461a8f5bee6d95391b86e0004ff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::FindNextChild</definition>
        <argsstring>(Comparison *comp, Object *start)</argsstring>
        <name>FindNextChild</name>
        <param>
          <type><ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> *</type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="528" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a4750585ae6b8737aba3408fcc863dfeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
        <definition>Object* vrv::Object::FindPreviousChild</definition>
        <argsstring>(Comparison *comp, Object *start)</argsstring>
        <name>FindPreviousChild</name>
        <param>
          <type><ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> *</type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="530" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ae803b6e421519fabaa32413719cf6ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::Object::Process</definition>
        <argsstring>(Functor *functor, FunctorParams *functorParams, Functor *endFunctor=NULL, ArrayOfComparisons *filters=NULL, int deepness=UNLIMITED_DEPTH, bool direction=FORWARD, bool skipFirst=false)</argsstring>
        <name>Process</name>
        <param>
          <type><ref refid="classvrv_1_1_functor" kindref="compound">Functor</ref> *</type>
          <declname>functor</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_functor" kindref="compound">Functor</ref> *</type>
          <declname>endFunctor</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>ArrayOfComparisons *</type>
          <declname>filters</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>deepness</declname>
          <defval>UNLIMITED_DEPTH</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>direction</declname>
          <defval>FORWARD</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>skipFirst</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Main method that processes functors. </para>
        </briefdescription>
        <detaileddescription>
<para>For each object, it will call the functor. Depending on the code returned by the functor, it will also process it for all children. The ArrayOfComparisons filter parameter makes is possible to process only objects of a type that matches the attribute value given in the <ref refid="classvrv_1_1_comparison" kindref="compound">Comparison</ref> object. This is the generic way for parsing the tree, e.g., for extracting one single staff or layer. Deepness specifies how many child levels should be processed. UNLIMITED_DEPTH means no limit (<ref refid="classvrv_1_1_editorial_element" kindref="compound">EditorialElement</ref> objects do not count). skipFirst does not call the functor or endFunctor on the first (calling) level </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="542" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a1af968d5140f79fd056aa5a46d7cad11" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AddLayerElementToFlatList</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>AddLayerElementToFlatList</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para><ref refid="classvrv_1_1_add" kindref="compound">Add</ref> each LayerElements and its children to a flat list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="563" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a3a00186419e955ee211440092e955f14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::SetAlignmentXPos</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>SetAlignmentXPos</name>
        <reimplementedby refid="classvrv_1_1_alignment_1a28b3741b1abb5e4eb9bba5d6172c5210">SetAlignmentXPos</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1aa57855e655555f27ad52e1d750cf76b5">SetAlignmentXPos</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_aligner_1ab727c9924c45bddee7ddf241d91299c6">SetAlignmentXPos</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Set the position of the <ref refid="classvrv_1_1_alignment" kindref="compound">Alignment</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Looks at the time difference from the previous <ref refid="classvrv_1_1_alignment" kindref="compound">Alignment</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="706" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="706" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a1009aeee85e83052adcbcd8dc2af050d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::SetAlignmentPitchPos</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>SetAlignmentPitchPos</name>
        <reimplementedby refid="classvrv_1_1_layer_element_1ab0a34f0dd2758cbbda5dcbf1e800a419">SetAlignmentPitchPos</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Set the drawing position (m_drawingX and m_drawingY) values for objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="711" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="711" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a0b93f8b6e02c8ba98a03db67fe5d5d10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CalcStem</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CalcStem</name>
        <reimplementedby refid="classvrv_1_1_staff_1abd990f1b0d2dd8abe5864c53be8f3cfa">CalcStem</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_trem_1a3499df150aa0a0c368444f06e2de2cce">CalcStem</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beam_1a68e2b6e3f79c497e1f9ff3fa6f76af48">CalcStem</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1a820f37e84596cb5f2810faf19075de14">CalcStem</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1aa0505ca9921082084eb7aa32e38cda96">CalcStem</reimplementedby>
        <reimplementedby refid="classvrv_1_1_stem_1aae4fef92faa5f1d61b1ecab89d3f8e92">CalcStem</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Set the drawing stem positions, including for beams. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="716" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="716" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a277607c9a525f437a721e8c526963d44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CalcChordNoteHeads</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CalcChordNoteHeads</name>
        <reimplementedby refid="classvrv_1_1_note_1ad056c8566782223ddbd1f6da4281771d">CalcChordNoteHeads</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Set the note head flipped positions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="721" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="721" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a30538b76016036369786f42be54482c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CalcDots</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CalcDots</name>
        <reimplementedby refid="classvrv_1_1_rest_1af19bb53fe6642d20ddb9a66e92f7b163">CalcDots</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1a4260532e67b95993b013a4d5b63949e2">CalcDots</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1ad31936d93922bf87540780a67d8569eb">CalcDots</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Set the drawing dot positions, including for chords. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="726" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="726" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a6c19b533f485fd10e5649bb5c441c884" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustClefChanges</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustClefChanges</name>
        <reimplementedby refid="classvrv_1_1_clef_1a7f2986dfd0e5ffdb594a2fd64905decd">AdjustClefChanges</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1aea5bec3d597b866fa64555b1b13596c4">AdjustClefChanges</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the spacing for clef changes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="738" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="738" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1acd47b579ea43282b32c8c585308d9857" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustLayers</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustLayers</name>
        <reimplementedby refid="classvrv_1_1_layer_element_1a1a9024f996b4f7295a9b124f809bab63">AdjustLayers</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a65d7eae484556ea7e423a516f975060d">AdjustLayers</reimplementedby>
        <reimplementedby refid="classvrv_1_1_alignment_reference_1a235100af5d136b53d38e75262a8ab901">AdjustLayers</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the position the outside articulations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="751" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="751" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a08855458e45646f3831f2edf7c8a77e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustAccidX</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustAccidX</name>
        <reimplementedby refid="classvrv_1_1_alignment_1adaeb0f47b3019237561fcc908d565830">AdjustAccidX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1afcfbbf264d2da532a19945d12f9dbe3d">AdjustAccidX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_alignment_reference_1a43fd712d1b7c968155d8869ee7116645">AdjustAccidX</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the x position of accidental. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="774" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="774" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ae04a8386531bae9a2facddc7d293a0ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustTempo</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustTempo</name>
        <reimplementedby refid="classvrv_1_1_tempo_1a8be9eb6215b7ec24648f4717d207db50">AdjustTempo</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a520af2c0ee806aeaeaa6b8a4a298a45f">AdjustTempo</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the x position of accidental. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="779" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="779" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a59773566ac731e75fa34166fa1d78aa3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustTupletsX</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustTupletsX</name>
        <reimplementedby refid="classvrv_1_1_tuplet_1aa3753def5cf71c42591725ca226f9e0e">AdjustTupletsX</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Calculate the x position of tuplet brackets and num. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="811" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="811" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a5bd96aae8a25cedd2c63ce09b92388a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CalcLigatureNotePos</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CalcLigatureNotePos</name>
        <reimplementedby refid="classvrv_1_1_ligature_1a80a0704bc2d5b29e711a89d1a495d71e">CalcLigatureNotePos</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Set the note position for each note in ligature. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="837" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="837" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aeafa32ecabeffb9ce6d3e8372ab7160b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CalcArtic</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CalcArtic</name>
        <reimplementedby refid="classvrv_1_1_artic_1ad23ab8262ea35f49b518c661c5078789">CalcArtic</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1ae165f82cb3826294a8734a546281af38">CalcArtic</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1ab21851eeb8b179874169119643b76b3c">CalcArtic</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Calculate the position of the outside articulations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="850" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="850" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a0d2579fea0aea8b317a490c1654be52b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustBeams</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustBeams</name>
        <reimplementedby refid="classvrv_1_1_beam_1a816f031fe4b45d076e9e5dfd741987c8">AdjustBeams</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1ae490412b5c145adfba5f99fc5c914021">AdjustBeams</reimplementedby>
        <reimplementedby refid="classvrv_1_1_clef_1a285e82c9651d90fbaacee005d3597ecd">AdjustBeams</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a36cc03ad4c26a93e1ad7fdd0f08955a2">AdjustBeams</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Calculate the vertical position adjustment for the beam if it overlaps with layer elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="855" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="855" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a1373589b997e00e6dc811eb3139194e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustBeamsEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustBeamsEnd</name>
        <reimplementedby refid="classvrv_1_1_beam_1a3e6a16748d090469091ec0f8262ee2e0">AdjustBeamsEnd</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Apply position adjustment that has been calculated previously. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="860" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="860" bodyend="860"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1adfa29f3f97c5463c0c0de270636c5e4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustSlurs</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustSlurs</name>
        <reimplementedby refid="classvrv_1_1_system_1a2b91f6a228c43de1ae8526a156162b12">AdjustSlurs</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_alignment_1a7f008edcf766dbc33c4081bffc7e609b">AdjustSlurs</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the postion position of slurs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="865" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="865" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a6b400f3d27479c0a45865bb97d21a879" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustArtic</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustArtic</name>
        <reimplementedby refid="classvrv_1_1_artic_1adcdab0ebbd513631481f06ace96baaa7">AdjustArtic</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1ab545c0a8757da7e284e1785e987be550">AdjustArtic</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1a22bad1957f235e5db6a7baad7650a335">AdjustArtic</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the position the articulations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="870" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="870" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a0f7c68b80209c30180004962bff3c8f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustArticWithSlurs</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustArticWithSlurs</name>
        <reimplementedby refid="classvrv_1_1_artic_1a4add68432cd13d9cfaaffc578271259a">AdjustArticWithSlurs</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the position the outside articulations with slur. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="875" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="875" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a3b246662209d352732e6f3018efe7748" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustFloatingPositioners</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustFloatingPositioners</name>
        <reimplementedby refid="classvrv_1_1_system_1a4758434c52084eec15a430d66ee6407e">AdjustFloatingPositioners</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_alignment_1a322832b50441cfe3be04c02de1d30477">AdjustFloatingPositioners</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the position of all floating positionners, staff by staff. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="889" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="889" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1aa7b805cd96f7dc63c47c640d01dd9954" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustFloatingPositionersBetween</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustFloatingPositionersBetween</name>
        <reimplementedby refid="classvrv_1_1_system_1a1f7703bae08bf1a0924e585dc8bcc784">AdjustFloatingPositionersBetween</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_alignment_1aa021121f8fcc17cd7725a670bcc1a203">AdjustFloatingPositionersBetween</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the position of floating positionners placed between staves. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="894" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="894" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a757300b40f61c72a86c66fe9df7f8b5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustFloatingPositionerGrps</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustFloatingPositionerGrps</name>
        <reimplementedby refid="classvrv_1_1_staff_alignment_1a94ea6a0dcdaedbec12fddfd2044504d3">AdjustFloatingPositionerGrps</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the position of all floating positionner that are grouped, staff by staff. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="899" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="899" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a56434ce48d536c537485260bec7ef6c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustStaffOverlap</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustStaffOverlap</name>
        <reimplementedby refid="classvrv_1_1_system_1a2e4bfa30abf92e487736005db9d270f4">AdjustStaffOverlap</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_alignment_1a95156ca42aab6edbf29245a8d5c31c66">AdjustStaffOverlap</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Calculate the overlap of the staff aligmnents by looking at the overflow bounding boxes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="904" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="904" bodyend="904"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a80bc658bb972eabcee2d0aa536386cfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustTupletsY</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustTupletsY</name>
        <reimplementedby refid="classvrv_1_1_tuplet_1a7ae244f9388019b00ce7c833772633dd">AdjustTupletsY</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Calculate the y position of tuplet brackets and num. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="909" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="909" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a8aaf88c9ab32e7cc92a6d39189031caa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustTupletNumOverlap</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustTupletNumOverlap</name>
        <reimplementedby refid="classvrv_1_1_layer_element_1a8e2c3ef538ae03d3c9eaa904404cfefa">AdjustTupletNumOverlap</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Calculate the y relative position of tupletNum based on overlaps with other elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="914" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="914" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a8cc3cee5e4463a0434de0fa42ab1d1cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::AdjustYPos</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustYPos</name>
        <reimplementedby refid="classvrv_1_1_system_1a0911ad3482e6ff43e57e832a0a0a3c4c">AdjustYPos</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_alignment_1a5cad2210131847da6d015f741c3c5602">AdjustYPos</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Adjust the position of the <ref refid="classvrv_1_1_staff_alignment" kindref="compound">StaffAlignment</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="919" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="919" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a45993175bb6a94cbbd0a5b69251e25eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::SetOverflowBBoxes</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>SetOverflowBBoxes</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Fill the arrays of bounding boxes (above and below) for each staff alignment for which the box overflows. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="924" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a70161897776b5acbaf0dddaa1ddd9def" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::SetOverflowBBoxesEnd</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>SetOverflowBBoxesEnd</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Fill the arrays of bounding boxes (above and below) for each staff alignment for which the box overflows. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="929" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a3a95154b135f78a323dafdfec2a76e2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::SetCautionaryScoreDef</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>SetCautionaryScoreDef</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Set the cautionnary scoreDef wherever need. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="990" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ac063e5c113b30453f094ba3589a534ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ScoreDefUnsetCurrent</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ScoreDefUnsetCurrent</name>
        <reimplementedby refid="classvrv_1_1_system_1abc52dda11e11be4ed8d94cfe361b5737">ScoreDefUnsetCurrent</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a0132cbac7c1bf93021984016f4635083">ScoreDefUnsetCurrent</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1a4266ba9b2be435c0fdac988c46662dcf">ScoreDefUnsetCurrent</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a3941e690b33d294be51c0623b273f1cf">ScoreDefUnsetCurrent</reimplementedby>
        <reimplementedby refid="classvrv_1_1_alignment_reference_1ab7d3be8f28951c215eea7e31e73b5309">ScoreDefUnsetCurrent</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Unset the initial scoreDef of each system and measure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="995" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="995" bodyend="995"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a28b81f899cf3c244799da6f49ae3dd34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::SetStaffDefRedrawFlags</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>SetStaffDefRedrawFlags</name>
        <reimplementedby refid="classvrv_1_1_staff_def_1a56d69722b3495b9e5e91d38229753caa">SetStaffDefRedrawFlags</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Set drawing flags for the <ref refid="classvrv_1_1_staff_def" kindref="compound">StaffDef</ref> for indicating whether clefs, keysigs, etc. </para>
        </briefdescription>
        <detaileddescription>
<para>need to be redrawn. This typically occurs when a new <ref refid="classvrv_1_1_system" kindref="compound">System</ref> or a new <ref refid="classvrv_1_1_score_def" kindref="compound">ScoreDef</ref> is encountered. See implementation and <ref refid="classvrv_1_1_object_1a28b81f899cf3c244799da6f49ae3dd34" kindref="member">Object::SetStaffDefRedrawFlags</ref> for the parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1003" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1003" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a71c3367e232d634a71c2d346dfd9f3d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ScoreDefSetGrpSym</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ScoreDefSetGrpSym</name>
        <reimplementedby refid="classvrv_1_1_grp_sym_1ace082a98369197f33a1debc1348b2d74">ScoreDefSetGrpSym</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a79353792971252ba4032f2c170d93528">ScoreDefSetGrpSym</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Prepare group symbol starting and ending staffDefs for drawing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1028" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1028" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ac75af86dda467af7ae8d928c83b1a7c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareFacsimile</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>PrepareFacsimile</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Associate <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> with @facs to the appropriate zone. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1033" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a4d2903e69118df1b627cb99ecd036948" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareProcessingLists</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareProcessingLists</name>
        <reimplementedby refid="classvrv_1_1_verse_1affe8ae62b3b29ee06d9ce10a30ddfd82">PrepareProcessingLists</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1a0fc8fe59a19f1777afa25b5719d43adb">PrepareProcessingLists</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Builds a tree of ints (<ref refid="structvrv_1_1_int_tree" kindref="compound">IntTree</ref>) with the staff/layer/verse numbers and for staff/layer to be then processed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1045" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1045" bodyend="1045"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a72def6c07065fa48ad7cd844dd4b2ed5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PreparePointersByLayer</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PreparePointersByLayer</name>
        <reimplementedby refid="classvrv_1_1_dot_1a0cd770f3f7b664c506b702be5ae114f3">PreparePointersByLayer</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a4fb0bf46976ed6976cedd7c97f3032f2">PreparePointersByLayer</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Process by <ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> and set drawing pointers. </para>
        </briefdescription>
        <detaileddescription>
<para>Set Dot::m_drawingNote for <ref refid="classvrv_1_1_dot" kindref="compound">Dot</ref> elements in mensural mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1086" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1086" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a211bdcbc97d6e6eb1b39266d38fea6ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareLayerElementParts</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareLayerElementParts</name>
        <reimplementedby refid="classvrv_1_1_tuplet_1a3360390edceb87c25e2ecd87cf774ffc">PrepareLayerElementParts</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1ab47924cf3fad7acf067b461538ef2473">PrepareLayerElementParts</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1a18666c327afebb5d2548c01f84ee1de0">PrepareLayerElementParts</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1ac5c20e5611ce8dba349929f4757a8efa">PrepareLayerElementParts</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para><ref refid="classvrv_1_1_functor" kindref="compound">Functor</ref> for setting the artic parts. </para>
        </briefdescription>
        <detaileddescription>
<para>Splits the artic content into different artic parts if necessary </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1102" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1102" bodyend="1102"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a1512dc40ee5cbcefd3dd463776e24c0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareRpt</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareRpt</name>
        <reimplementedby refid="classvrv_1_1_m_rpt_1adee1294eed9ce05b6f759a439c858a79">PrepareRpt</reimplementedby>
        <reimplementedby refid="classvrv_1_1_halfm_rpt_1abeb5fad1107be0b7237ab382a3b282b1">PrepareRpt</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a7d46724555e4ba27339181e17b945a33">PrepareRpt</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_1ad622e8231dfae3932f38439a3d2502ea">PrepareRpt</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para><ref refid="classvrv_1_1_functor" kindref="compound">Functor</ref> for setting mRpt drawing numbers (if required) The functor is processed by staff/layer using an ArrayOfComparisons filter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1108" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1108" bodyend="1108"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a5608529769df462c68433b5f50680969" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::PrepareBoundaries</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>PrepareBoundaries</name>
        <reimplementedby refid="classvrv_1_1_boundary_end_1aeb741e55b22fa843466a6e46075818ce">PrepareBoundaries</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ending_1a1704ee591ae157f7e7f553e176d8aab6">PrepareBoundaries</reimplementedby>
        <reimplementedby refid="classvrv_1_1_section_1a8908d7a3629b999b424bdf2c6d894143">PrepareBoundaries</reimplementedby>
        <reimplementedby refid="classvrv_1_1_editorial_element_1ae619830b7bf77603328d2d4e6742c10f">PrepareBoundaries</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a951466390e4c4a3a4d47687714853f8a">PrepareBoundaries</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para><ref refid="classvrv_1_1_functor" kindref="compound">Functor</ref> for setting <ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> of <ref refid="classvrv_1_1_ending" kindref="compound">Ending</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1113" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1113" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a69ad18810d5249e8bb56be54884d2b50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ResetDrawing</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ResetDrawing</name>
        <reimplementedby refid="classvrv_1_1_layer_1a41f6fd58a9380728c20d6e94a0e2672f">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dot_1a8284f4468b749572fd757975ccaa5acd">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_custos_1a7f671bc4914ec75b5642e64b997ba1b3">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_trem_1a8cc3bad0753705f487c1186bdcaecf80">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_boundary_end_1afa8bc5369dcae48ae39c62e08e2bcf1d">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ending_1af6a506e9374dc42c5df1ba8ef7ab8528">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_m_rest_1ac99114d25defa897af639d2e2fefd850">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_control_element_1ae06ab6dbac9fdbbf4efb3343e11ca91d">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_section_1ae5e36d99d9579cdeeff87cc0ad74d3e1">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_verse_1a51c16d7e852aac59635abd6bf0c04648">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_editorial_element_1a9403af2ac0f9c7d915001a6a8a612628">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tempo_1a5f426924d12677dc1ffd51ad0999d1fb">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ligature_1a4610dde3bc723a6b6ffcbf548fe7b570">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_dots_1a659d9a38c90bf0d98afbdc83c15702b5">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_f_1a45a0b3e3dae803345c4f84116d360aa4">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_slur_1ab47be962fd8854013a1e7751140567c1">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_accid_1ab1e149e8a0d529ab74e6247a6ebc2ed2">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_syl_1a23fd0bc19c3581f210bc071aa7dbbc39">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_hairpin_1a0e074000acd08fdaed28a280b425ae93">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_arpeg_1a90a11373c1862998e957cc4d4d8ba8b3">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1a7ffe51b2123461f9bc70ae597a24fe0e">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a4f2900e1bb9ef0616d9963bed4e906fe">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_tuplet_1a9c2c58a68ca84256e200656635a12668">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_artic_1a852957c29409c4c3f2c0894d1353dd96">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_flag_1aa1a671e64dccc5fba4a12bc55a88c55a">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_beam_1ae79b6a8ecf851f3d78d6b490ef62a14a">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_chord_1a219f277237156ada2d457903076740c6">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1af445c1b571a451f7d83ecc8c28d45fde">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1aa8ed8330eedbe43ecde48e5f83ff8df0">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a4e0934ac589bc8c0c3a246c8ec957d6d">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a9592e7c53aac45b95a5a797e37550fe7">ResetDrawing</reimplementedby>
        <reimplementedby refid="classvrv_1_1_stem_1afa780134a7876f434ce445f725ccb36e">ResetDrawing</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Reset the drawing values before calling PrepareDrawing after changes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1137" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1137" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a3d26e4876ee5a38e4c01fae4af747c23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::GetRelativeLayerElement</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>GetRelativeLayerElement</name>
        <reimplementedby refid="classvrv_1_1_layer_element_1a5772c6ac45d7902e40ebc8fae22b818c">GetRelativeLayerElement</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Go through all layer elements of the layer and return next/previous element relative to the specified layer element. </para>
        </briefdescription>
        <detaileddescription>
<para>It will search recursively through children elements until note, chord or ftrem is found. It can be used to look in neighboring layers for the similar search, but only first element will be checked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1144" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1144" bodyend="1144"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1af4bdf6d63a5fbf43a21a5c18d3c49a10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CastOffPages</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CastOffPages</name>
        <reimplementedby refid="classvrv_1_1_system_1a0a1d6d1610b618fb1879e991c46b49c9">CastOffPages</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1182" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1182" bodyend="1182"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ae1320bf0b5a56f033dcc561147225ba7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CastOffEncoding</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CastOffEncoding</name>
        <reimplementedby refid="classvrv_1_1_sb_1afc89859f4b7333bb04bde88d995c4732">CastOffEncoding</reimplementedby>
        <reimplementedby refid="classvrv_1_1_pb_1a7fda5cd00884f531269370f5609793c5">CastOffEncoding</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_element_1a8bde0f7535211864ea3d298c32ff1ab2">CastOffEncoding</reimplementedby>
        <reimplementedby refid="classvrv_1_1_ending_1a337f773d94d752ac4cf20eb2e87cb4f2">CastOffEncoding</reimplementedby>
        <reimplementedby refid="classvrv_1_1_editorial_element_1a639ec21fae82c03f57cc3f61a4e66362">CastOffEncoding</reimplementedby>
        <reimplementedby refid="classvrv_1_1_score_def_1ae52790aa45bf26e259bdd4fb923820cc">CastOffEncoding</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a3f7917b1aee0d8393a9e44484eda2c2d">CastOffEncoding</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Cast off the document according to the encoding provided (pb and sb) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1187" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1187" bodyend="1187"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a84120019fd68f6d7015f6765d7114a7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::UnCastOff</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>UnCastOff</name>
        <reimplementedby refid="classvrv_1_1_floating_object_1a8bf4262ef0383452bb3666bd1b077a67">UnCastOff</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a3229696f014d2302f8baea8bb4ef9cc0">UnCastOff</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Undo the cast of both pages and system. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used by Doc::ContinuousLayout for putting all pages / systems continously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1193" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1193" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ade83951cbefb443049938380b46df228" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::CalcMaxMeasureDuration</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>CalcMaxMeasureDuration</name>
        <reimplementedby refid="classvrv_1_1_measure_1ae16da1362db2e64a14fe959922e92cde">CalcMaxMeasureDuration</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Calculate the maximum duration of each measure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1234" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1234" bodyend="1234"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a4a7cd0786cfd3119a6dd128c25b67a33" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::ReorderByXPos</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>ReorderByXPos</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Reorder elements by x-position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1241" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1ae1a47a27a677aa68ba14e324b0a17e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::FindNextChildByComparison</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>FindNextChildByComparison</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1243" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a7c792936ed7e04d00172c7b0017b85a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::FindPreviousChildByComparison</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>FindPreviousChildByComparison</name>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1245" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a0ee02f42628df9898a57349899c1ba3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Object::Transpose</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>Transpose</name>
        <reimplementedby refid="classvrv_1_1_key_sig_1a9f21cd54799f9ff5d2e033268bebd2f1">Transpose</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a705b110585231c34e4ad48c1501a4c62">Transpose</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1a2725dc432a246462217624b556ae36a7">Transpose</reimplementedby>
        <reimplementedby refid="classvrv_1_1_harm_1a6ac43659d7834cedd0da9cfaff393200">Transpose</reimplementedby>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>Transpose the content. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1250" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="1250" bodyend="1250"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classvrv_1_1_object_1a8c269609416ebdb3b948df8aac3134e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vrv::Object::SeedUuid</definition>
        <argsstring>(unsigned int seed=0)</argsstring>
        <name>SeedUuid</name>
        <param>
          <type>unsigned int</type>
          <declname>seed</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="550" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a2ea4b50e70a3a0d43293df7607a6901b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string vrv::Object::GenerateRandUuid</definition>
        <argsstring>()</argsstring>
        <name>GenerateRandUuid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="552" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a6c529b9574392b6c2baeaf8470e2a989" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool vrv::Object::sortByUlx</definition>
        <argsstring>(Object *a, Object *b)</argsstring>
        <name>sortByUlx</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="554" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvrv_1_1_object_1a8899245c1eb976d70399e7076b267354" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::GenerateUuid</definition>
        <argsstring>()</argsstring>
        <name>GenerateUuid</name>
        <briefdescription>
<para>Method for generating the uuid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1258" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_object_1a1160615757b560e43c779483ec4d41bd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Object::Init</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>Init</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Initialisation method taking a uuid prefix argument. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="1263" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents a basic object. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="71">
        <label>vrv::LayerElement</label>
        <link refid="classvrv_1_1_layer_element"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>vrv::Doc</label>
        <link refid="classvrv_1_1_doc"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>vrv::Corr</label>
        <link refid="classvrv_1_1_corr"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>vrv::Phrase</label>
        <link refid="classvrv_1_1_phrase"/>
        <childnode refid="49" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>vrv::GraceAligner</label>
        <link refid="classvrv_1_1_grace_aligner"/>
        <childnode refid="64" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>vrv::EditorialElement</label>
        <link refid="classvrv_1_1_editorial_element"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>vrv::Pedal</label>
        <link refid="classvrv_1_1_pedal"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="102">
        <label>vrv::Plica</label>
        <link refid="classvrv_1_1_plica"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="82">
        <label>vrv::Dot</label>
        <link refid="classvrv_1_1_dot"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="135">
        <label>vrv::System</label>
        <link refid="classvrv_1_1_system"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="127">
        <label>vrv::ScoreDefElement</label>
        <link refid="classvrv_1_1_score_def_element"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>vrv::Tempo</label>
        <link refid="classvrv_1_1_tempo"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="80">
        <label>vrv::Clef</label>
        <link refid="classvrv_1_1_clef"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>vrv::Octave</label>
        <link refid="classvrv_1_1_octave"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="84">
        <label>vrv::Flag</label>
        <link refid="classvrv_1_1_flag"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>vrv::Dir</label>
        <link refid="classvrv_1_1_dir"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="113">
        <label>vrv::TupletBracket</label>
        <link refid="classvrv_1_1_tuplet_bracket"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>vrv::FloatingObject</label>
        <link refid="classvrv_1_1_floating_object"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="93">
        <label>vrv::MRest</label>
        <link refid="classvrv_1_1_m_rest"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="117">
        <label>vrv::Measure</label>
        <link refid="classvrv_1_1_measure"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>vrv::Course</label>
        <link refid="classvrv_1_1_course"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="136">
        <label>vrv::SystemAligner</label>
        <link refid="classvrv_1_1_system_aligner"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>vrv::Expan</label>
        <link refid="classvrv_1_1_expan"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="139">
        <label>vrv::Fig</label>
        <link refid="classvrv_1_1_fig"/>
        <childnode refid="137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="130">
        <label>vrv::Staff</label>
        <link refid="classvrv_1_1_staff"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="142">
        <label>vrv::Rend</label>
        <link refid="classvrv_1_1_rend"/>
        <childnode refid="137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78">
        <label>vrv::BTrem</label>
        <link refid="classvrv_1_1_b_trem"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>vrv::Harm</label>
        <link refid="classvrv_1_1_harm"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="111">
        <label>vrv::TimestampAttr</label>
        <link refid="classvrv_1_1_timestamp_attr"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="126">
        <label>vrv::Score</label>
        <link refid="classvrv_1_1_score"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="81">
        <label>vrv::Custos</label>
        <link refid="classvrv_1_1_custos"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>vrv::HorizontalAligner</label>
        <link refid="classvrv_1_1_horizontal_aligner"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>vrv::Choice</label>
        <link refid="classvrv_1_1_choice"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>vrv::GraceGrp</label>
        <link refid="classvrv_1_1_grace_grp"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="146">
        <label>vrv::Zone</label>
        <link refid="classvrv_1_1_zone"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vrv::BoundingBox</label>
        <link refid="classvrv_1_1_bounding_box"/>
      </node>
      <node id="62">
        <label>vrv::Section</label>
        <link refid="classvrv_1_1_section"/>
        <childnode refid="56" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>vrv::Gliss</label>
        <link refid="classvrv_1_1_gliss"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="115">
        <label>vrv::Verse</label>
        <link refid="classvrv_1_1_verse"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="109">
        <label>vrv::TabDurSym</label>
        <link refid="classvrv_1_1_tab_dur_sym"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="89">
        <label>vrv::KeySig</label>
        <link refid="classvrv_1_1_key_sig"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="75">
        <label>vrv::BarLineAttr</label>
        <link refid="classvrv_1_1_bar_line_attr"/>
        <childnode refid="74" relation="public-inheritance">
        </childnode>
      </node>
      <node id="137">
        <label>vrv::TextElement</label>
        <link refid="classvrv_1_1_text_element"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>vrv::Turn</label>
        <link refid="classvrv_1_1_turn"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>vrv::GrpSym</label>
        <link refid="classvrv_1_1_grp_sym"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="122">
        <label>vrv::PgFoot</label>
        <link refid="classvrv_1_1_pg_foot"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>vrv::App</label>
        <link refid="classvrv_1_1_app"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>vrv::Expansion</label>
        <link refid="classvrv_1_1_expansion"/>
        <childnode refid="56" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>vrv::Ref</label>
        <link refid="classvrv_1_1_ref"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>vrv::Reg</label>
        <link refid="classvrv_1_1_reg"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>vrv::Reh</label>
        <link refid="classvrv_1_1_reh"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="92">
        <label>vrv::MeterSig</label>
        <link refid="classvrv_1_1_meter_sig"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>vrv::Fermata</label>
        <link refid="classvrv_1_1_fermata"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="87">
        <label>vrv::HalfmRpt</label>
        <link refid="classvrv_1_1_halfm_rpt"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>vrv::Rdg</label>
        <link refid="classvrv_1_1_rdg"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="123">
        <label>vrv::PgFoot2</label>
        <link refid="classvrv_1_1_pg_foot2"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="105">
        <label>vrv::Space</label>
        <link refid="classvrv_1_1_space"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="90">
        <label>vrv::Ligature</label>
        <link refid="classvrv_1_1_ligature"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>vrv::AnchoredText</label>
        <link refid="classvrv_1_1_anchored_text"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="114">
        <label>vrv::TupletNum</label>
        <link refid="classvrv_1_1_tuplet_num"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>vrv::Breath</label>
        <link refid="classvrv_1_1_breath"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="125">
        <label>vrv::PgHead2</label>
        <link refid="classvrv_1_1_pg_head2"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>vrv::Mordent</label>
        <link refid="classvrv_1_1_mordent"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="101">
        <label>vrv::Note</label>
        <link refid="classvrv_1_1_note"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="120">
        <label>vrv::Pages</label>
        <link refid="classvrv_1_1_pages"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="68">
        <label>vrv::Label</label>
        <link refid="classvrv_1_1_label"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="70">
        <label>vrv::Layer</label>
        <link refid="classvrv_1_1_layer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>vrv::Trill</label>
        <link refid="classvrv_1_1_trill"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="143">
        <label>vrv::Text</label>
        <link refid="classvrv_1_1_text"/>
        <childnode refid="137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>vrv::LabelAbbr</label>
        <link refid="classvrv_1_1_label_abbr"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>vrv::Add</label>
        <link refid="classvrv_1_1_add"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="74">
        <label>vrv::BarLine</label>
        <link refid="classvrv_1_1_bar_line"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="103">
        <label>vrv::Proport</label>
        <link refid="classvrv_1_1_proport"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>vrv::Fb</label>
        <link refid="classvrv_1_1_fb"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>vrv::Caesura</label>
        <link refid="classvrv_1_1_caesura"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>vrv::Damage</label>
        <link refid="classvrv_1_1_damage"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="104">
        <label>vrv::Rest</label>
        <link refid="classvrv_1_1_rest"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="133">
        <label>vrv::Surface</label>
        <link refid="classvrv_1_1_surface"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="138">
        <label>vrv::F</label>
        <link refid="classvrv_1_1_f"/>
        <childnode refid="137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="95">
        <label>vrv::MRpt2</label>
        <link refid="classvrv_1_1_m_rpt2"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="131">
        <label>vrv::StaffAlignment</label>
        <link refid="classvrv_1_1_staff_alignment"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>vrv::Subst</label>
        <link refid="classvrv_1_1_subst"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>vrv::Ending</label>
        <link refid="classvrv_1_1_ending"/>
        <childnode refid="56" relation="public-inheritance">
        </childnode>
      </node>
      <node id="124">
        <label>vrv::PgHead</label>
        <link refid="classvrv_1_1_pg_head"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="144">
        <label>vrv::TimestampAligner</label>
        <link refid="classvrv_1_1_timestamp_aligner"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>vrv::Pb</label>
        <link refid="classvrv_1_1_pb"/>
        <childnode refid="56" relation="public-inheritance">
        </childnode>
      </node>
      <node id="145">
        <label>vrv::Tuning</label>
        <link refid="classvrv_1_1_tuning"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="91">
        <label>vrv::Mensur</label>
        <link refid="classvrv_1_1_mensur"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="118">
        <label>vrv::MeterSigGrp</label>
        <link refid="classvrv_1_1_meter_sig_grp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="100">
        <label>vrv::Neume</label>
        <link refid="classvrv_1_1_neume"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="85">
        <label>vrv::FTrem</label>
        <link refid="classvrv_1_1_f_trem"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="99">
        <label>vrv::Nc</label>
        <link refid="classvrv_1_1_nc"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="132">
        <label>vrv::StaffGrp</label>
        <link refid="classvrv_1_1_staff_grp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>vrv::Lv</label>
        <link refid="classvrv_1_1_lv"/>
        <childnode refid="52" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>vrv::Abbr</label>
        <link refid="classvrv_1_1_abbr"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="140">
        <label>vrv::Lb</label>
        <link refid="classvrv_1_1_lb"/>
        <childnode refid="137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>vrv::Unclear</label>
        <link refid="classvrv_1_1_unclear"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>vrv::Dynam</label>
        <link refid="classvrv_1_1_dynam"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="97">
        <label>vrv::MultiRest</label>
        <link refid="classvrv_1_1_multi_rest"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="129">
        <label>vrv::StaffDef</label>
        <link refid="classvrv_1_1_staff_def"/>
        <childnode refid="127" relation="public-inheritance">
        </childnode>
      </node>
      <node id="110">
        <label>vrv::TabGrp</label>
        <link refid="classvrv_1_1_tab_grp"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="88">
        <label>vrv::KeyAccid</label>
        <link refid="classvrv_1_1_key_accid"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="116">
        <label>vrv::Mdiv</label>
        <link refid="classvrv_1_1_mdiv"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="134">
        <label>vrv::Svg</label>
        <link refid="classvrv_1_1_svg"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>vrv::Orig</label>
        <link refid="classvrv_1_1_orig"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="108">
        <label>vrv::Syllable</label>
        <link refid="classvrv_1_1_syllable"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>vrv::Tie</label>
        <link refid="classvrv_1_1_tie"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="107">
        <label>vrv::Syl</label>
        <link refid="classvrv_1_1_syl"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>vrv::Del</label>
        <link refid="classvrv_1_1_del"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="128">
        <label>vrv::ScoreDef</label>
        <link refid="classvrv_1_1_score_def"/>
        <childnode refid="127" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>vrv::Facsimile</label>
        <link refid="classvrv_1_1_facsimile"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>vrv::Restore</label>
        <link refid="classvrv_1_1_restore"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>vrv::AlignmentReference</label>
        <link refid="classvrv_1_1_alignment_reference"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="61">
        <label>vrv::Sb</label>
        <link refid="classvrv_1_1_sb"/>
        <childnode refid="56" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>vrv::Lem</label>
        <link refid="classvrv_1_1_lem"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>vrv::Alignment</label>
        <link refid="classvrv_1_1_alignment"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>vrv::MNum</label>
        <link refid="classvrv_1_1_m_num"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="66">
        <label>vrv::MeasureAligner</label>
        <link refid="classvrv_1_1_measure_aligner"/>
        <childnode refid="64" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>vrv::SystemElement</label>
        <link refid="classvrv_1_1_system_element"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>vrv::PitchInflection</label>
        <link refid="classvrv_1_1_pitch_inflection"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="96">
        <label>vrv::MSpace</label>
        <link refid="classvrv_1_1_m_space"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>vrv::Slur</label>
        <link refid="classvrv_1_1_slur"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="94">
        <label>vrv::MRpt</label>
        <link refid="classvrv_1_1_m_rpt"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>vrv::InstrDef</label>
        <link refid="classvrv_1_1_instr_def"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="98">
        <label>vrv::MultiRpt</label>
        <link refid="classvrv_1_1_multi_rpt"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>vrv::ControlElement</label>
        <link refid="classvrv_1_1_control_element"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>vrv::Object</label>
        <link refid="classvrv_1_1_object"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="72">
        <label>vrv::Accid</label>
        <link refid="classvrv_1_1_accid"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>vrv::Annot</label>
        <link refid="classvrv_1_1_annot"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>vrv::Arpeg</label>
        <link refid="classvrv_1_1_arpeg"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>vrv::Artic</label>
        <link refid="classvrv_1_1_artic"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="106">
        <label>vrv::Stem</label>
        <link refid="classvrv_1_1_stem"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>vrv::BoundaryEnd</label>
        <link refid="classvrv_1_1_boundary_end"/>
        <childnode refid="56" relation="public-inheritance">
        </childnode>
      </node>
      <node id="79">
        <label>vrv::Chord</label>
        <link refid="classvrv_1_1_chord"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>vrv::Supplied</label>
        <link refid="classvrv_1_1_supplied"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="112">
        <label>vrv::Tuplet</label>
        <link refid="classvrv_1_1_tuplet"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="119">
        <label>vrv::Page</label>
        <link refid="classvrv_1_1_page"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>vrv::Hairpin</label>
        <link refid="classvrv_1_1_hairpin"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>vrv::BracketSpan</label>
        <link refid="classvrv_1_1_bracket_span"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>vrv::Fing</label>
        <link refid="classvrv_1_1_fing"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>vrv::Sic</label>
        <link refid="classvrv_1_1_sic"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>vrv::BeatRpt</label>
        <link refid="classvrv_1_1_beat_rpt"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="121">
        <label>vrv::RunningElement</label>
        <link refid="classvrv_1_1_running_element"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="76">
        <label>vrv::Beam</label>
        <link refid="classvrv_1_1_beam"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="83">
        <label>vrv::Dots</label>
        <link refid="classvrv_1_1_dots"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="141">
        <label>vrv::Num</label>
        <link refid="classvrv_1_1_num"/>
        <childnode refid="137" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>vrv::BoundingBox</label>
        <link refid="classvrv_1_1_bounding_box"/>
      </node>
      <node id="1">
        <label>vrv::Object</label>
        <link refid="classvrv_1_1_object"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/verovio/verovio/include/vrv/object.h" line="54" column="32" bodyfile="/home/runner/work/verovio/verovio/include/vrv/object.h" bodystart="54" bodyend="1356"/>
    <listofallmembers>
      <member refid="classvrv_1_1_object_1a2ab113f1faf62ee0332687ff981c0948" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AddChild</name></member>
      <member refid="classvrv_1_1_object_1a1af968d5140f79fd056aa5a46d7cad11" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AddLayerElementToFlatList</name></member>
      <member refid="classvrv_1_1_object_1a08855458e45646f3831f2edf7c8a77e0" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustAccidX</name></member>
      <member refid="classvrv_1_1_object_1a9a7ac871bbd388bc57ad3efbcd5523e4" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustArpeg</name></member>
      <member refid="classvrv_1_1_object_1adbd52d9a86b0a97174b734269a690048" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustArpegEnd</name></member>
      <member refid="classvrv_1_1_object_1a6b400f3d27479c0a45865bb97d21a879" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustArtic</name></member>
      <member refid="classvrv_1_1_object_1a0f7c68b80209c30180004962bff3c8f0" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustArticWithSlurs</name></member>
      <member refid="classvrv_1_1_object_1a0d2579fea0aea8b317a490c1654be52b" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustBeams</name></member>
      <member refid="classvrv_1_1_object_1a1373589b997e00e6dc811eb3139194e8" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustBeamsEnd</name></member>
      <member refid="classvrv_1_1_object_1a6c19b533f485fd10e5649bb5c441c884" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustClefChanges</name></member>
      <member refid="classvrv_1_1_object_1abeee6db6564ff37f1fd686033751d51f" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustCrossStaffYPos</name></member>
      <member refid="classvrv_1_1_object_1a91e929fac940d876aa172b0b6c160c26" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustCrossStaffYPosEnd</name></member>
      <member refid="classvrv_1_1_object_1a1745790d27bcd5c9b11754ea44fdc376" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustDots</name></member>
      <member refid="classvrv_1_1_object_1ae0790c79940de6c0bd58e9022043b493" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustDotsEnd</name></member>
      <member refid="classvrv_1_1_object_1a757300b40f61c72a86c66fe9df7f8b5d" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustFloatingPositionerGrps</name></member>
      <member refid="classvrv_1_1_object_1a3b246662209d352732e6f3018efe7748" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustFloatingPositioners</name></member>
      <member refid="classvrv_1_1_object_1aa7b805cd96f7dc63c47c640d01dd9954" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustFloatingPositionersBetween</name></member>
      <member refid="classvrv_1_1_object_1a7f4019d68ac2206469e1ed0de22610a3" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustGraceXPos</name></member>
      <member refid="classvrv_1_1_object_1a935fdcf665ba277d9a7879a91b8b6f57" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustGraceXPosEnd</name></member>
      <member refid="classvrv_1_1_object_1a905f84521c7583c3f1cdaf806ceecdaf" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustHarmGrpsSpacing</name></member>
      <member refid="classvrv_1_1_object_1a3feb79622f62f2a9282f3dd1201c3a0c" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustHarmGrpsSpacingEnd</name></member>
      <member refid="classvrv_1_1_object_1acd47b579ea43282b32c8c585308d9857" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustLayers</name></member>
      <member refid="classvrv_1_1_object_1adfa29f3f97c5463c0c0de270636c5e4b" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustSlurs</name></member>
      <member refid="classvrv_1_1_object_1a56434ce48d536c537485260bec7ef6c2" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustStaffOverlap</name></member>
      <member refid="classvrv_1_1_object_1af1cfac1b1885dea453542d8fccdc4461" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustSylSpacing</name></member>
      <member refid="classvrv_1_1_object_1ada977235c88371e047043642cb5ff3bb" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustSylSpacingEnd</name></member>
      <member refid="classvrv_1_1_object_1ae04a8386531bae9a2facddc7d293a0ed" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustTempo</name></member>
      <member refid="classvrv_1_1_object_1a8aaf88c9ab32e7cc92a6d39189031caa" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustTupletNumOverlap</name></member>
      <member refid="classvrv_1_1_object_1a59773566ac731e75fa34166fa1d78aa3" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustTupletsX</name></member>
      <member refid="classvrv_1_1_object_1a80bc658bb972eabcee2d0aa536386cfc" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustTupletsY</name></member>
      <member refid="classvrv_1_1_object_1af18e010dd5e84c10b4c10cfa0636db08" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustXOverflow</name></member>
      <member refid="classvrv_1_1_object_1ae373581b24540ce6c308bd86ccca6e93" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustXOverflowEnd</name></member>
      <member refid="classvrv_1_1_object_1adacbf7e25c213d82303c739fec53828a" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustXPos</name></member>
      <member refid="classvrv_1_1_object_1aa328ebfcfc62471e4fb0ed19523bcc1c" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustXPosEnd</name></member>
      <member refid="classvrv_1_1_object_1a6bdcb61d424d48a52281eec119128ceb" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustXRelForTranscription</name></member>
      <member refid="classvrv_1_1_object_1a8cc3cee5e4463a0434de0fa42ab1d1cb" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AdjustYPos</name></member>
      <member refid="classvrv_1_1_object_1ac3beb8d8246e880f20c92c4e3725545a" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AlignHorizontally</name></member>
      <member refid="classvrv_1_1_object_1a475456da50e7eeb1320dcd93134c2b1e" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AlignHorizontallyEnd</name></member>
      <member refid="classvrv_1_1_object_1a4360c3bd5d8f241c0b0dc1624d7402cf" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AlignMeasures</name></member>
      <member refid="classvrv_1_1_object_1ae8638bfdf6291004aa08e84311b6e33d" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AlignMeasuresEnd</name></member>
      <member refid="classvrv_1_1_object_1ab07299113bca877d821a79246e887bd2" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AlignSystems</name></member>
      <member refid="classvrv_1_1_object_1a5e3a70072c31ed3ddf96fca1d40b4241" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AlignSystemsEnd</name></member>
      <member refid="classvrv_1_1_object_1a318b62923fa869781ad0effd2ff40648" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AlignVertically</name></member>
      <member refid="classvrv_1_1_object_1a7456561dbdda3f5d7f47e520c3819cd3" prot="public" virt="virtual"><scope>vrv::Object</scope><name>AlignVerticallyEnd</name></member>
      <member refid="classvrv_1_1_object_1a1579484058fb14c4c8cdf4ad58249db6" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ApplyPPUFactor</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae9a22cf5d306abb22ff5f557e81bd9af" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>ApproximateBezierBoundingBox</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3901a5e4a728b8f3450cce0e30f4bd29" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>ApproximateBezierExtrema</name></member>
      <member refid="classvrv_1_1_object_1aa63ca849b67044acc38f89a6030b03c2" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>binaryComp</name></member>
      <member refid="classvrv_1_1_bounding_box_1a5601855899250709d9fa94f3c280aa72" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>BoundingBox</name></member>
      <member refid="classvrv_1_1_object_1aeafa32ecabeffb9ce6d3e8372ab7160b" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CalcArtic</name></member>
      <member refid="classvrv_1_1_bounding_box_1a91eb3e2ee9b00bc764283fe1710e199b" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>CalcBezierAtPosition</name></member>
      <member refid="classvrv_1_1_object_1a277607c9a525f437a721e8c526963d44" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CalcChordNoteHeads</name></member>
      <member refid="classvrv_1_1_bounding_box_1ac09f7239af89a7e19ca235761589e150" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>CalcDeCasteljau</name></member>
      <member refid="classvrv_1_1_object_1a30538b76016036369786f42be54482c2" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CalcDots</name></member>
      <member refid="classvrv_1_1_object_1aa102c1e31b16c63319763a5fc1c8351c" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CalcLedgerLines</name></member>
      <member refid="classvrv_1_1_object_1a56b580832eec7871b18371835a61e136" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CalcLedgerLinesEnd</name></member>
      <member refid="classvrv_1_1_object_1a5bd96aae8a25cedd2c63ce09b92388a3" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CalcLigatureNotePos</name></member>
      <member refid="classvrv_1_1_bounding_box_1af5401bb6040fe859bf6b7dc09c3c35b8" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>CalcLinearInterpolation</name></member>
      <member refid="classvrv_1_1_object_1ade83951cbefb443049938380b46df228" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CalcMaxMeasureDuration</name></member>
      <member refid="classvrv_1_1_object_1a1e1336770fd1b687628ef53b207d29f2" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CalcOnsetOffset</name></member>
      <member refid="classvrv_1_1_object_1ae8d2bbd8c168fd6904c864f297b3deeb" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CalcOnsetOffsetEnd</name></member>
      <member refid="classvrv_1_1_bounding_box_1acf2951ebea74c27b024916a4c96480a5" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>CalcPointAtBezier</name></member>
      <member refid="classvrv_1_1_bounding_box_1a80465f84c7190f8cb0a9765693376be2" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>CalcPositionAfterRotation</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2658cb5ed914d5c435de4a3740bff2e7" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>CalcSlope</name></member>
      <member refid="classvrv_1_1_object_1a0b93f8b6e02c8ba98a03db67fe5d5d10" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CalcStem</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae087d56d7ff270c908e3a723be01f6e7" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>CalcThickBezier</name></member>
      <member refid="classvrv_1_1_object_1ae1320bf0b5a56f033dcc561147225ba7" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CastOffEncoding</name></member>
      <member refid="classvrv_1_1_object_1af4bdf6d63a5fbf43a21a5c18d3c49a10" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CastOffPages</name></member>
      <member refid="classvrv_1_1_object_1a15c5f866aed95ea5c5b051c5c7e47137" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CastOffSystems</name></member>
      <member refid="classvrv_1_1_object_1aee6f8abfde8d2fe26b067f97b6ba9f0b" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CastOffSystemsEnd</name></member>
      <member refid="classvrv_1_1_object_1a0af864d1b64a70d4ec8b62a520114bde" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>ClearChildren</name></member>
      <member refid="classvrv_1_1_object_1a667b4432b8f9d9e92bfd34fe5c885099" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>ClearRelinquishedChildren</name></member>
      <member refid="classvrv_1_1_object_1ab2d363effa62d58a65f8aba1330c1379" prot="public" virt="virtual"><scope>vrv::Object</scope><name>Clone</name></member>
      <member refid="classvrv_1_1_object_1a2a1c4d0ed1a15f33637b03670c9aa98f" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CloneReset</name></member>
      <member refid="classvrv_1_1_object_1ad471da0d7ec33b8a818cc94c9630314b" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ConvertMarkupAnalytical</name></member>
      <member refid="classvrv_1_1_object_1a677194130b19ebd382b4868f9284985b" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ConvertMarkupAnalyticalEnd</name></member>
      <member refid="classvrv_1_1_object_1a7262b554ba150b54b434fc7c0c93001d" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ConvertMarkupArtic</name></member>
      <member refid="classvrv_1_1_object_1adeeaf95b17b15194260884d306a72214" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ConvertMarkupArticEnd</name></member>
      <member refid="classvrv_1_1_object_1ada935f44326f0c4ecfc068694461718b" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ConvertToCastOffMensural</name></member>
      <member refid="classvrv_1_1_object_1ae930432f04c711ac22a14c66a92feb5e" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ConvertToPageBased</name></member>
      <member refid="classvrv_1_1_object_1ada7452f72d022232966a2d5822b8bbc8" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ConvertToPageBasedEnd</name></member>
      <member refid="classvrv_1_1_object_1a4dc4ba189667de40dfbb15b88adb5b0e" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ConvertToUnCastOffMensural</name></member>
      <member refid="classvrv_1_1_object_1a4bf38f527d70161c92062a2347b7c11e" prot="public" virt="virtual"><scope>vrv::Object</scope><name>CopyChildren</name></member>
      <member refid="classvrv_1_1_object_1aa24fba8bae1f0876567f564f98020966" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>DeleteChild</name></member>
      <member refid="classvrv_1_1_object_1ac846569894fc8b08083e5a8526ba5834" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>DetachChild</name></member>
      <member refid="classvrv_1_1_bounding_box_1a52ac837dc797c5f292c98ddb3f43a098" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>Encloses</name></member>
      <member refid="classvrv_1_1_object_1a3749f83f36adfc8748438ca17b1e5f91" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>FillFlatList</name></member>
      <member refid="classvrv_1_1_object_1a75266bd3b8cdd0db529367a5f9f16450" prot="public" virt="virtual"><scope>vrv::Object</scope><name>FillStaffCurrentTimeSpanning</name></member>
      <member refid="classvrv_1_1_object_1aa35be27cc82fd95f7a353a705721778b" prot="public" virt="virtual"><scope>vrv::Object</scope><name>FillStaffCurrentTimeSpanningEnd</name></member>
      <member refid="classvrv_1_1_object_1afe64fa5f9df4e735ed7f1e9a5935a339" prot="public" virt="virtual"><scope>vrv::Object</scope><name>FindAllBetween</name></member>
      <member refid="classvrv_1_1_object_1aa5fd51861abce2d3237ef9d115d32ba6" prot="public" virt="virtual"><scope>vrv::Object</scope><name>FindAllByComparison</name></member>
      <member refid="classvrv_1_1_object_1a7ba7ae169a7258a16d3ff24cd2620420" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>FindAllDescendantBetween</name></member>
      <member refid="classvrv_1_1_object_1af3c1aa93cec13297b8535cccc01ff719" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>FindAllDescendantByComparison</name></member>
      <member refid="classvrv_1_1_object_1acd19a93751c317da1c6a0873e606f882" prot="public" virt="virtual"><scope>vrv::Object</scope><name>FindAllReferencedObjects</name></member>
      <member refid="classvrv_1_1_object_1a7cfaeb87486d72cd79c8aec19f8b8108" prot="public" virt="virtual"><scope>vrv::Object</scope><name>FindByComparison</name></member>
      <member refid="classvrv_1_1_object_1a3a8ac50b3a292c42c0b24d7c7a6cd3b1" prot="public" virt="virtual"><scope>vrv::Object</scope><name>FindByUuid</name></member>
      <member refid="classvrv_1_1_object_1a75077fdacaa928e36fe20b90eaca7a7a" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>FindDescendantByComparison</name></member>
      <member refid="classvrv_1_1_object_1a2c65f3e559db5add1055a45e60d44536" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>FindDescendantByType</name></member>
      <member refid="classvrv_1_1_object_1af7647ce739175bbba03428b59969727c" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>FindDescendantByUuid</name></member>
      <member refid="classvrv_1_1_object_1a95acdd9f46d55cf067b567ef11526b68" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>FindDescendantExtremeByComparison</name></member>
      <member refid="classvrv_1_1_object_1ae21b1881fd8e810d784efd2b3327ce9d" prot="public" virt="virtual"><scope>vrv::Object</scope><name>FindExtremeByComparison</name></member>
      <member refid="classvrv_1_1_object_1a5783461a8f5bee6d95391b86e0004ff4" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>FindNextChild</name></member>
      <member refid="classvrv_1_1_object_1ae1a47a27a677aa68ba14e324b0a17e00" prot="public" virt="virtual"><scope>vrv::Object</scope><name>FindNextChildByComparison</name></member>
      <member refid="classvrv_1_1_object_1a4750585ae6b8737aba3408fcc863dfeb" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>FindPreviousChild</name></member>
      <member refid="classvrv_1_1_object_1a7c792936ed7e04d00172c7b0017b85a1" prot="public" virt="virtual"><scope>vrv::Object</scope><name>FindPreviousChildByComparison</name></member>
      <member refid="classvrv_1_1_object_1adf698716d3820efeb5d1af9bfd24a187" prot="public" virt="virtual"><scope>vrv::Object</scope><name>FindSpannedLayerElements</name></member>
      <member refid="classvrv_1_1_object_1a426081ffba31e4251a2c36ceeb2a43ba" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GenerateMIDI</name></member>
      <member refid="classvrv_1_1_object_1a2ea4b50e70a3a0d43293df7607a6901b" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GenerateRandUuid</name></member>
      <member refid="classvrv_1_1_object_1abe889073301d6e1dfe55e725b6532948" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GenerateTimemap</name></member>
      <member refid="classvrv_1_1_object_1a8899245c1eb976d70399e7076b267354" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>GenerateUuid</name></member>
      <member refid="classvrv_1_1_object_1a3eb3c52e16525ed1a559a825fa85e00e" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetAlignmentLeftRight</name></member>
      <member refid="classvrv_1_1_object_1aeb7e152a62704071901972bbfa06062c" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetAttributes</name></member>
      <member refid="classvrv_1_1_bounding_box_1ab7d4cb3332c6a35ec86462b37c300279" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetBezierThicknessCoeficient</name></member>
      <member refid="classvrv_1_1_bounding_box_1a91a7bb36d11f909e84caab997fb49c0c" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetBottomBy</name></member>
      <member refid="classvrv_1_1_bounding_box_1aa3fc5bcc7d25b6e975fad50b11edd781" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetBoundingBoxGlyph</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2b025880f04cefa1cb37b7e6f8bfb8f1" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetBoundingBoxGlyphFontSize</name></member>
      <member refid="classvrv_1_1_object_1a6bd78730c9d5f0302710213488708adb" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetChild</name></member>
      <member refid="classvrv_1_1_object_1a889936363e6eb4b03172c86219c275fc" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetChild</name></member>
      <member refid="classvrv_1_1_object_1a96ae60d000961398754d5b22de89cc4e" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetChildCount</name></member>
      <member refid="classvrv_1_1_object_1a21704672a51a54150db818e2e14af2da" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetChildCount</name></member>
      <member refid="classvrv_1_1_object_1a88129489683bd7a5ec580f87e43e3360" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetChildCount</name></member>
      <member refid="classvrv_1_1_object_1aa187432e90c784c80ac11e25ba92161c" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetChildIndex</name></member>
      <member refid="classvrv_1_1_object_1a35273845b5714fd8e78ce82e18a60f3c" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetChildren</name></member>
      <member refid="classvrv_1_1_object_1a36a7f108361c29dae9b92078359ca105" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetChildrenForModification</name></member>
      <member refid="classvrv_1_1_object_1a21d8756c0c921f9fa7bac0e210eb5e00" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetClassId</name></member>
      <member refid="classvrv_1_1_object_1a85f5f4c2c61b31f3e0cfafccf6893dd3" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetClassName</name></member>
      <member refid="classvrv_1_1_object_1a65066ae5b40a4dc3aab9bf76abc57d36" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetClosingComment</name></member>
      <member refid="classvrv_1_1_object_1aa8a0722010e05e1e2cb04d90a9535cc4" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetComment</name></member>
      <member refid="classvrv_1_1_bounding_box_1a74fec7caf937bc6892cd0de8c1f29355" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetContentBottom</name></member>
      <member refid="classvrv_1_1_bounding_box_1a9a33f5750af51cfb292ff2a553744e2d" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetContentLeft</name></member>
      <member refid="classvrv_1_1_bounding_box_1a755302fda960358f076a3175783a5d78" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetContentRight</name></member>
      <member refid="classvrv_1_1_bounding_box_1a8343f2b84e7bb194cb9377c304703bba" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetContentTop</name></member>
      <member refid="classvrv_1_1_bounding_box_1ac2b3dff1054fee47d8d22c2183c4c346" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetContentX1</name></member>
      <member refid="classvrv_1_1_bounding_box_1aca490fbb8d4d5c0179e05f790e0e2951" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetContentX2</name></member>
      <member refid="classvrv_1_1_bounding_box_1afb681918250b5eceeab06a8752c794a0" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetContentY1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7d8f116f3c72430801e43fc9f1fb1e95" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetContentY2</name></member>
      <member refid="classvrv_1_1_object_1a318be52d7897d2a16d699374a4b702ed" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetDescendantIndex</name></member>
      <member refid="classvrv_1_1_object_1af17afdb1b9eba2df2d2f9b14bf98a8b0" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetDrawingX</name></member>
      <member refid="classvrv_1_1_object_1a93703095a714be5684eb0968475a87c9" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetDrawingY</name></member>
      <member refid="classvrv_1_1_object_1a60120fd33bf1f7227c4dc2f6a9b265c7" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetDurationInterface</name></member>
      <member refid="classvrv_1_1_object_1a12c0e976636a155de9c58ead6cd743f8" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetFacsimileInterface</name></member>
      <member refid="classvrv_1_1_object_1a4f539160a7684d67d0c4e01e5dd06c36" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetFirst</name></member>
      <member refid="classvrv_1_1_object_1a214d80f16352cda785bdbf1ba3423b68" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetFirstAncestor</name></member>
      <member refid="classvrv_1_1_object_1ad12836ab87743384cac90b940a454585" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetFirstAncestorInRange</name></member>
      <member refid="classvrv_1_1_object_1a10fe05578ee7f669ca3591c5a2a3a428" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetFirstChildNot</name></member>
      <member refid="classvrv_1_1_object_1a2bfb8ee92dbd7e805de0aae51d07d534" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetIdx</name></member>
      <member refid="classvrv_1_1_object_1a16cba5d613527c43c79025065f82be93" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetLast</name></member>
      <member refid="classvrv_1_1_object_1a908d56fef5a5dd9b9808555ab4ea4daf" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetLastAncestorNot</name></member>
      <member refid="classvrv_1_1_bounding_box_1af329372204a34520779e6b0d0596e8b9" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetLeftBy</name></member>
      <member refid="classvrv_1_1_object_1a817a55b73b4356214fecf01d9da87d26" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetLinkingInterface</name></member>
      <member refid="classvrv_1_1_object_1ab2e351247e616a3f30eaf2e3d125f054" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetNext</name></member>
      <member refid="classvrv_1_1_object_1a3fda6549b288e139959f2e50355792e7" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetNext</name></member>
      <member refid="classvrv_1_1_object_1a96ca869c3849c0f108655ad5d900a2c7" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetParent</name></member>
      <member refid="classvrv_1_1_object_1aace2a15227fa3db1f20b5acbb7f2b4d2" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetPitchInterface</name></member>
      <member refid="classvrv_1_1_object_1a32a7bc21b1323f31cb9d9e68686ce345" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetPlistInterface</name></member>
      <member refid="classvrv_1_1_object_1a68eb08599ac194e3dfc2c149e96db67a" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetPositionInterface</name></member>
      <member refid="classvrv_1_1_object_1a26a7c60cdf50a4072927aa671112f1f3" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetPrevious</name></member>
      <member refid="classvrv_1_1_object_1a3d26e4876ee5a38e4c01fae4af747c23" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetRelativeLayerElement</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2fe9d4e0cef41c270fe6683e5fbd8223" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetRightBy</name></member>
      <member refid="classvrv_1_1_object_1a36ae3be40fa20c6255a6003e5d56133f" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetScoreDefInterface</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7e55bc05f8dc9b3ff7768fe48c791d83" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetSelfBottom</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2fb7e4b83e390c3cd436e3a73ddfa269" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetSelfLeft</name></member>
      <member refid="classvrv_1_1_bounding_box_1aaae2c8d3d80e7203585052862288f2d5" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetSelfRight</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2e094936f23e6b9c044ccd28a3aa0681" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetSelfTop</name></member>
      <member refid="classvrv_1_1_bounding_box_1a588e6d63bc9e9d149dc6fdd784886a78" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetSelfX1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a025b101dd81de0a3802ba5ac2a86f9c5" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetSelfX2</name></member>
      <member refid="classvrv_1_1_bounding_box_1ad958652328dd6762612727f064f56b3c" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetSelfY1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7ba0ddf13040f3747a7421232c9bc21d" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetSelfY2</name></member>
      <member refid="classvrv_1_1_object_1a8f790811faa78e214ba76d2a728fa8e5" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetStemmedDrawingInterface</name></member>
      <member refid="classvrv_1_1_object_1ac2308546f247b47d6fdaaf0e90490fa5" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetTextDirInterface</name></member>
      <member refid="classvrv_1_1_object_1a738ca662cfaa09bb0122966cb29b43c6" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetTimePointInterface</name></member>
      <member refid="classvrv_1_1_object_1a2ac1817c7492a51e6bb550f3002b32de" prot="public" virt="virtual"><scope>vrv::Object</scope><name>GetTimeSpanningInterface</name></member>
      <member refid="classvrv_1_1_bounding_box_1a9dae1c4940695c403ba67841512f94f3" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetTopBy</name></member>
      <member refid="classvrv_1_1_object_1a7bcc3062c90aa6f927f8c51f180b585b" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetUuid</name></member>
      <member refid="classvrv_1_1_bounding_box_1a6f1d1de5ac01ce1fe4cf43ed16b47e11" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetX1By</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3a9666c33d5a4a7d01f4b159c128d6c5" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetX2By</name></member>
      <member refid="classvrv_1_1_bounding_box_1ad906e8632b28b1be81fa374ad2b5292e" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetY1By</name></member>
      <member refid="classvrv_1_1_bounding_box_1a242e2a41a61fb347b526a08fef162cdf" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>GetY2By</name></member>
      <member refid="classvrv_1_1_object_1a9020ecbd4da7cb50ed8ffa686eeae8e5" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasAttClass</name></member>
      <member refid="classvrv_1_1_object_1a07880f4ad709e37ca6b5483110905383" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasAttribute</name></member>
      <member refid="classvrv_1_1_object_1ad52c48d64fdb14dbc0a4dcf40aa87295" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasClosingComment</name></member>
      <member refid="classvrv_1_1_object_1a5d95d6ed5231e12c17d17868d337b218" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasComment</name></member>
      <member refid="classvrv_1_1_bounding_box_1a6cac2a9e7c863969d8e856807936574f" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasContentBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3bde41712d93b9badf88b35ac1974503" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasContentHorizontalBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1abe8bb676a5c670242888d9034daa5a22" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasContentVerticalBB</name></member>
      <member refid="classvrv_1_1_object_1a32d88cd25d424a5c15b014efe736ee20" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasDescendant</name></member>
      <member refid="classvrv_1_1_object_1ac9dd387934b8960b47b96a0c05bb1b84" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasEditorialContent</name></member>
      <member refid="classvrv_1_1_bounding_box_1a1dfd7207c5f8431bcb56c88b5c469992" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasEmptyBB</name></member>
      <member refid="classvrv_1_1_object_1a1639642ba9433617ec04608f2d2570bb" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasInterface</name></member>
      <member refid="classvrv_1_1_object_1ae0d0368a66d1c4b590b311a1a94eb717" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasNonEditorialContent</name></member>
      <member refid="classvrv_1_1_bounding_box_1a72744aa255a0d861577275366e711729" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasSelfBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a33e2d9c410be02f476ca19e0f063284c" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasSelfHorizontalBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a20afc38171ff613053a28a3530a66a05" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HasSelfVerticalBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1aee28c8f38335a02d395f132eac3174a2" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HorizontalContentOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a505bfcdcaff3d551fdbd3a74ed3375f0" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HorizontalLeftOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1ac4af18c7aeda842527a70954b409f54b" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HorizontalRightOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a363e14e29dcb72d6539a832921c538f9" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>HorizontalSelfOverlap</name></member>
      <member refid="classvrv_1_1_object_1a1160615757b560e43c779483ec4d41bd" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>Init</name></member>
      <member refid="classvrv_1_1_object_1aaf1ba626f7c0d6be44373b6cfe29855f" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>InsertAfter</name></member>
      <member refid="classvrv_1_1_object_1a26dd6389f8b6ce5ff1cf9f0b779a0d14" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>InsertBefore</name></member>
      <member refid="classvrv_1_1_object_1ac14929dac6e5b5e699d16ba7fc258d9d" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>InsertChild</name></member>
      <member refid="classvrv_1_1_bounding_box_1aa2283d42759c18ce84fe53f2e1684849" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>Intersects</name></member>
      <member refid="classvrv_1_1_bounding_box_1af366b55a8e449a12d689acd9d35ae782" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>Is</name></member>
      <member refid="classvrv_1_1_bounding_box_1aaeb23e9d3064f863ef3857efef570a8f" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>Is</name></member>
      <member refid="classvrv_1_1_object_1af8ee73eca8e0a08ae535318c4462fad1" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsAttribute</name></member>
      <member refid="classvrv_1_1_object_1a24ff4e053bb15d8d893c9a1a6b2f9639" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsAttribute</name></member>
      <member refid="classvrv_1_1_object_1a5b1d528341ef806d382cdd1c27911021" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsBoundaryElement</name></member>
      <member refid="classvrv_1_1_object_1aab9a49af1e67891dcfd1b929a6d64aa9" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsControlElement</name></member>
      <member refid="classvrv_1_1_object_1a46776dd312ff3631580f9e0ff293d52e" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsEditorialElement</name></member>
      <member refid="classvrv_1_1_object_1a76f4663d1b09c5fe2b0c771eeb3f7d0e" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsExpansion</name></member>
      <member refid="classvrv_1_1_object_1a07dfe3de52f16cff12eefabe11c6cd96" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsExpansion</name></member>
      <member refid="classvrv_1_1_object_1a3b131f39c868a8a1e9b768bdc0eae811" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsFloatingObject</name></member>
      <member refid="classvrv_1_1_object_1a311186b3525f994471394fcc38bbcda8" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsLayerElement</name></member>
      <member refid="classvrv_1_1_object_1a4eec6780edc930e49d9874c1036735a4" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsModified</name></member>
      <member refid="classvrv_1_1_object_1ad507cfd401ea330cca65a4891b90da80" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsReferenceObject</name></member>
      <member refid="classvrv_1_1_object_1a5b19179d87ef32147c3d513fa735c07f" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsRunningElement</name></member>
      <member refid="classvrv_1_1_object_1a774acf3d4a93bd2e94451eeb1b883273" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsScoreDefElement</name></member>
      <member refid="classvrv_1_1_object_1a06ffb8f7f251aeea862abe1f76b5599d" prot="public" virt="virtual"><scope>vrv::Object</scope><name>IsSupportedChild</name></member>
      <member refid="classvrv_1_1_object_1a334a7956ff32ade0704f4afdd74f37a6" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsSystemElement</name></member>
      <member refid="classvrv_1_1_object_1a958bf53eb4117b0438aa5ddb9264c1c8" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>IsTextElement</name></member>
      <member refid="classvrv_1_1_object_1af644f5ed4600bb29ca03ded3f95b3467" prot="public" virt="virtual"><scope>vrv::Object</scope><name>JustifyX</name></member>
      <member refid="classvrv_1_1_object_1afc5a347cc3aa0a158036cdabc32157da" prot="public" virt="virtual"><scope>vrv::Object</scope><name>JustifyY</name></member>
      <member refid="classvrv_1_1_object_1a9af0cce7b5db85a68ed87c274176aa66" prot="public" virt="virtual"><scope>vrv::Object</scope><name>LayerCountInTimeSpan</name></member>
      <member refid="classvrv_1_1_object_1add866a8144bcb528808a3e9d6a8f9d45" prot="public" virt="virtual"><scope>vrv::Object</scope><name>LayerElementsInTimeSpan</name></member>
      <member refid="classvrv_1_1_object_1aa864e5826f181dfc783aa98517152e32" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_attClasses</name></member>
      <member refid="classvrv_1_1_bounding_box_1a4961ebaf8f99abe31ee894345cd84a16" prot="protected" virt="non-virtual"><scope>vrv::Object</scope><name>m_cachedDrawingX</name></member>
      <member refid="classvrv_1_1_bounding_box_1a548baf7b854ef877313302670da5d0b8" prot="protected" virt="non-virtual"><scope>vrv::Object</scope><name>m_cachedDrawingY</name></member>
      <member refid="classvrv_1_1_object_1a3f896d8fcccd24f2d443db940aa086e5" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_children</name></member>
      <member refid="classvrv_1_1_object_1a1236cb26b1c35eff5e0036827a94ffa2" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_classid</name></member>
      <member refid="classvrv_1_1_object_1a9a1effd7a4cf9a0017d665726d2a1fed" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_closingComment</name></member>
      <member refid="classvrv_1_1_object_1a0426badbb9f00a508881a1862274715c" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_comment</name></member>
      <member refid="classvrv_1_1_object_1a2d2e5ea3946a8673faa67d08cf0acee2" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_interfaces</name></member>
      <member refid="classvrv_1_1_object_1af06d35e8d5895822a03500585aa7f31a" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_isAttribute</name></member>
      <member refid="classvrv_1_1_object_1a1514c6c11754e70d2f1718049ed319e5" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_isExpansion</name></member>
      <member refid="classvrv_1_1_object_1a49f9e52d30df777fc8eb8cdbdfb7c7e9" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_isModified</name></member>
      <member refid="classvrv_1_1_object_1aaaab3c4888b5cf47362c260a0829aca4" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_isReferenceObject</name></member>
      <member refid="classvrv_1_1_object_1a78cfd4b7fb317a899662ffa890500766" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_iteratorCurrent</name></member>
      <member refid="classvrv_1_1_object_1a67b5776a98fe63578a3c17868e72de59" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_iteratorElementType</name></member>
      <member refid="classvrv_1_1_object_1a40306fa2a0b5290cb7f57429a9d0a689" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_iteratorEnd</name></member>
      <member refid="classvrv_1_1_object_1ae64179a13e2edae80b712cc726867ad4" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_parent</name></member>
      <member refid="classvrv_1_1_object_1a74ae0995caefb72a71445ba43fce0652" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>m_unsupported</name></member>
      <member refid="classvrv_1_1_object_1aedb15995b4bfd32c033ed7788e09e6e1" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>m_uuid</name></member>
      <member refid="classvrv_1_1_object_1a985728e489aed60707c313327bf7c464" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>Modify</name></member>
      <member refid="classvrv_1_1_object_1aa846e8099e10d6cf427e8255e4a62dd4" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>MoveChildrenFrom</name></member>
      <member refid="classvrv_1_1_object_1ac7063ea155c08f4e39e5c59b735f1d9e" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>MoveItselfTo</name></member>
      <member refid="classvrv_1_1_object_1ae10fe4f6d8a8b450b680f10cfe39a9cc" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>Object</name></member>
      <member refid="classvrv_1_1_object_1aa3351c670d6ea28be99e411ac6a667d3" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>Object</name></member>
      <member refid="classvrv_1_1_object_1a8be4ecf7908559751e728551718a8bfc" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>Object</name></member>
      <member refid="classvrv_1_1_object_1a6ad51ecc97faf69c8fa8432a780aed44" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>operator=</name></member>
      <member refid="classvrv_1_1_object_1a5608529769df462c68433b5f50680969" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareBoundaries</name></member>
      <member refid="classvrv_1_1_object_1a873d7c2f7805530e06ebd07885c399b6" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareCrossStaff</name></member>
      <member refid="classvrv_1_1_object_1a79600c0f5d0d0c68a2501f60ef077126" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareCrossStaffEnd</name></member>
      <member refid="classvrv_1_1_object_1a392d061080fee243ac4beb6f7e77434d" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareDrawingCueSize</name></member>
      <member refid="classvrv_1_1_object_1ac75af86dda467af7ae8d928c83b1a7c8" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareFacsimile</name></member>
      <member refid="classvrv_1_1_object_1af6ece837a732f054019b9230c59d8701" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareFloatingGrps</name></member>
      <member refid="classvrv_1_1_object_1ac9850da37f019eae12da8c42776e67b8" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareFloatingGrpsEnd</name></member>
      <member refid="classvrv_1_1_object_1a211bdcbc97d6e6eb1b39266d38fea6ef" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareLayerElementParts</name></member>
      <member refid="classvrv_1_1_object_1a506499857fa99ad918b7c236670acaf2" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareLinking</name></member>
      <member refid="classvrv_1_1_object_1a1bda4d7b151d3ceb49e8dcf2a6b4474e" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareLyrics</name></member>
      <member refid="classvrv_1_1_object_1a93eb8a93ec7ea199f54a59b8139e1a38" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareLyricsEnd</name></member>
      <member refid="classvrv_1_1_object_1af10db2b195d5667b53c982409ecb9500" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PreparePlist</name></member>
      <member refid="classvrv_1_1_object_1a72def6c07065fa48ad7cd844dd4b2ed5" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PreparePointersByLayer</name></member>
      <member refid="classvrv_1_1_object_1a4d2903e69118df1b627cb99ecd036948" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareProcessingLists</name></member>
      <member refid="classvrv_1_1_object_1a1512dc40ee5cbcefd3dd463776e24c0c" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareRpt</name></member>
      <member refid="classvrv_1_1_object_1a70fc6206cd0d6608724d91d03e64d767" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareTimePointing</name></member>
      <member refid="classvrv_1_1_object_1a5ea18a2c77fc31c9a0eee2a948660d5b" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareTimePointingEnd</name></member>
      <member refid="classvrv_1_1_object_1ac052d42c0d724ca5f16192d7398193d3" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareTimeSpanning</name></member>
      <member refid="classvrv_1_1_object_1a8049b8c19d504912d3eb535b8aba95e0" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareTimeSpanningEnd</name></member>
      <member refid="classvrv_1_1_object_1a52209d31a076ecb09fa2081bddea0311" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareTimestamps</name></member>
      <member refid="classvrv_1_1_object_1a9cf511bc173faafb24b5a87149acb897" prot="public" virt="virtual"><scope>vrv::Object</scope><name>PrepareTimestampsEnd</name></member>
      <member refid="classvrv_1_1_object_1ae803b6e421519fabaa32413719cf6ac0" prot="public" virt="virtual"><scope>vrv::Object</scope><name>Process</name></member>
      <member refid="classvrv_1_1_bounding_box_1a74c28d831f2e14aec44a848a961f8b42" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>RectBottomOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a414f972e6f1e4231d61acdd7329eb414" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>RectLeftOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a4802cf9706608398b887afd2ad3e1188" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>RectRightOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae7003f6708e916b7640d4dda5a8a18ef" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>RectTopOverlap</name></member>
      <member refid="classvrv_1_1_object_1aa5bcd61a747583c6ed2b97039129df68" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>RegisterAttClass</name></member>
      <member refid="classvrv_1_1_object_1a172109ee605efdf2c2b23440adef333c" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>RegisterInterface</name></member>
      <member refid="classvrv_1_1_object_1a48ea7a78dfbdf0195235b56679924c76" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>Relinquish</name></member>
      <member refid="classvrv_1_1_object_1a6865cdd4b0cc47a90e1cdf4a2aaa2c2e" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ReorderByXPos</name></member>
      <member refid="classvrv_1_1_object_1a4a7cd0786cfd3119a6dd128c25b67a33" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ReorderByXPos</name></member>
      <member refid="classvrv_1_1_object_1aba32b01b87b8f31455e68c77a3d8ee40" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>ReplaceChild</name></member>
      <member refid="classvrv_1_1_object_1aa1c070a008b1db58a5036c27c2fb8307" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ReplaceDrawingValuesInStaffDef</name></member>
      <member refid="classvrv_1_1_object_1acdbfa3602b2a05ed4c7ba41c77f92b7e" prot="public" virt="virtual"><scope>vrv::Object</scope><name>Reset</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae79b9324168608f36cb71c8ca4174220" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ResetBoundingBox</name></member>
      <member refid="classvrv_1_1_object_1a7cd2ff14f4324ac8fdb54739fac93532" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ResetCachedDrawingX</name></member>
      <member refid="classvrv_1_1_object_1acdcf2a3a18e5b0451d902720ef1408ac" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ResetCachedDrawingY</name></member>
      <member refid="classvrv_1_1_object_1a69ad18810d5249e8bb56be54884d2b50" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ResetDrawing</name></member>
      <member refid="classvrv_1_1_object_1acea387d6c12925339a10f94312d9a82f" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ResetHorizontalAlignment</name></member>
      <member refid="classvrv_1_1_object_1a5d22ebda01e0b254c13d558f5ffdb098" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>ResetParent</name></member>
      <member refid="classvrv_1_1_object_1aadeb99ea27241a64bf942e469a04445e" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>ResetUuid</name></member>
      <member refid="classvrv_1_1_object_1ab5f42b79ff1721982121a8a9c493a8c1" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ResetVerticalAlignment</name></member>
      <member refid="classvrv_1_1_object_1a93b5fe054b2d26fe91ff50a5861fe08c" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ResolveMIDITies</name></member>
      <member refid="classvrv_1_1_object_1a0858d6ed6414c5c4740ca65b773ca7bb" prot="private" virt="non-virtual"><scope>vrv::Object</scope><name>s_objectCounter</name></member>
      <member refid="classvrv_1_1_object_1a74097c855ed070b02fd06810207d0ac0" prot="public" virt="virtual"><scope>vrv::Object</scope><name>Save</name></member>
      <member refid="classvrv_1_1_object_1a8ec6663670b4b6522cb4892babf36742" prot="public" virt="virtual"><scope>vrv::Object</scope><name>Save</name></member>
      <member refid="classvrv_1_1_object_1ad628dce30da1167aa84313ea7a4f5612" prot="public" virt="virtual"><scope>vrv::Object</scope><name>SaveEnd</name></member>
      <member refid="classvrv_1_1_object_1ac45facd18e6a4ac0b8ea7483e228aa0f" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ScoreDefOptimize</name></member>
      <member refid="classvrv_1_1_object_1a286c8a894a3743271f63924da2f610e7" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ScoreDefOptimizeEnd</name></member>
      <member refid="classvrv_1_1_object_1a0b4cf8509ee8d9876d163b309e7da1a1" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ScoreDefSetCurrent</name></member>
      <member refid="classvrv_1_1_object_1a71c3367e232d634a71c2d346dfd9f3d1" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ScoreDefSetGrpSym</name></member>
      <member refid="classvrv_1_1_object_1ac063e5c113b30453f094ba3589a534ca" prot="public" virt="virtual"><scope>vrv::Object</scope><name>ScoreDefUnsetCurrent</name></member>
      <member refid="classvrv_1_1_object_1a8c269609416ebdb3b948df8aac3134e1" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>SeedUuid</name></member>
      <member refid="classvrv_1_1_object_1a1009aeee85e83052adcbcd8dc2af050d" prot="public" virt="virtual"><scope>vrv::Object</scope><name>SetAlignmentPitchPos</name></member>
      <member refid="classvrv_1_1_object_1a3a00186419e955ee211440092e955f14" prot="public" virt="virtual"><scope>vrv::Object</scope><name>SetAlignmentXPos</name></member>
      <member refid="classvrv_1_1_object_1a9bc335e3bc5405f5dbaae757b5629996" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>SetAsReferenceObject</name></member>
      <member refid="classvrv_1_1_bounding_box_1abc4feb5675ff672b2e3a94b4a65403b5" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>SetBoundingBoxGlyph</name></member>
      <member refid="classvrv_1_1_object_1a3a95154b135f78a323dafdfec2a76e2d" prot="public" virt="virtual"><scope>vrv::Object</scope><name>SetCautionaryScoreDef</name></member>
      <member refid="classvrv_1_1_object_1af0db1dd88b7d2f6c9068934312ce86c8" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>SetClosingComment</name></member>
      <member refid="classvrv_1_1_object_1a3b47aa3445a48e681db41607cedcd4b4" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>SetComment</name></member>
      <member refid="classvrv_1_1_bounding_box_1ade8f7ad2283b156a2c7934c4055bd8bf" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>SetEmptyBB</name></member>
      <member refid="classvrv_1_1_object_1a45993175bb6a94cbbd0a5b69251e25eb" prot="public" virt="virtual"><scope>vrv::Object</scope><name>SetOverflowBBoxes</name></member>
      <member refid="classvrv_1_1_object_1a70161897776b5acbaf0dddaa1ddd9def" prot="public" virt="virtual"><scope>vrv::Object</scope><name>SetOverflowBBoxesEnd</name></member>
      <member refid="classvrv_1_1_object_1a9f30aa6a8185b260943003a08980d376" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>SetParent</name></member>
      <member refid="classvrv_1_1_object_1a28b81f899cf3c244799da6f49ae3dd34" prot="public" virt="virtual"><scope>vrv::Object</scope><name>SetStaffDefRedrawFlags</name></member>
      <member refid="classvrv_1_1_object_1a190abc310da990f676c931d272bbb434" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>SetUuid</name></member>
      <member refid="classvrv_1_1_object_1a6c529b9574392b6c2baeaf8470e2a989" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>sortByUlx</name></member>
      <member refid="classvrv_1_1_object_1aa8caf0942b1ff1c02f6f8e879397ca21" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>SortChildren</name></member>
      <member refid="classvrv_1_1_object_1ac97807a0dabfdf0d1d483f7f3e9427f9" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>StableSort</name></member>
      <member refid="classvrv_1_1_bounding_box_1a6a5b0a558c2799d3216a62a352eec938" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>Swap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a316a3efda8b19590914f3c4e736d2323" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>SwapPoints</name></member>
      <member refid="classvrv_1_1_object_1af4f98c391b356cf51597e4777bf31185" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>SwapUuid</name></member>
      <member refid="classvrv_1_1_object_1a0ee02f42628df9898a57349899c1ba3e" prot="public" virt="virtual"><scope>vrv::Object</scope><name>Transpose</name></member>
      <member refid="classvrv_1_1_object_1a84120019fd68f6d7015f6765d7114a7b" prot="public" virt="virtual"><scope>vrv::Object</scope><name>UnCastOff</name></member>
      <member refid="classvrv_1_1_bounding_box_1a8cc083afb0d6f3a68d60fae9569645b8" prot="public" virt="virtual"><scope>vrv::Object</scope><name>UpdateContentBBoxX</name></member>
      <member refid="classvrv_1_1_bounding_box_1af90ec4f1a3393d9c89473f5a2b146b5b" prot="public" virt="virtual"><scope>vrv::Object</scope><name>UpdateContentBBoxY</name></member>
      <member refid="classvrv_1_1_bounding_box_1a5b5db30b70a0c954d37ae58e523dbead" prot="public" virt="virtual"><scope>vrv::Object</scope><name>UpdateSelfBBoxX</name></member>
      <member refid="classvrv_1_1_bounding_box_1a029f007d1150f88d906b318b17ecdccc" prot="public" virt="virtual"><scope>vrv::Object</scope><name>UpdateSelfBBoxY</name></member>
      <member refid="classvrv_1_1_bounding_box_1aa10dbbf04b3707900490d1ced0ea0418" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>VerticalBottomOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1acdb36f4007fc88d79a81eed3b440c536" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>VerticalContentOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1ab9bbe1447c1e512c9154825086f34aef" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>VerticalSelfOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a85b3cd46765c07b3d16ed7933feaddff" prot="public" virt="non-virtual"><scope>vrv::Object</scope><name>VerticalTopOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a9f87f4407c2c8d88ab5e4eacfe1ac1f0" prot="public" virt="virtual"><scope>vrv::Object</scope><name>~BoundingBox</name></member>
      <member refid="classvrv_1_1_object_1a350424e9cf31d3b7d1bb5f5754944401" prot="public" virt="virtual"><scope>vrv::Object</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
