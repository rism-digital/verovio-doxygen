<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="editortoolkit__neume_8h" kind="file" language="C++">
    <compoundname>editortoolkit_neume.h</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes refid="doc_8h" local="yes">doc.h</includes>
    <includes refid="editortoolkit_8h" local="yes">editortoolkit.h</includes>
    <includes refid="view_8h" local="yes">view.h</includes>
    <includes refid="zone_8h" local="yes">zone.h</includes>
    <includes local="yes">jsonxx.h</includes>
    <incdepgraph>
      <node id="23">
        <label>list</label>
      </node>
      <node id="52">
        <label>metersiggrp.h</label>
        <link refid="metersiggrp_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>scoredef.h</label>
        <link refid="scoredef_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>atts_analytical.h</label>
      </node>
      <node id="58">
        <label>editortoolkit.h</label>
        <link refid="editortoolkit_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>boundingbox.h</label>
        <link refid="boundingbox_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdarg.h</label>
      </node>
      <node id="22">
        <label>functional</label>
      </node>
      <node id="50">
        <label>atts_mensural.h</label>
      </node>
      <node id="28">
        <label>assert.h</label>
      </node>
      <node id="34">
        <label>iterator</label>
      </node>
      <node id="10">
        <label>atttypes.h</label>
      </node>
      <node id="41">
        <label>clef.h</label>
        <link refid="clef_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>atts_visual.h</label>
      </node>
      <node id="43">
        <label>layerelement.h</label>
        <link refid="layerelement_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cmath</label>
      </node>
      <node id="51">
        <label>metersig.h</label>
        <link refid="metersig_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>options.h</label>
        <link refid="options_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>editortoolkit_neume.h</label>
        <link refid="editortoolkit__neume_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="26">
        <label>jsonxx.h</label>
      </node>
      <node id="6">
        <label>devicecontextbase.h</label>
        <link refid="devicecontextbase_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>zone.h</label>
        <link refid="zone_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>smufl.h</label>
        <link refid="smufl_8h_source"/>
      </node>
      <node id="53">
        <label>atts_cmn.h</label>
      </node>
      <node id="54">
        <label>scoredefinterface.h</label>
        <link refid="scoredefinterface_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>attdef.h</label>
        <link refid="attdef_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>atts_shared.h</label>
      </node>
      <node id="46">
        <label>linkinginterface.h</label>
        <link refid="linkinginterface_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>textelement.h</label>
        <link refid="textelement_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>mensur.h</label>
        <link refid="mensur_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ctime</label>
      </node>
      <node id="37">
        <label>optional</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="17">
        <label>expansionmap.h</label>
        <link refid="expansionmap_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>utility</label>
      </node>
      <node id="42">
        <label>atts_externalsymbols.h</label>
      </node>
      <node id="45">
        <label>atts_facsimile.h</label>
      </node>
      <node id="44">
        <label>facsimileinterface.h</label>
        <link refid="facsimileinterface_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>atts_midi.h</label>
      </node>
      <node id="31">
        <label>object.h</label>
        <link refid="object_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>math.h</label>
      </node>
      <node id="27">
        <label>facsimile.h</label>
        <link refid="facsimile_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>cstdlib</label>
      </node>
      <node id="16">
        <label>sys/time.h</label>
      </node>
      <node id="47">
        <label>keysig.h</label>
        <link refid="keysig_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>attalternates.h</label>
        <link refid="attalternates_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>doc.h</label>
        <link refid="doc_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>attclasses.h</label>
      </node>
      <node id="36">
        <label>view.h</label>
        <link refid="view_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>atts_mei.h</label>
      </node>
      <node id="11">
        <label>vrv.h</label>
        <link refid="vrv_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>set</label>
      </node>
      <node id="21">
        <label>algorithm</label>
      </node>
      <node id="15">
        <label>stdio.h</label>
      </node>
      <node id="40">
        <label>drawinginterface.h</label>
        <link refid="drawinginterface_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cstring</label>
      </node>
      <node id="20">
        <label>vrvdef.h</label>
        <link refid="vrvdef_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classvrv_1_1_editor_toolkit_neume" prot="public">vrv::EditorToolkitNeume</innerclass>
    <innerclass refid="structvrv_1_1_closest_b_b" prot="public">vrv::ClosestBB</innerclass>
    <innerclass refid="structvrv_1_1_staff_sort" prot="public">vrv::StaffSort</innerclass>
    <innernamespace refid="namespacevrv">vrv</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Name:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>editortoolkit_neume.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Juliette<sp/>Regimbal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>04/06/2019</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Authors<sp/>and<sp/>others.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__VRV_EDITOR_TOOLKIT_NEUME_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__VRV_EDITOR_TOOLKIT_NEUME_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;doc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;editortoolkit.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;view.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zone.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jsonxx.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vrv<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EditorToolkitNeume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classvrv_1_1_editor_toolkit_neume" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvrv_1_1_editor_toolkit_neume" kindref="compound">EditorToolkitNeume</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_editor_toolkit" kindref="compound">EditorToolkit</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_editor_toolkit_neume" kindref="compound">EditorToolkitNeume</ref>(<ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/><ref refid="classvrv_1_1_view" kindref="compound">View</ref><sp/>*view)<sp/>:<sp/><ref refid="classvrv_1_1_editor_toolkit" kindref="compound">EditorToolkit</ref>(doc,<sp/>view)<sp/>{}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_editor_toolkit_neume_1a52b69805e71ae4e855dba90cdd1cadee" kindref="member">ParseEditorAction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;json_editorAction);</highlight></codeline>
<codeline lineno="34" refid="classvrv_1_1_editor_toolkit_neume_1af12a007a759c5fbc0d4308d384cf3545" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classvrv_1_1_editor_toolkit_neume_1af12a007a759c5fbc0d4308d384cf3545" kindref="member">EditInfo</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_infoObject.json();<sp/>};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_editor_toolkit_neume_1a43ace3311204fc2ae9adc611b103a947" kindref="member">Chain</ref>(jsonxx::Array<sp/>actions);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Drag(std::string<sp/>elementId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Insert(std::string<sp/>elementType,<sp/>std::string<sp/>staffId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ulx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uly,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lrx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lry,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;std::string,<sp/>std::string&gt;&gt;<sp/>attributes);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Merge(std::vector&lt;std::string&gt;<sp/>elementIds);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Set(std::string<sp/>elementId,<sp/>std::string<sp/>attrType,<sp/>std::string<sp/>attrValue);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SetText(std::string<sp/>elementId,<sp/>std::string<sp/>text);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SetClef(std::string<sp/>elementId,<sp/>std::string<sp/>shape);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Split(std::string<sp/>elementId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Remove(std::string<sp/>elementId);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Resize(std::string<sp/>elementId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ulx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uly,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lrx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lry,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>resize<sp/>=<sp/>NAN);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Group(std::string<sp/>groupType,<sp/>std::vector&lt;std::string&gt;<sp/>elementIds);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Ungroup(std::string<sp/>groupType,<sp/>std::vector&lt;std::string&gt;<sp/>elementIds);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ChangeGroup(std::string<sp/>elementId,<sp/>std::string<sp/>contour);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ToggleLigature(std::vector&lt;std::string&gt;<sp/>elementIds,<sp/>std::string<sp/>isLigature);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ChangeStaff(std::string<sp/>elementId);</highlight></codeline>
<codeline lineno="57"><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_editor_toolkit_neume_1aae7ed26ed5e4663e0828b8d41b2de256" kindref="member">ParseDragAction</ref>(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*elementId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseInsertAction(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*elementType,<sp/>std::string<sp/>*startId,<sp/>std::string<sp/>*endId);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseInsertAction(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*elementType,<sp/>std::string<sp/>*staffId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ulx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*uly,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lrx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lry,<sp/>std::vector&lt;std::pair&lt;std::string,<sp/>std::string&gt;&gt;<sp/>*attributes);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseMergeAction(jsonxx::Object<sp/>param,<sp/>std::vector&lt;std::string&gt;<sp/>*elementIds);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseSetAction(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*elementId,<sp/>std::string<sp/>*attrType,<sp/>std::string<sp/>*attrValue);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseSetTextAction(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*elementId,<sp/>std::string<sp/>*text);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseSetClefAction(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*elementId,<sp/>std::string<sp/>*shape);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseSplitAction(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*elementId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseRemoveAction(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*elementId);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseResizeAction(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*elementId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ulx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*uly,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lrx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lry);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseResizeRotateAction(</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsonxx::Object<sp/>param,<sp/>std::string<sp/>*elementId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ulx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*uly,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lrx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lry,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*rotate);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseGroupAction(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*groupType,<sp/>std::vector&lt;std::string&gt;<sp/>*elementIds);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseUngroupAction(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*groupType,<sp/>std::vector&lt;std::string&gt;<sp/>*elementIds);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseChangeGroupAction(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*elementId,<sp/>std::string<sp/>*contour);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseToggleLigatureAction(jsonxx::Object<sp/>param,<sp/>std::vector&lt;std::string&gt;<sp/>*elementIds,<sp/>std::string<sp/>*isLigature);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseChangeStaffAction(jsonxx::Object<sp/>param,<sp/>std::string<sp/>*elementId);</highlight></codeline>
<codeline lineno="81"></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_editor_toolkit_neume_1aa32bf021d3d31ec9ecb894a12a2ea729" kindref="member">AdjustPitchFromPosition</ref>(<ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*obj,<sp/><ref refid="classvrv_1_1_clef" kindref="compound">Clef</ref><sp/>*clef<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AdjustClefLineFromPosition(<ref refid="classvrv_1_1_clef" kindref="compound">Clef</ref><sp/>*clef,<sp/><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref><sp/>*staff<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>jsonxx::Object<sp/>m_infoObject;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Comparator<sp/>structs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>be<sp/>used<sp/>with<sp/>std::sort<sp/>to<sp/>find<sp/>the<sp/>object<sp/>with<sp/>a<sp/>closest<sp/>bounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>box<sp/>to<sp/>a<sp/>point<sp/>defined<sp/>by<sp/>the<sp/>x<sp/>and<sp/>y<sp/>parameters<sp/>of<sp/>ClosestBB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="structvrv_1_1_closest_b_b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrv_1_1_closest_b_b" kindref="compound">ClosestBB</ref><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distanceToBB(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ulx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uly,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lrx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lry,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rotate<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>(x<sp/>-<sp/>ulx)<sp/>*<sp/>tan(rotate<sp/>*<sp/>M_PI<sp/>/<sp/>180.0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uly<sp/>=<sp/>uly<sp/>-<sp/>offset;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lry<sp/>=<sp/>lry<sp/>-<sp/>offset;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xDiff<sp/>=<sp/>std::max((ulx<sp/>&gt;<sp/>x<sp/>?<sp/>ulx<sp/>-<sp/>x<sp/>:<sp/>0),<sp/>(x<sp/>&gt;<sp/>lrx<sp/>?<sp/>x<sp/>-<sp/>lrx<sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yDiff<sp/>=<sp/>std::max((uly<sp/>&gt;<sp/>y<sp/>?<sp/>uly<sp/>-<sp/>y<sp/>:<sp/>0),<sp/>(y<sp/>&gt;<sp/>lry<sp/>?<sp/>y<sp/>-<sp/>lry<sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(xDiff<sp/>*<sp/>xDiff<sp/>+<sp/>yDiff<sp/>*<sp/>yDiff);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(<ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*a,<sp/><ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*b)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a-&gt;GetFacsimileInterface()<sp/>||<sp/>!b-&gt;GetFacsimileInterface())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_zone" kindref="compound">Zone</ref><sp/>*zoneA<sp/>=<sp/>a-&gt;GetFacsimileInterface()-&gt;<ref refid="classvrv_1_1_facsimile_interface_1a3ca53c1bfe956ae1bfbb0a77f3c672b0" kindref="member">GetZone</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_zone" kindref="compound">Zone</ref><sp/>*zoneB<sp/>=<sp/>b-&gt;GetFacsimileInterface()-&gt;<ref refid="classvrv_1_1_facsimile_interface_1a3ca53c1bfe956ae1bfbb0a77f3c672b0" kindref="member">GetZone</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distA</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>distanceToBB(zoneA-&gt;GetUlx(),<sp/>zoneA-&gt;GetUly(),<sp/>zoneA-&gt;GetLrx(),<sp/>zoneA-&gt;GetLry(),<sp/>zoneA-&gt;GetRotate());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distB</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>distanceToBB(zoneB-&gt;GetUlx(),<sp/>zoneB-&gt;GetUly(),<sp/>zoneB-&gt;GetLrx(),<sp/>zoneB-&gt;GetLry(),<sp/>zoneB-&gt;GetRotate());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(distA<sp/>&lt;<sp/>distB);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal">};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>be<sp/>used<sp/>with<sp/>std::stable_sort<sp/>to<sp/>find<sp/>the<sp/>position<sp/>to<sp/>insert<sp/>a<sp/>new<sp/>staff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="structvrv_1_1_staff_sort" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrv_1_1_staff_sort" kindref="compound">StaffSort</ref><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>staves<sp/>left-to-right<sp/>and<sp/>top-to-bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>by<sp/>y<sp/>if<sp/>there<sp/>is<sp/>no<sp/>intersection,<sp/>by<sp/>x<sp/>if<sp/>there<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(<ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*a,<sp/><ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*b)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a-&gt;GetFacsimileInterface()<sp/>||<sp/>!b-&gt;GetFacsimileInterface())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_zone" kindref="compound">Zone</ref><sp/>*zoneA<sp/>=<sp/>a-&gt;GetFacsimileInterface()-&gt;<ref refid="classvrv_1_1_facsimile_interface_1a3ca53c1bfe956ae1bfbb0a77f3c672b0" kindref="member">GetZone</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_zone" kindref="compound">Zone</ref><sp/>*zoneB<sp/>=<sp/>b-&gt;GetFacsimileInterface()-&gt;<ref refid="classvrv_1_1_facsimile_interface_1a3ca53c1bfe956ae1bfbb0a77f3c672b0" kindref="member">GetZone</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aLowest,<sp/>bLowest,<sp/>aHighest,<sp/>bHighest;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aLowest<sp/>=<sp/>zoneA-&gt;GetRotate()<sp/>&lt;<sp/>0</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>zoneA-&gt;GetLry()</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>zoneA-&gt;GetLry()<sp/>+<sp/>(zoneA-&gt;GetLrx()<sp/>-<sp/>zoneA-&gt;GetUlx())<sp/>*<sp/>tan(zoneA-&gt;GetRotate()<sp/>*<sp/>M_PI<sp/>/<sp/>180.0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aHighest<sp/>=<sp/>zoneA-&gt;GetRotate()<sp/>&lt;<sp/>0</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>zoneA-&gt;GetUly()</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>zoneA-&gt;GetUly()<sp/>-<sp/>(zoneA-&gt;GetLrx()<sp/>-<sp/>zoneA-&gt;GetUlx())<sp/>*<sp/>tan(zoneA-&gt;GetRotate()<sp/>*<sp/>M_PI<sp/>/<sp/>180.0);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bLowest<sp/>=<sp/>zoneB-&gt;GetRotate()<sp/>&lt;<sp/>0</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>zoneB-&gt;GetLry()</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>zoneB-&gt;GetLry()<sp/>+<sp/>(zoneB-&gt;GetLrx()<sp/>-<sp/>zoneB-&gt;GetUlx())<sp/>*<sp/>tan(zoneB-&gt;GetRotate()<sp/>*<sp/>M_PI<sp/>/<sp/>180.0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bHighest<sp/>=<sp/>zoneB-&gt;GetRotate()<sp/>&lt;<sp/>0</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>zoneB-&gt;GetUly()</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>zoneB-&gt;GetUly()<sp/>-<sp/>(zoneB-&gt;GetLrx()<sp/>-<sp/>zoneB-&gt;GetUlx())<sp/>*<sp/>tan(zoneB-&gt;GetRotate()<sp/>*<sp/>M_PI<sp/>/<sp/>180.0);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>y<sp/>intersection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((aLowest<sp/>&lt;=<sp/>bLowest<sp/>&amp;&amp;<sp/>aLowest<sp/>&gt;=<sp/>bHighest)<sp/>||<sp/>(aHighest<sp/>&lt;=<sp/>bLowest<sp/>&amp;&amp;<sp/>aHighest<sp/>&gt;=<sp/>bHighest)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(bLowest<sp/>&lt;=<sp/>aLowest<sp/>&amp;&amp;<sp/>bLowest<sp/>&gt;=<sp/>aHighest)<sp/>||<sp/>(bHighest<sp/>&lt;=<sp/>aLowest<sp/>&amp;&amp;<sp/>bHighest<sp/>&gt;=<sp/>aHighest))<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sort<sp/>by<sp/>x<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(zoneA-&gt;GetUlx()<sp/>&lt;<sp/>zoneB-&gt;GetUlx());</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>no<sp/>intersection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(zoneA-&gt;GetUly()<sp/>&lt;<sp/>zoneB-&gt;GetUly());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vrv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/verovio/verovio/include/vrv/editortoolkit_neume.h"/>
  </compounddef>
</doxygen>
