<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvrv_1_1_toolkit" kind="class" language="C++" prot="public">
    <compoundname>vrv::Toolkit</compoundname>
      <sectiondef kind="user-defined">
      <header>Constructors and destructors</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ad009ed5b8852f67843a34c4b6fd1e3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::Toolkit::Toolkit</definition>
        <argsstring>(bool initFont=true)</argsstring>
        <name>Toolkit</name>
        <param>
          <type>bool</type>
          <declname>initFont</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initFont</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to false, resource path is not initialized and SetResourcePath will have to be called explicitely </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="66" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a97d14fc376f8532765955015b26a6811" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vrv::Toolkit::~Toolkit</definition>
        <argsstring>()</argsstring>
        <name>~Toolkit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="67" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Utility methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aaf003d6419a475cd62984eab04e72b9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetUuid</definition>
        <argsstring>()</argsstring>
        <name>GetUuid</name>
        <briefdescription>
<para>Return the ID of the <ref refid="classvrv_1_1_toolkit" kindref="compound">Toolkit</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The ID as as string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="83" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aed5c67aae6d92d7c8d1d68edf5a5ae65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetResourcePath</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>SetResourcePath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Set the resource path for the <ref refid="classvrv_1_1_toolkit" kindref="compound">Toolkit</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para>This method needs to be called if the constructor had initFont=false or if the resource path needs to be changed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the resource directory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the resources was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="94" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a0dacf26288d829c51737cbca389c7117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetLog</definition>
        <argsstring>()</argsstring>
        <name>GetLog</name>
        <briefdescription>
<para>Get the log content for the latest operation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The log content as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="101" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a293b23b38c10be4da8b38c4b3a769d1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetVersion</definition>
        <argsstring>()</argsstring>
        <name>GetVersion</name>
        <briefdescription>
<para>Return the version number. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the version number as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="108" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Loading methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a3859f9341d415376b7d8f11a1aa8e352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>LoadFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Load a file from the file system. </para>
        </briefdescription>
        <detaileddescription>
<para>Previously convert UTF16 files to UTF8 or extract files from MusicXML compressed files.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename to be loaded </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="127" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a9a08fd8e89da6c2c709eaae69e28b2b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadData</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>LoadData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Load a string data with the type previously specified in the options. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, the methods try to auto-detect the type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A string with the data (e.g., MEI data) to be loaded </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the data was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="137" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aeae2ad736af0f0d436c9131745057556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadZipDataBase64</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>LoadZipDataBase64</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Load a MusicXML compressed file passed as base64 encoded string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A ZIP file as a base64 encoded string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the data was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="145" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1abf4167617faed8347a7da3291e927e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadZipDataBuffer</definition>
        <argsstring>(const unsigned char *data, int length)</argsstring>
        <name>LoadZipDataBuffer</name>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Load a MusicXML compressed file passed as a buffer of bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A ZIP file as a buffer of bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the data buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the data was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="154" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1af24ccae4968a35e71b5fd82b70ee086c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetPageCount</definition>
        <argsstring>()</argsstring>
        <name>GetPageCount</name>
        <briefdescription>
<para>Return the number of pages in the loaded document. </para>
        </briefdescription>
        <detaileddescription>
<para>The number of pages depends one the page size and if encoded layout was taken into account or not.</para>
<para><simplesect kind="return"><para>The number of pages </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="163" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getter and setter for options</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aebe87c2bdaa8388550be5529a1c72163" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetOptions</definition>
        <argsstring>(bool defaultValues) const</argsstring>
        <name>GetOptions</name>
        <param>
          <type>bool</type>
          <declname>defaultValues</declname>
        </param>
        <briefdescription>
<para>Return a dictionary of all the options. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>defaultValues</parametername>
</parameternamelist>
<parameterdescription>
<para>True for getting the default values and false for the current values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="180" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a2ca1aa7fcc49d2b8b7717dec136c5e86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetAvailableOptions</definition>
        <argsstring>() const</argsstring>
        <name>GetAvailableOptions</name>
        <briefdescription>
<para>Return all available options grouped by category. </para>
        </briefdescription>
        <detaileddescription>
<para>For each option, returns the type, the default value, and the minimum and maximum value (when available)</para>
<para><simplesect kind="return"><para>A stringified JSON object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="189" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a09c79a752dd0b9e752506d9bcf583ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetOptions</definition>
        <argsstring>(const std::string &amp;jsonOptions)</argsstring>
        <name>SetOptions</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
        </param>
        <briefdescription>
<para>Set option values. </para>
        </briefdescription>
        <detaileddescription>
<para>The name of each option to be set is to be given as JSON key.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>A stringified JSON objects with the output options </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the options were successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="199" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a68c3c9a776a1ec7e9734bb7540864e49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetOption</definition>
        <argsstring>(const std::string &amp;option, bool defaultValue=false) const</argsstring>
        <name>GetOption</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>option</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>defaultValue</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the value for an option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>True to get the default value of the option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The option value as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="208" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a580fc9fe7eb90047c8ebbe576c96697e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetOption</definition>
        <argsstring>(const std::string &amp;option, const std::string &amp;value)</argsstring>
        <name>SetOption</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>option</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the value for an option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The option value as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the option was successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="217" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a96fbf91f6688a0d81886a4a25254dc25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::ResetOptions</definition>
        <argsstring>()</argsstring>
        <name>ResetOptions</name>
        <briefdescription>
<para>Reset all options to default values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="222" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a53b48c97c58b0da6e6083193ebd966e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetScale</definition>
        <argsstring>(int scale)</argsstring>
        <name>SetScale</name>
        <param>
          <type>int</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Set the scale option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the scale value as integer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the option was successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="230" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a321e0a62f5f15b1c5cd522fb0e514d3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetScale</definition>
        <argsstring>()</argsstring>
        <name>GetScale</name>
        <briefdescription>
<para>Get the scale option. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the scale option as integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="237" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1abbe738f9285b31845ea71cb322d9a581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetInputFrom</definition>
        <argsstring>(std::string const &amp;inputFrom)</argsstring>
        <name>SetInputFrom</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>inputFrom</declname>
        </param>
        <briefdescription>
<para>Set the input from option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>the input from value as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the option was successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="245" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a765716f5361637b41914ee6b74e39ac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetOutputTo</definition>
        <argsstring>(std::string const &amp;outputTo)</argsstring>
        <name>SetOutputTo</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outputTo</declname>
        </param>
        <briefdescription>
<para>Set the output to option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the output to value as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the option was successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="253" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Experimental editor methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a25adbe86763cca1c51603b9e4c4831f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::Edit</definition>
        <argsstring>(const std::string &amp;editorAction)</argsstring>
        <name>Edit</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>editorAction</declname>
        </param>
        <briefdescription>
<para>Edit the MEI data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>editorAction</parametername>
</parameternamelist>
<parameterdescription>
<para>The editor actions as a stringified JSON object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the edit action was successfully applied </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="270" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a369f22c61679d97bdd05c0689d6f0a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::EditInfo</definition>
        <argsstring>()</argsstring>
        <name>EditInfo</name>
        <briefdescription>
<para>Return the editor status. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The editor status as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="277" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Rendering methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a07da382b8c69698f19ff7e3136fd0813" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::RenderToSVG</definition>
        <argsstring>(int pageNo=1, bool xmlDeclaration=false)</argsstring>
        <name>RenderToSVG</name>
        <param>
          <type>int</type>
          <declname>pageNo</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>xmlDeclaration</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Render a page to SVG. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pageNo</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to render (1-based) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmlDeclaration</parametername>
</parameternamelist>
<parameterdescription>
<para>True for including the xml declaration in the SVG output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The SVG page as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="295" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a3ff0a3aa8deeef77c291d496ee0d2959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToSVGFile</definition>
        <argsstring>(const std::string &amp;filename, int pageNo=1)</argsstring>
        <name>RenderToSVGFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pageNo</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Render a page to SVG and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para>This methods is not available in the JavaScript version of the toolkit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="306" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a24988e48cc901661fd4db03ec9f756e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::RenderToMIDI</definition>
        <argsstring>()</argsstring>
        <name>RenderToMIDI</name>
        <briefdescription>
<para>Render the document to MIDI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A MIDI file as a base64 encoded string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="313" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a298894afff860e0675f2ca3b199fda98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToMIDIFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>RenderToMIDIFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Render a document to MIDI and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para>This methods is not available in the JavaScript version of the toolkit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="323" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a572174dc1e44773a2ab83a0ac79b479c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::RenderToPAE</definition>
        <argsstring>()</argsstring>
        <name>RenderToPAE</name>
        <briefdescription>
<para>Render a document to Plaine and Easie. </para>
        </briefdescription>
        <detaileddescription>
<para>Only the top staff / layer is exported.</para>
<para><simplesect kind="return"><para>The PAE as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="332" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a4360e00f3093a9360bf231e3d7f48c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToPAEFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>RenderToPAEFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Render a document to Plaine and Easie and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para>Only the top staff / layer is exported. This methods is not available in the JavaScript version of the toolkit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="343" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a4172ff70b76b47701fdab68c7ee2f12d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::RenderToTimemap</definition>
        <argsstring>()</argsstring>
        <name>RenderToTimemap</name>
        <briefdescription>
<para>Render a document to a timemap. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The timemap as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="350" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ae007856d580be07e60aeb52efb826a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToTimemapFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>RenderToTimemapFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Render a document to timemap and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para>This methods is not available in the JavaScript version of the toolkit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="360" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Humdrum related methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a1b23b93998cb39e2016130b01d1db1b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetHumdrum</definition>
        <argsstring>()</argsstring>
        <name>GetHumdrum</name>
        <briefdescription>
<para>Get the humdrum buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The humdrum buffer as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="376" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1adf47bbe710d3902f241db376002f55cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::ConvertMEIToHumdrum</definition>
        <argsstring>(const std::string &amp;meiData)</argsstring>
        <name>ConvertMEIToHumdrum</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>meiData</declname>
        </param>
        <briefdescription>
<para>Convert MEI data into Humdrum data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Humdrum data as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="383" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a8a411c7fe22ffb9df4be52b582af550e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::ConvertHumdrumToHumdrum</definition>
        <argsstring>(const std::string &amp;humdrumData)</argsstring>
        <name>ConvertHumdrumToHumdrum</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>humdrumData</declname>
        </param>
        <briefdescription>
<para>Filter Humdrum data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Humdrum data as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="390" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ade214f7c4d835643aa13046d8ae000ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::GetHumdrumFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>GetHumdrumFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Write the humdrum buffer to the file. </para>
        </briefdescription>
        <detaileddescription>
<para>This methods is not available in the JavaScript version of the toolkit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="400" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MEI related methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a32c3ff9da41c302c83c6f8d52fc11467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetMEI</definition>
        <argsstring>(const std::string &amp;jsonOptions=&quot;&quot;)</argsstring>
        <name>GetMEI</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Get the MEI as a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>A stringified JSON object with the output options pageNo: integer; (1-based), all pages if none (or 0) specified; scoreBased: true or false; true by default; removeIds: true or false; false by default - remove all @xml:id not used in the data; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="419" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a0206f317ac7ebe3c61df606c8afcd4ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SaveFile</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;jsonOptions=&quot;&quot;)</argsstring>
        <name>SaveFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Get the MEI and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para>This methods is not available in the JavaScript version of the toolkit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The output filename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jsonOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>A stringified JSON object with the output options </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file was successfully written </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="430" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Data access methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a4618bafecb91784806f78751ea6b3f42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetElementsAtTime</definition>
        <argsstring>(int millisec)</argsstring>
        <name>GetElementsAtTime</name>
        <param>
          <type>int</type>
          <declname>millisec</declname>
        </param>
        <briefdescription>
<para>Returns array of IDs of elements being currently played. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>millisec</parametername>
</parameternamelist>
<parameterdescription>
<para>The time in milliseconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with the page and notes being played </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="447" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a234616d8b4ab54ec1b7efb79e5ae464d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetPageWithElement</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetPageWithElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Return the page on which the element is the ID (xml:id) is rendered. </para>
        </briefdescription>
        <detaileddescription>
<para>This takes into account the current layout options.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the page number (1-based) where the element is (0 if not found) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="457" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1acde5671467b4de6cacd55e7e8be87e93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetElementAttr</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetElementAttr</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Return element attributes as a JSON string. </para>
        </briefdescription>
        <detaileddescription>
<para>The attributes returned include the ones not supported by Verovio</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with all attributes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="467" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ab20d86aba8f534079fdf01dd72e97178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetNotatedIdForElement</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetNotatedIdForElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Returns the ID string of the notated (the original) element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with all IDs </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="475" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1acbd4bf8bb87e10aa286034d8fe204469" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetExpansionIdsForElement</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetExpansionIdsForElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Returns a vector of ID strings of all elements (the notated and the expanded) for a given element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with all IDs </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="483" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ab29688374542c0d3fb3cf5007bd23ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetTimeForElement</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetTimeForElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Return the time at which the element is the ID (xml:id) is played. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classvrv_1_1_toolkit_1a24988e48cc901661fd4db03ec9f756e9" kindref="member">RenderToMIDI()</ref> must be called prior to using this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The time in milliseconds </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="493" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a1b7c6ef82b1ec90af16f8f32da24dd5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetMIDIValuesForElement</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetMIDIValuesForElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Return MIDI values of the element with the ID (xml:id) </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classvrv_1_1_toolkit_1a24988e48cc901661fd4db03ec9f756e9" kindref="member">RenderToMIDI()</ref> must be called prior to using this method</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with the MIDI values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="503" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ad79d6ace65df36810f0d84e774aee05d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetTimesForElement</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetTimesForElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Return a JSON object string with the following key values for a given note. </para>
        </briefdescription>
        <detaileddescription>
<para>Return scoreTimeOnset, scoreTimeOffset, scoreTimeTiedDuration, realTimeOnsetMilliseconds, realTimeOffsetMilliseconds, realTimeTiedDurationMilliseconds.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with the values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="514" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Layout related methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a19431c36d29a2301ee946da2cd01946e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::RedoLayout</definition>
        <argsstring>()</argsstring>
        <name>RedoLayout</name>
        <briefdescription>
<para>Redo the layout of the loaded data. </para>
        </briefdescription>
        <detaileddescription>
<para>This can be called once the rendering option were changed, for example with a new page (sceen) height or a new zoom level. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="529" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aff4b4b830b5859bf07d19e8ca63d2335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::RedoPagePitchPosLayout</definition>
        <argsstring>()</argsstring>
        <name>RedoPagePitchPosLayout</name>
        <briefdescription>
<para>Redo the layout of the pitch postitions of the current drawing page. </para>
        </briefdescription>
        <detaileddescription>
<para>Only the note vertical positions are recalculated with this method. <ref refid="classvrv_1_1_toolkit_1a19431c36d29a2301ee946da2cd01946e" kindref="member">RedoLayout()</ref> needs to be called for a full recalculation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="537" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Public methods that are not listed in the documentation</header>
      <memberdef kind="function" id="group__nodoc_1gaa6f27919ec3642d4da89408f8143f51d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToDeviceContext</definition>
        <argsstring>(int pageNo, DeviceContext *deviceContext)</argsstring>
        <name>RenderToDeviceContext</name>
        <param>
          <type>int</type>
          <declname>pageNo</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_device_context" kindref="compound">DeviceContext</ref> *</type>
          <declname>deviceContext</declname>
        </param>
        <briefdescription>
<para>Render the page to the deviceContext. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classvrv_1_1_page" kindref="compound">Page</ref> number is 1-based. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="563" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1gaf661135bee3a565fc0606f55ec0981e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvrv_1_1_options" kindref="compound">Options</ref> *</type>
        <definition>Options* vrv::Toolkit::GetOptions</definition>
        <argsstring>()</argsstring>
        <name>GetOptions</name>
        <briefdescription>
<para>Return the <ref refid="classvrv_1_1_options" kindref="compound">Options</ref> object of the <ref refid="classvrv_1_1_toolkit" kindref="compound">Toolkit</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="570" column="13" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="570" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga7d77de8b102acd2f07f0fa23270f82a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::SetCString</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>SetCString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Copy the data to the cstring internal buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="577" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga409f7f6411678f02d7bc9a73be29c7d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrv::Toolkit::GetCString</definition>
        <argsstring>()</argsstring>
        <name>GetCString</name>
        <briefdescription>
<para>Return the content of the cstring internal buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Return &quot;[unspecified]&quot; if the buffer has not been allocated </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="586" column="16"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga942ab5856517907ea4f2082d9f35f532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::GetHumdrum</definition>
        <argsstring>(std::ostream &amp;output)</argsstring>
        <name>GetHumdrum</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Write the Humdrum buffer to the outputstream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="593" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga5ae3fb587d96567263bfebc1261ff4d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::SetHumdrumBuffer</definition>
        <argsstring>(const char *contents)</argsstring>
        <name>SetHumdrumBuffer</name>
        <param>
          <type>const char *</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
<para>Copy the data to the humdrum internal buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="600" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga11e13d1850cadf28b00a85fde655e133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrv::Toolkit::GetHumdrumBuffer</definition>
        <argsstring>()</argsstring>
        <name>GetHumdrumBuffer</name>
        <briefdescription>
<para>Return the content of the humdrum internal buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Return &quot;[empty]&quot; if the buffer has not been allocated </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="609" column="16"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1gae5a104614acc4edf6794abe71d027210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::ClearHumdrumBuffer</definition>
        <argsstring>()</argsstring>
        <name>ClearHumdrumBuffer</name>
        <briefdescription>
<para>Clear the Humdrum buffer of any contents. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="616" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga5b3b3c80844a342a465d4887bb599ae0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::SetInputFrom</definition>
        <argsstring>(FileFormat format)</argsstring>
        <name>SetInputFrom</name>
        <param>
          <type>FileFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="621" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="621" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1gac0b9bfca70ab200ca3e313611e37cc20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetInputFrom</definition>
        <argsstring>()</argsstring>
        <name>GetInputFrom</name>
        <briefdescription>
<para>Get the input format. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classvrv_1_1_input" kindref="compound">Input</ref> format enumeration </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="630" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="630" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga602e2e1f79bb73affe064cb9ba7a4f5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetOutputTo</definition>
        <argsstring>()</argsstring>
        <name>GetOutputTo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="635" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="635" bodyend="635"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1a5e0a77331e07aefa6f9471a1bc34f185" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref></type>
        <definition>Doc vrv::Toolkit::m_doc</definition>
        <argsstring></argsstring>
        <name>m_doc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="661" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="661" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1a41a694f23fc26f10b27c56dccf0cec68" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_view" kindref="compound">View</ref></type>
        <definition>View vrv::Toolkit::m_view</definition>
        <argsstring></argsstring>
        <name>m_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="662" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="662" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1a4c0d66ae08c2a5e24af9e0ac137f3433" prot="private" static="no" mutable="no">
        <type>FileFormat</type>
        <definition>FileFormat vrv::Toolkit::m_inputFrom</definition>
        <argsstring></argsstring>
        <name>m_inputFrom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="663" column="16" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="663" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1ab3948b7bb4d42e1a2770a0701ee01dc2" prot="private" static="no" mutable="no">
        <type>FileFormat</type>
        <definition>FileFormat vrv::Toolkit::m_outputTo</definition>
        <argsstring></argsstring>
        <name>m_outputTo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="664" column="16" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="664" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1a8f5060c2fec413147a6bde2fcd672565" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_options" kindref="compound">Options</ref> *</type>
        <definition>Options* vrv::Toolkit::m_options</definition>
        <argsstring></argsstring>
        <name>m_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="666" column="13" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="666" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1ac0bd285a5155dd9737032d26edba729d" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* vrv::Toolkit::m_cString</definition>
        <argsstring></argsstring>
        <name>m_cString</name>
        <briefdescription>
<para>The C buffer string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="671" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1a27512885b4cd196fd47cc4430fffeb76" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_editor_toolkit" kindref="compound">EditorToolkit</ref> *</type>
        <definition>EditorToolkit* vrv::Toolkit::m_editorToolkit</definition>
        <argsstring></argsstring>
        <name>m_editorToolkit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="673" column="19" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="673" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1af139b70cab7a8189edeec53a0093e93d" prot="private" static="yes" mutable="no">
        <type>char *</type>
        <definition>char* vrv::Toolkit::m_humdrumBuffer</definition>
        <argsstring></argsstring>
        <name>m_humdrumBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="679" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="679" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a05feed813407bca32d82d34319f5185a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FileFormat</type>
        <definition>FileFormat vrv::Toolkit::IdentifyInputFrom</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>IdentifyInputFrom</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Identify the input file type for auto loading of input data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="643" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a9621011e0b28c573d62c5412a8c886ec" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::ResetLogBuffer</definition>
        <argsstring>()</argsstring>
        <name>ResetLogBuffer</name>
        <briefdescription>
<para>Resets the vrv::logBuffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="648" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a8d00a1762ebe79c8d9021148017a2072" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::IsUTF16</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>IsUTF16</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="651" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ad4839601f6e6a10f32e8c843e1bacfb9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadUTF16File</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>LoadUTF16File</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="652" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aec4e3b3448e5d3312113310ab4a7031f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::IsZip</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>IsZip</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="653" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a97084c343467959a1b8fb5d0edfdbc54" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadZipFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>LoadZipFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="654" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1acd24044c6c9fe0e03ac72726a5ec330a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadZipData</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;bytes)</argsstring>
        <name>LoadZipData</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="655" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aad929203e47ba1fe415b1b989a31463d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::GetClassIds</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;classStrings, std::vector&lt; ClassId &gt; &amp;classIds)</argsstring>
        <name>GetClassIds</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>classStrings</declname>
        </param>
        <param>
          <type>std::vector&lt; ClassId &gt; &amp;</type>
          <declname>classIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="656" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="52" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="52" bodyend="680"/>
    <listofallmembers>
      <member refid="group__nodoc_1gae5a104614acc4edf6794abe71d027210" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ClearHumdrumBuffer</name></member>
      <member refid="classvrv_1_1_toolkit_1a8a411c7fe22ffb9df4be52b582af550e" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ConvertHumdrumToHumdrum</name></member>
      <member refid="classvrv_1_1_toolkit_1adf47bbe710d3902f241db376002f55cb" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ConvertMEIToHumdrum</name></member>
      <member refid="classvrv_1_1_toolkit_1a25adbe86763cca1c51603b9e4c4831f3" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>Edit</name></member>
      <member refid="classvrv_1_1_toolkit_1a369f22c61679d97bdd05c0689d6f0a44" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>EditInfo</name></member>
      <member refid="classvrv_1_1_toolkit_1a2ca1aa7fcc49d2b8b7717dec136c5e86" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetAvailableOptions</name></member>
      <member refid="classvrv_1_1_toolkit_1aad929203e47ba1fe415b1b989a31463d" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetClassIds</name></member>
      <member refid="group__nodoc_1ga409f7f6411678f02d7bc9a73be29c7d6" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetCString</name></member>
      <member refid="classvrv_1_1_toolkit_1acde5671467b4de6cacd55e7e8be87e93" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetElementAttr</name></member>
      <member refid="classvrv_1_1_toolkit_1a4618bafecb91784806f78751ea6b3f42" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetElementsAtTime</name></member>
      <member refid="classvrv_1_1_toolkit_1acbd4bf8bb87e10aa286034d8fe204469" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetExpansionIdsForElement</name></member>
      <member refid="classvrv_1_1_toolkit_1a1b23b93998cb39e2016130b01d1db1b3" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetHumdrum</name></member>
      <member refid="group__nodoc_1ga942ab5856517907ea4f2082d9f35f532" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetHumdrum</name></member>
      <member refid="group__nodoc_1ga11e13d1850cadf28b00a85fde655e133" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetHumdrumBuffer</name></member>
      <member refid="classvrv_1_1_toolkit_1ade214f7c4d835643aa13046d8ae000ef" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetHumdrumFile</name></member>
      <member refid="group__nodoc_1gac0b9bfca70ab200ca3e313611e37cc20" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetInputFrom</name></member>
      <member refid="classvrv_1_1_toolkit_1a0dacf26288d829c51737cbca389c7117" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetLog</name></member>
      <member refid="classvrv_1_1_toolkit_1a32c3ff9da41c302c83c6f8d52fc11467" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetMEI</name></member>
      <member refid="classvrv_1_1_toolkit_1a1b7c6ef82b1ec90af16f8f32da24dd5f" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetMIDIValuesForElement</name></member>
      <member refid="classvrv_1_1_toolkit_1ab20d86aba8f534079fdf01dd72e97178" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetNotatedIdForElement</name></member>
      <member refid="classvrv_1_1_toolkit_1a68c3c9a776a1ec7e9734bb7540864e49" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetOption</name></member>
      <member refid="classvrv_1_1_toolkit_1aebe87c2bdaa8388550be5529a1c72163" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetOptions</name></member>
      <member refid="group__nodoc_1gaf661135bee3a565fc0606f55ec0981e7" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetOptions</name></member>
      <member refid="group__nodoc_1ga602e2e1f79bb73affe064cb9ba7a4f5a" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetOutputTo</name></member>
      <member refid="classvrv_1_1_toolkit_1af24ccae4968a35e71b5fd82b70ee086c" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetPageCount</name></member>
      <member refid="classvrv_1_1_toolkit_1a234616d8b4ab54ec1b7efb79e5ae464d" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetPageWithElement</name></member>
      <member refid="classvrv_1_1_toolkit_1a321e0a62f5f15b1c5cd522fb0e514d3f" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetScale</name></member>
      <member refid="classvrv_1_1_toolkit_1ab29688374542c0d3fb3cf5007bd23ab2" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetTimeForElement</name></member>
      <member refid="classvrv_1_1_toolkit_1ad79d6ace65df36810f0d84e774aee05d" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetTimesForElement</name></member>
      <member refid="classvrv_1_1_toolkit_1aaf003d6419a475cd62984eab04e72b9f" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetUuid</name></member>
      <member refid="classvrv_1_1_toolkit_1a293b23b38c10be4da8b38c4b3a769d1d" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetVersion</name></member>
      <member refid="classvrv_1_1_toolkit_1a05feed813407bca32d82d34319f5185a" prot="protected" virt="non-virtual"><scope>vrv::Toolkit</scope><name>IdentifyInputFrom</name></member>
      <member refid="classvrv_1_1_toolkit_1a8d00a1762ebe79c8d9021148017a2072" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>IsUTF16</name></member>
      <member refid="classvrv_1_1_toolkit_1aec4e3b3448e5d3312113310ab4a7031f" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>IsZip</name></member>
      <member refid="classvrv_1_1_toolkit_1a9a08fd8e89da6c2c709eaae69e28b2b1" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadData</name></member>
      <member refid="classvrv_1_1_toolkit_1a3859f9341d415376b7d8f11a1aa8e352" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadFile</name></member>
      <member refid="classvrv_1_1_toolkit_1ad4839601f6e6a10f32e8c843e1bacfb9" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadUTF16File</name></member>
      <member refid="classvrv_1_1_toolkit_1acd24044c6c9fe0e03ac72726a5ec330a" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadZipData</name></member>
      <member refid="classvrv_1_1_toolkit_1aeae2ad736af0f0d436c9131745057556" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadZipDataBase64</name></member>
      <member refid="classvrv_1_1_toolkit_1abf4167617faed8347a7da3291e927e05" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadZipDataBuffer</name></member>
      <member refid="classvrv_1_1_toolkit_1a97084c343467959a1b8fb5d0edfdbc54" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadZipFile</name></member>
      <member refid="classvrv_1_1_toolkit_1ac0bd285a5155dd9737032d26edba729d" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_cString</name></member>
      <member refid="classvrv_1_1_toolkit_1a5e0a77331e07aefa6f9471a1bc34f185" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_doc</name></member>
      <member refid="classvrv_1_1_toolkit_1a27512885b4cd196fd47cc4430fffeb76" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_editorToolkit</name></member>
      <member refid="classvrv_1_1_toolkit_1af139b70cab7a8189edeec53a0093e93d" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_humdrumBuffer</name></member>
      <member refid="classvrv_1_1_toolkit_1a4c0d66ae08c2a5e24af9e0ac137f3433" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_inputFrom</name></member>
      <member refid="classvrv_1_1_toolkit_1a8f5060c2fec413147a6bde2fcd672565" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_options</name></member>
      <member refid="classvrv_1_1_toolkit_1ab3948b7bb4d42e1a2770a0701ee01dc2" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_outputTo</name></member>
      <member refid="classvrv_1_1_toolkit_1a41a694f23fc26f10b27c56dccf0cec68" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_view</name></member>
      <member refid="classvrv_1_1_toolkit_1a19431c36d29a2301ee946da2cd01946e" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RedoLayout</name></member>
      <member refid="classvrv_1_1_toolkit_1aff4b4b830b5859bf07d19e8ca63d2335" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RedoPagePitchPosLayout</name></member>
      <member refid="group__nodoc_1gaa6f27919ec3642d4da89408f8143f51d" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToDeviceContext</name></member>
      <member refid="classvrv_1_1_toolkit_1a24988e48cc901661fd4db03ec9f756e9" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToMIDI</name></member>
      <member refid="classvrv_1_1_toolkit_1a298894afff860e0675f2ca3b199fda98" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToMIDIFile</name></member>
      <member refid="classvrv_1_1_toolkit_1a572174dc1e44773a2ab83a0ac79b479c" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToPAE</name></member>
      <member refid="classvrv_1_1_toolkit_1a4360e00f3093a9360bf231e3d7f48c5f" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToPAEFile</name></member>
      <member refid="classvrv_1_1_toolkit_1a07da382b8c69698f19ff7e3136fd0813" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToSVG</name></member>
      <member refid="classvrv_1_1_toolkit_1a3ff0a3aa8deeef77c291d496ee0d2959" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToSVGFile</name></member>
      <member refid="classvrv_1_1_toolkit_1a4172ff70b76b47701fdab68c7ee2f12d" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToTimemap</name></member>
      <member refid="classvrv_1_1_toolkit_1ae007856d580be07e60aeb52efb826a40" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToTimemapFile</name></member>
      <member refid="classvrv_1_1_toolkit_1a9621011e0b28c573d62c5412a8c886ec" prot="protected" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ResetLogBuffer</name></member>
      <member refid="classvrv_1_1_toolkit_1a96fbf91f6688a0d81886a4a25254dc25" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ResetOptions</name></member>
      <member refid="classvrv_1_1_toolkit_1a0206f317ac7ebe3c61df606c8afcd4ca" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SaveFile</name></member>
      <member refid="group__nodoc_1ga7d77de8b102acd2f07f0fa23270f82a5" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetCString</name></member>
      <member refid="group__nodoc_1ga5ae3fb587d96567263bfebc1261ff4d9" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetHumdrumBuffer</name></member>
      <member refid="classvrv_1_1_toolkit_1abbe738f9285b31845ea71cb322d9a581" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetInputFrom</name></member>
      <member refid="group__nodoc_1ga5b3b3c80844a342a465d4887bb599ae0" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetInputFrom</name></member>
      <member refid="classvrv_1_1_toolkit_1a580fc9fe7eb90047c8ebbe576c96697e" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetOption</name></member>
      <member refid="classvrv_1_1_toolkit_1a09c79a752dd0b9e752506d9bcf583ecd" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetOptions</name></member>
      <member refid="classvrv_1_1_toolkit_1a765716f5361637b41914ee6b74e39ac7" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetOutputTo</name></member>
      <member refid="classvrv_1_1_toolkit_1aed5c67aae6d92d7c8d1d68edf5a5ae65" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetResourcePath</name></member>
      <member refid="classvrv_1_1_toolkit_1a53b48c97c58b0da6e6083193ebd966e4" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetScale</name></member>
      <member refid="classvrv_1_1_toolkit_1ad009ed5b8852f67843a34c4b6fd1e3c7" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>Toolkit</name></member>
      <member refid="classvrv_1_1_toolkit_1a97d14fc376f8532765955015b26a6811" prot="public" virt="virtual"><scope>vrv::Toolkit</scope><name>~Toolkit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
