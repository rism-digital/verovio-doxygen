<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvrv_1_1_toolkit" kind="class" language="C++" prot="public">
    <compoundname>vrv::Toolkit</compoundname>
      <sectiondef kind="user-defined">
      <header>Constructors and destructors</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ad009ed5b8852f67843a34c4b6fd1e3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::Toolkit::Toolkit</definition>
        <argsstring>(bool initFont=true)</argsstring>
        <name>Toolkit</name>
        <param>
          <type>bool</type>
          <declname>initFont</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initFont</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to false, resource path is not initialized and SetResourcePath will have to be called explicitely </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="49" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a97d14fc376f8532765955015b26a6811" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vrv::Toolkit::~Toolkit</definition>
        <argsstring>()</argsstring>
        <name>~Toolkit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="50" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Utility methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a86dae67d6cae81d8026da6968e665e99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetID</definition>
        <argsstring>()</argsstring>
        <name>GetID</name>
        <briefdescription>
<para>Return the ID of the <ref refid="classvrv_1_1_toolkit" kindref="compound">Toolkit</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<simplesect kind="return"><para>The ID as as string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="68" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a03ba0015bcb367ba3c970b8f047b45ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetResourcePath</definition>
        <argsstring>() const</argsstring>
        <name>GetResourcePath</name>
        <briefdescription>
<para>Get the resource path for the <ref refid="classvrv_1_1_toolkit" kindref="compound">Toolkit</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<simplesect kind="return"><para>A string with the resource path </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="77" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aed5c67aae6d92d7c8d1d68edf5a5ae65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetResourcePath</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>SetResourcePath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Set the resource path for the <ref refid="classvrv_1_1_toolkit" kindref="compound">Toolkit</ref> instance and any extra fonts. </para>
        </briefdescription>
        <detaileddescription>
<para>This method needs to be called if the constructor had initFont=false or if the resource path needs to be changed.</para>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the resource directory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the resources was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="90" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a0dacf26288d829c51737cbca389c7117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetLog</definition>
        <argsstring>()</argsstring>
        <name>GetLog</name>
        <briefdescription>
<para>Get the log content for the latest operation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The log content as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="97" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a96b02ba0e9b490daa5803a98a5b7e645" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetVersion</definition>
        <argsstring>() const</argsstring>
        <name>GetVersion</name>
        <briefdescription>
<para>Return the version number. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the version number as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="104" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aa851c49e48d4fd83e71f1a457f022366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::ResetXmlIdSeed</definition>
        <argsstring>(int seed)</argsstring>
        <name>ResetXmlIdSeed</name>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
<para>Reset the seed used to generate MEI @xml:id attribute values. </para>
        </briefdescription>
        <detaileddescription>
<para>Passing 0 will seed the @xml:id generator with a random (time-based) seed value. This method will have no effect if the <ndash/>xml-id-checksum option is set.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>The seed value for generating the @xml:id values (0 for a time-based random seed) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="114" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Loading methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a3859f9341d415376b7d8f11a1aa8e352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>LoadFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Load a file from the file system. </para>
        </briefdescription>
        <detaileddescription>
<para>Previously convert UTF16 files to UTF8 or extract files from MusicXML compressed files.</para>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename to be loaded </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="135" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a9a08fd8e89da6c2c709eaae69e28b2b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadData</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>LoadData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Load a string data with the type previously specified in the options. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, the methods try to auto-detect the type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A string with the data (e.g., MEI data) to be loaded </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the data was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="145" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aeae2ad736af0f0d436c9131745057556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadZipDataBase64</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>LoadZipDataBase64</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Load a MusicXML compressed file passed as base64 encoded string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A ZIP file as a base64 encoded string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the data was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="153" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1abf4167617faed8347a7da3291e927e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadZipDataBuffer</definition>
        <argsstring>(const unsigned char *data, int length)</argsstring>
        <name>LoadZipDataBuffer</name>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Load a MusicXML compressed file passed as a buffer of bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A ZIP file as a buffer of bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the data buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the data was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="162" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a00a6268261b17ac90ba802ea9780e2df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::ValidatePAEFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>ValidatePAEFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Validate the Plaine &amp; Easie code from a file. </para>
        </briefdescription>
        <detaileddescription>
<para>The method calls <ref refid="classvrv_1_1_toolkit_1a7311cd71df650b10f1ce75e037b49268" kindref="member">Toolkit::ValidatePAE</ref>.</para>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename to be validated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with the validation warnings or errors </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="174" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a7311cd71df650b10f1ce75e037b49268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::ValidatePAE</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>ValidatePAE</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Validate the Plaine &amp; Easie code passed in the string data. </para>
        </briefdescription>
        <detaileddescription>
<para>A single JSON object is returned when there is a global input error. When reading the input succeeds, validation is grouped by input keys. The methods always returns errors in PAE pedantic mode. No data remains loaded after the validation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A string with the data in JSON or with PAE <computeroutput>@</computeroutput> keys </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with the validation warnings or errors </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="187" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1af24ccae4968a35e71b5fd82b70ee086c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetPageCount</definition>
        <argsstring>()</argsstring>
        <name>GetPageCount</name>
        <briefdescription>
<para>Return the number of pages in the loaded document. </para>
        </briefdescription>
        <detaileddescription>
<para>The number of pages depends one the page size and if encoded layout was taken into account or not.</para>
<para><simplesect kind="return"><para>The number of pages </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="196" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getter and setter for options</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a44f1dbad7f6b6f24a9717ab32294be8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetOptions</definition>
        <argsstring>() const</argsstring>
        <name>GetOptions</name>
        <briefdescription>
<para>Return a dictionary of all the options with their current value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A stringified JSON object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="212" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a33570df5ac75d86628a7db641d83ec8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetDefaultOptions</definition>
        <argsstring>() const</argsstring>
        <name>GetDefaultOptions</name>
        <briefdescription>
<para>Return a dictionary of all the options with their default value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A stringified JSON object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="219" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a2ca1aa7fcc49d2b8b7717dec136c5e86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetAvailableOptions</definition>
        <argsstring>() const</argsstring>
        <name>GetAvailableOptions</name>
        <briefdescription>
<para>Return all available options grouped by category. </para>
        </briefdescription>
        <detaileddescription>
<para>For each option, returns the type, the default value, and the minimum and maximum value (when available).</para>
<para><simplesect kind="return"><para>A stringified JSON object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="228" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a09c79a752dd0b9e752506d9bcf583ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetOptions</definition>
        <argsstring>(const std::string &amp;jsonOptions)</argsstring>
        <name>SetOptions</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
        </param>
        <briefdescription>
<para>Set option values. </para>
        </briefdescription>
        <detaileddescription>
<para>The name of each option to be set is to be given as JSON key.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>A stringified JSON objects with the output options </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the options were successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="238" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a96fbf91f6688a0d81886a4a25254dc25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::ResetOptions</definition>
        <argsstring>()</argsstring>
        <name>ResetOptions</name>
        <briefdescription>
<para>Reset all options to default values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="243" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ade313a25a731e494eba87d3c4619cbad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::PrintOptionUsage</definition>
        <argsstring>(const std::string &amp;category, std::ostream &amp;output) const</argsstring>
        <name>PrintOptionUsage</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Print formatted option usage for specific category (with max/min/default values) to output stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="248" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a6e4f7fb5f2071f726e6f705c14a6ed21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetOptionUsageString</definition>
        <argsstring>() const</argsstring>
        <name>GetOptionUsageString</name>
        <briefdescription>
<para>Get all usage for all option categories as string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="253" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a53b48c97c58b0da6e6083193ebd966e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetScale</definition>
        <argsstring>(int scale)</argsstring>
        <name>SetScale</name>
        <param>
          <type>int</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Set the scale option. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the scale value as integer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the option was successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="263" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a321e0a62f5f15b1c5cd522fb0e514d3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetScale</definition>
        <argsstring>()</argsstring>
        <name>GetScale</name>
        <briefdescription>
<para>Get the scale option. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<simplesect kind="return"><para>the scale option as integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="272" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="272" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1abbe738f9285b31845ea71cb322d9a581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetInputFrom</definition>
        <argsstring>(std::string const &amp;inputFrom)</argsstring>
        <name>SetInputFrom</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>inputFrom</declname>
        </param>
        <briefdescription>
<para>Set the input from option. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>the input from value as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the option was successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="282" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a765716f5361637b41914ee6b74e39ac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetOutputTo</definition>
        <argsstring>(std::string const &amp;outputTo)</argsstring>
        <name>SetOutputTo</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outputTo</declname>
        </param>
        <briefdescription>
<para>Set the output to option. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputTo</parametername>
</parameternamelist>
<parameterdescription>
<para>the output to value as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the option was successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="292" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1acd94a639c138408298c34bb41562ee6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::Select</definition>
        <argsstring>(const std::string &amp;selection)</argsstring>
        <name>Select</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>selection</declname>
        </param>
        <briefdescription>
<para>Set the value for a selection. </para>
        </briefdescription>
        <detaileddescription>
<para>The selection will be applied only when some data is loaded or the layout is redone. The selection can be reset (cancelled) by passing an empty string or an empty JSON object. A selection across multiple mdivs is not possible.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>selection</parametername>
</parameternamelist>
<parameterdescription>
<para>The selection as a stringified JSON object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the selection was successfully parsed or reset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="304" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Experimental editor methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a25adbe86763cca1c51603b9e4c4831f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::Edit</definition>
        <argsstring>(const std::string &amp;editorAction)</argsstring>
        <name>Edit</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>editorAction</declname>
        </param>
        <briefdescription>
<para>Edit the MEI data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>editorAction</parametername>
</parameternamelist>
<parameterdescription>
<para>The editor actions as a stringified JSON object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the edit action was successfully applied </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="321" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a369f22c61679d97bdd05c0689d6f0a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::EditInfo</definition>
        <argsstring>()</argsstring>
        <name>EditInfo</name>
        <briefdescription>
<para>Return the editor status. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The editor status as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="328" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Rendering methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ad211393138b2c6b8f0afd933c117a9a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::RenderData</definition>
        <argsstring>(const std::string &amp;data, const std::string &amp;jsonOptions)</argsstring>
        <name>RenderData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
        </param>
        <briefdescription>
<para>Render the first page of the data to SVG. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is a wrapper for setting options, loading data and rendering the first page. It will return an empty string if the options cannot be set or the data cannot be loaded.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A string with the data (e.g., MEI data) to be loaded </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jsonOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>A stringified JSON objects with the output options </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The SVG first page as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="349" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a07da382b8c69698f19ff7e3136fd0813" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::RenderToSVG</definition>
        <argsstring>(int pageNo=1, bool xmlDeclaration=false)</argsstring>
        <name>RenderToSVG</name>
        <param>
          <type>int</type>
          <declname>pageNo</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>xmlDeclaration</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Render a page to SVG. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pageNo</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to render (1-based) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmlDeclaration</parametername>
</parameternamelist>
<parameterdescription>
<para>True for including the xml declaration in the SVG output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The SVG page as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="358" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a3ff0a3aa8deeef77c291d496ee0d2959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToSVGFile</definition>
        <argsstring>(const std::string &amp;filename, int pageNo=1)</argsstring>
        <name>RenderToSVGFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pageNo</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Render a page to SVG and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The output filename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pageNo</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to render (1-based) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file was successfully written </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="369" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a24988e48cc901661fd4db03ec9f756e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::RenderToMIDI</definition>
        <argsstring>()</argsstring>
        <name>RenderToMIDI</name>
        <briefdescription>
<para>Render the document to MIDI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A MIDI file as a base64 encoded string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="376" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a298894afff860e0675f2ca3b199fda98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToMIDIFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>RenderToMIDIFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Render a document to MIDI and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The output filename </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file was successfully written </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="386" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a572174dc1e44773a2ab83a0ac79b479c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::RenderToPAE</definition>
        <argsstring>()</argsstring>
        <name>RenderToPAE</name>
        <briefdescription>
<para>Render a document to Plaine &amp; Easie code. </para>
        </briefdescription>
        <detaileddescription>
<para>Only the top staff / layer is exported.</para>
<para><simplesect kind="return"><para>The PAE as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="395" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a4360e00f3093a9360bf231e3d7f48c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToPAEFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>RenderToPAEFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Render a document to Plaine &amp; Easie code and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para>Only the top staff / layer is exported.</para>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The output filename </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file was successfully written </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="407" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aa0005de91225b21a57bf09ef28ad5498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::RenderToTimemap</definition>
        <argsstring>(const std::string &amp;jsonOptions=&quot;&quot;)</argsstring>
        <name>RenderToTimemap</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Render a document to a timemap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>A stringified JSON objects with the timemap options </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The timemap as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="415" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a2766268f4c000fb97a5bc2e666c4f53e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::RenderToExpansionMap</definition>
        <argsstring>()</argsstring>
        <name>RenderToExpansionMap</name>
        <briefdescription>
<para>Render a document&apos;s expansionMap, if existing. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The expansionMap as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="422" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a9b4d838a1d7256322a4f842877794905" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToTimemapFile</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;jsonOptions=&quot;&quot;)</argsstring>
        <name>RenderToTimemapFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Render a document to timemap and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The output filename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jsonOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>A stringified JSON objects with the timemap options </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file was successfully written </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="433" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a58d5ff7b44f30721ca7c00bee87fdb83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToExpansionMapFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>RenderToExpansionMapFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Render a document&apos;s expansionMap and save it to a file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The output filename </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="442" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Humdrum related methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a1b23b93998cb39e2016130b01d1db1b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetHumdrum</definition>
        <argsstring>()</argsstring>
        <name>GetHumdrum</name>
        <briefdescription>
<para>Get the humdrum buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The humdrum buffer as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="458" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1adf47bbe710d3902f241db376002f55cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::ConvertMEIToHumdrum</definition>
        <argsstring>(const std::string &amp;meiData)</argsstring>
        <name>ConvertMEIToHumdrum</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>meiData</declname>
        </param>
        <briefdescription>
<para>Convert MEI data into Humdrum data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Humdrum data as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="465" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a8a411c7fe22ffb9df4be52b582af550e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::ConvertHumdrumToHumdrum</definition>
        <argsstring>(const std::string &amp;humdrumData)</argsstring>
        <name>ConvertHumdrumToHumdrum</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>humdrumData</declname>
        </param>
        <briefdescription>
<para>Filter Humdrum data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Humdrum data as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="472" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a450b3242b1d69a50ea92dea935e5037f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::ConvertHumdrumToMIDI</definition>
        <argsstring>(const std::string &amp;humdrumData)</argsstring>
        <name>ConvertHumdrumToMIDI</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>humdrumData</declname>
        </param>
        <briefdescription>
<para>Convert Humdrum data to MIDI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The MIDI file as a base64-encoded string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="479" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ade214f7c4d835643aa13046d8ae000ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::GetHumdrumFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>GetHumdrumFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Write the humdrum buffer to the file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The output filename </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file was successfully written </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="489" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MEI related methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a32c3ff9da41c302c83c6f8d52fc11467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetMEI</definition>
        <argsstring>(const std::string &amp;jsonOptions=&quot;&quot;)</argsstring>
        <name>GetMEI</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Get the MEI as a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>A stringified JSON object with the output options; pageNo: integer; (1-based), all pages if none (or 0) specified; scoreBased: true or false; true by default; basic: true or false; false by default; removeIds: true or false; false by default - remove all @xml:id not used in the data; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="509" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a0206f317ac7ebe3c61df606c8afcd4ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SaveFile</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;jsonOptions=&quot;&quot;)</argsstring>
        <name>SaveFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Get the MEI and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>nojs</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The output filename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jsonOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>A stringified JSON object with the output options </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file was successfully written </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="520" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Data access methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a328bf3cea7ea6b403f929d465db032a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetDescriptiveFeatures</definition>
        <argsstring>(const std::string &amp;jsonOptions)</argsstring>
        <name>GetDescriptiveFeatures</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
        </param>
        <briefdescription>
<para>Return descriptive features as a JSON string. </para>
        </briefdescription>
        <detaileddescription>
<para>The features are tailored for implementing incipit search.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>A stringified JSON object with the feature extraction options </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with the requested features </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="539" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a4618bafecb91784806f78751ea6b3f42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetElementsAtTime</definition>
        <argsstring>(int millisec)</argsstring>
        <name>GetElementsAtTime</name>
        <param>
          <type>int</type>
          <declname>millisec</declname>
        </param>
        <briefdescription>
<para>Return array of IDs of elements being currently played. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>millisec</parametername>
</parameternamelist>
<parameterdescription>
<para>The time in milliseconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with the page and notes being played </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="547" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a234616d8b4ab54ec1b7efb79e5ae464d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetPageWithElement</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetPageWithElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Return the page on which the element is the ID (@xml:id) is rendered. </para>
        </briefdescription>
        <detaileddescription>
<para>This takes into account the current layout options.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (@xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the page number (1-based) where the element is (0 if not found) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="557" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1acde5671467b4de6cacd55e7e8be87e93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetElementAttr</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetElementAttr</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Return element attributes as a JSON string. </para>
        </briefdescription>
        <detaileddescription>
<para>The attributes returned include the ones not supported by Verovio.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (@xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with all attributes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="567" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ab20d86aba8f534079fdf01dd72e97178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetNotatedIdForElement</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetNotatedIdForElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Return the ID string of the notated (the original) element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (@xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ID string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="575" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1acbd4bf8bb87e10aa286034d8fe204469" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetExpansionIdsForElement</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetExpansionIdsForElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Return a vector of ID strings of all elements (the notated and the expanded) for a given element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (@xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with all IDs </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="583" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ab29688374542c0d3fb3cf5007bd23ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetTimeForElement</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetTimeForElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Return the time at which the element is the ID (@xml:id) is played. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classvrv_1_1_toolkit_1a24988e48cc901661fd4db03ec9f756e9" kindref="member">RenderToMIDI()</ref> must be called prior to using this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (@xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The time in milliseconds </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="593" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a1b7c6ef82b1ec90af16f8f32da24dd5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetMIDIValuesForElement</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetMIDIValuesForElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Return MIDI values of the element with the ID (@xml:id) </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classvrv_1_1_toolkit_1a24988e48cc901661fd4db03ec9f756e9" kindref="member">RenderToMIDI()</ref> must be called prior to using this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (@xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with the MIDI values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="603" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ad79d6ace65df36810f0d84e774aee05d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetTimesForElement</definition>
        <argsstring>(const std::string &amp;xmlId)</argsstring>
        <name>GetTimesForElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xmlId</declname>
        </param>
        <briefdescription>
<para>Return a JSON object string with the following key values for a given note. </para>
        </briefdescription>
        <detaileddescription>
<para>Return scoreTimeOnset, scoreTimeOffset, scoreTimeTiedDuration, realTimeOnsetMilliseconds, realTimeOffsetMilliseconds, realTimeTiedDurationMilliseconds.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID (@xml:id) of the element being looked for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with the values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="614" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Layout related methods</header>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1acd2477cdd946bbc98936c00347ddf3af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::RedoLayout</definition>
        <argsstring>(const std::string &amp;jsonOptions=&quot;&quot;)</argsstring>
        <name>RedoLayout</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Redo the layout of the loaded data. </para>
        </briefdescription>
        <detaileddescription>
<para>This can be called once the rendering option were changed, for example with a new page (sceen) height or a new zoom level.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>A stringified JSON object with the action options resetCache: true or false; true by default; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="632" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aff4b4b830b5859bf07d19e8ca63d2335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::RedoPagePitchPosLayout</definition>
        <argsstring>()</argsstring>
        <name>RedoPagePitchPosLayout</name>
        <briefdescription>
<para>Redo the layout of the pitch postitions of the current drawing page. </para>
        </briefdescription>
        <detaileddescription>
<para>Only the note vertical positions are recalculated with this method. <ref refid="classvrv_1_1_toolkit_1acd2477cdd946bbc98936c00347ddf3af" kindref="member">RedoLayout()</ref> needs to be called for a full recalculation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="640" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Public methods that are not listed in the documentation</header>
      <memberdef kind="function" id="group__nodoc_1gaa6f27919ec3642d4da89408f8143f51d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToDeviceContext</definition>
        <argsstring>(int pageNo, DeviceContext *deviceContext)</argsstring>
        <name>RenderToDeviceContext</name>
        <param>
          <type>int</type>
          <declname>pageNo</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_device_context" kindref="compound">DeviceContext</ref> *</type>
          <declname>deviceContext</declname>
        </param>
        <briefdescription>
<para>Render the page to the deviceContext. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classvrv_1_1_page" kindref="compound">Page</ref> number is 1-based. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="662" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga60b58e56aa730d920b18901d1b4d6a9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvrv_1_1_options" kindref="compound">Options</ref> *</type>
        <definition>Options* vrv::Toolkit::GetOptionsObj</definition>
        <argsstring>()</argsstring>
        <name>GetOptionsObj</name>
        <briefdescription>
<para>Return the <ref refid="classvrv_1_1_options" kindref="compound">Options</ref> object of the <ref refid="classvrv_1_1_toolkit" kindref="compound">Toolkit</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="669" column="13" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="669" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga7d77de8b102acd2f07f0fa23270f82a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::SetCString</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>SetCString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Copy the data to the cstring internal buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="676" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga409f7f6411678f02d7bc9a73be29c7d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrv::Toolkit::GetCString</definition>
        <argsstring>()</argsstring>
        <name>GetCString</name>
        <briefdescription>
<para>Return the content of the cstring internal buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Return &quot;[unspecified]&quot; if the buffer has not been allocated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="685" column="16"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga942ab5856517907ea4f2082d9f35f532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::GetHumdrum</definition>
        <argsstring>(std::ostream &amp;output)</argsstring>
        <name>GetHumdrum</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Write the Humdrum buffer to the outputstream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="692" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga5ae3fb587d96567263bfebc1261ff4d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::SetHumdrumBuffer</definition>
        <argsstring>(const char *contents)</argsstring>
        <name>SetHumdrumBuffer</name>
        <param>
          <type>const char *</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
<para>Copy the data to the humdrum internal buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="699" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga11e13d1850cadf28b00a85fde655e133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* vrv::Toolkit::GetHumdrumBuffer</definition>
        <argsstring>()</argsstring>
        <name>GetHumdrumBuffer</name>
        <briefdescription>
<para>Return the content of the humdrum internal buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Return &quot;[empty]&quot; if the buffer has not been allocated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="708" column="16"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1gae5a104614acc4edf6794abe71d027210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::ClearHumdrumBuffer</definition>
        <argsstring>()</argsstring>
        <name>ClearHumdrumBuffer</name>
        <briefdescription>
<para>Clear the Humdrum buffer of any contents. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="715" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga5b3b3c80844a342a465d4887bb599ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::SetInputFrom</definition>
        <argsstring>(FileFormat format)</argsstring>
        <name>SetInputFrom</name>
        <param>
          <type>FileFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="720" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1gac0b9bfca70ab200ca3e313611e37cc20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetInputFrom</definition>
        <argsstring>()</argsstring>
        <name>GetInputFrom</name>
        <briefdescription>
<para>Get the input format. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classvrv_1_1_input" kindref="compound">Input</ref> format enumeration </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="728" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="728" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga602e2e1f79bb73affe064cb9ba7a4f5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetOutputTo</definition>
        <argsstring>()</argsstring>
        <name>GetOutputTo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="733" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="733" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga80b1e5c4211c1f7972d55cf2e4cd6c16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::SetLocale</definition>
        <argsstring>()</argsstring>
        <name>SetLocale</name>
        <briefdescription>
<para>Setting the global locale. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="739" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga028fa93d6698315a5f04ab96160a6a62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::ResetLocale</definition>
        <argsstring>()</argsstring>
        <name>ResetLocale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="740" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__nodoc_1ga3eb22488f8037f75c5d950271e0d9ad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::InitClock</definition>
        <argsstring>()</argsstring>
        <name>InitClock</name>
        <briefdescription>
<para>Measuring runtime. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="749" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1ga4dc4ddc728a00b02e5bacac33e1769e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::ResetClock</definition>
        <argsstring>()</argsstring>
        <name>ResetClock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="750" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1gaff331abcba4d70c7e6ecc17d08df382c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::Toolkit::GetRuntimeInSeconds</definition>
        <argsstring>() const</argsstring>
        <name>GetRuntimeInSeconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="751" column="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nodoc_1gabd5f684704d8e4736ea416e43cdc5827" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::LogRuntime</definition>
        <argsstring>() const</argsstring>
        <name>LogRuntime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="752" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1a5e0a77331e07aefa6f9471a1bc34f185" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref></type>
        <definition>Doc vrv::Toolkit::m_doc</definition>
        <argsstring></argsstring>
        <name>m_doc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="798" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="798" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1a308a98315c470e7f7466c8c5e9439911" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_doc_selection" kindref="compound">DocSelection</ref></type>
        <definition>DocSelection vrv::Toolkit::m_docSelection</definition>
        <argsstring></argsstring>
        <name>m_docSelection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="799" column="18" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="799" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1a41a694f23fc26f10b27c56dccf0cec68" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_view" kindref="compound">View</ref></type>
        <definition>View vrv::Toolkit::m_view</definition>
        <argsstring></argsstring>
        <name>m_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="800" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="800" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1a4c0d66ae08c2a5e24af9e0ac137f3433" prot="private" static="no" mutable="no">
        <type>FileFormat</type>
        <definition>FileFormat vrv::Toolkit::m_inputFrom</definition>
        <argsstring></argsstring>
        <name>m_inputFrom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="801" column="16" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="801" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1ab3948b7bb4d42e1a2770a0701ee01dc2" prot="private" static="no" mutable="no">
        <type>FileFormat</type>
        <definition>FileFormat vrv::Toolkit::m_outputTo</definition>
        <argsstring></argsstring>
        <name>m_outputTo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="802" column="16" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="802" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1a8f5060c2fec413147a6bde2fcd672565" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_options" kindref="compound">Options</ref> *</type>
        <definition>Options* vrv::Toolkit::m_options</definition>
        <argsstring></argsstring>
        <name>m_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="804" column="13" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="804" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1aa2dc0652c3641dc9e7000df9a3d7f0ed" prot="private" static="no" mutable="no">
        <type>std::optional&lt; std::locale &gt;</type>
        <definition>std::optional&lt;std::locale&gt; vrv::Toolkit::m_previousLocale</definition>
        <argsstring></argsstring>
        <name>m_previousLocale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="806" column="19" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="806" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1ac0bd285a5155dd9737032d26edba729d" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* vrv::Toolkit::m_cString</definition>
        <argsstring></argsstring>
        <name>m_cString</name>
        <briefdescription>
<para>The C buffer string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="811" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="811" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1a27512885b4cd196fd47cc4430fffeb76" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_editor_toolkit" kindref="compound">EditorToolkit</ref> *</type>
        <definition>EditorToolkit* vrv::Toolkit::m_editorToolkit</definition>
        <argsstring></argsstring>
        <name>m_editorToolkit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="813" column="19" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1a95517ce80380b990a5e37c8e5bde8018" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_runtime_clock" kindref="compound">RuntimeClock</ref> *</type>
        <definition>RuntimeClock* vrv::Toolkit::m_runtimeClock</definition>
        <argsstring></argsstring>
        <name>m_runtimeClock</name>
        <briefdescription>
<para>Measuring runtime. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="817" column="18" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="817" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classvrv_1_1_toolkit_1af139b70cab7a8189edeec53a0093e93d" prot="private" static="yes" mutable="no">
        <type>char *</type>
        <definition>char* vrv::Toolkit::m_humdrumBuffer</definition>
        <argsstring></argsstring>
        <name>m_humdrumBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="824" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="824" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a05feed813407bca32d82d34319f5185a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FileFormat</type>
        <definition>FileFormat vrv::Toolkit::IdentifyInputFrom</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>IdentifyInputFrom</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Identify the input file type for auto loading of input data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="761" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ab9ba4f30abf5a45944e83926efad3294" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::PrintOptionUsageOutput</definition>
        <argsstring>(const vrv::Option *option, std::ostream &amp;output) const</argsstring>
        <name>PrintOptionUsageOutput</name>
        <param>
          <type>const <ref refid="classvrv_1_1_option" kindref="compound">vrv::Option</ref> *</type>
          <declname>option</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Print formatted option usage for specific option to output stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="766" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a9621011e0b28c573d62c5412a8c886ec" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::ResetLogBuffer</definition>
        <argsstring>()</argsstring>
        <name>ResetLogBuffer</name>
        <briefdescription>
<para>Resets the vrv::logBuffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="771" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1af03d8520c77603ed893203b0fa5a8821" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadData</definition>
        <argsstring>(const std::string &amp;data, bool resetLogBuffer)</argsstring>
        <name>LoadData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>resetLogBuffer</declname>
        </param>
        <briefdescription>
<para>Load a string data with or without resetting the log buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="776" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aa871f542892a4ea2ad8441dcd4fc6396" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetFont</definition>
        <argsstring>(const std::string &amp;fontName)</argsstring>
        <name>SetFont</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>fontName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="779" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a8d00a1762ebe79c8d9021148017a2072" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::IsUTF16</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>IsUTF16</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="780" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1ad4839601f6e6a10f32e8c843e1bacfb9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadUTF16File</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>LoadUTF16File</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="781" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aec4e3b3448e5d3312113310ab4a7031f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::IsZip</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>IsZip</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="782" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1a97084c343467959a1b8fb5d0edfdbc54" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadZipFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>LoadZipFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="783" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1acd24044c6c9fe0e03ac72726a5ec330a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadZipData</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;bytes)</argsstring>
        <name>LoadZipData</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="784" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aad929203e47ba1fe415b1b989a31463d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::GetClassIds</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;classStrings, std::vector&lt; ClassId &gt; &amp;classIds)</argsstring>
        <name>GetClassIds</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>classStrings</declname>
        </param>
        <param>
          <type>std::vector&lt; ClassId &gt; &amp;</type>
          <declname>classIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="785" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_toolkit_1aebe87c2bdaa8388550be5529a1c72163" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetOptions</definition>
        <argsstring>(bool defaultValues) const</argsstring>
        <name>GetOptions</name>
        <param>
          <type>bool</type>
          <declname>defaultValues</declname>
        </param>
        <briefdescription>
<para>Return a dictionary of all the options. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>defaultValues</parametername>
</parameternamelist>
<parameterdescription>
<para>True for getting the default values and false for the current values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="793" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="35" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="35" bodyend="825"/>
    <listofallmembers>
      <member refid="group__nodoc_1gae5a104614acc4edf6794abe71d027210" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ClearHumdrumBuffer</name></member>
      <member refid="classvrv_1_1_toolkit_1a8a411c7fe22ffb9df4be52b582af550e" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ConvertHumdrumToHumdrum</name></member>
      <member refid="classvrv_1_1_toolkit_1a450b3242b1d69a50ea92dea935e5037f" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ConvertHumdrumToMIDI</name></member>
      <member refid="classvrv_1_1_toolkit_1adf47bbe710d3902f241db376002f55cb" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ConvertMEIToHumdrum</name></member>
      <member refid="classvrv_1_1_toolkit_1a25adbe86763cca1c51603b9e4c4831f3" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>Edit</name></member>
      <member refid="classvrv_1_1_toolkit_1a369f22c61679d97bdd05c0689d6f0a44" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>EditInfo</name></member>
      <member refid="classvrv_1_1_toolkit_1a2ca1aa7fcc49d2b8b7717dec136c5e86" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetAvailableOptions</name></member>
      <member refid="classvrv_1_1_toolkit_1aad929203e47ba1fe415b1b989a31463d" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetClassIds</name></member>
      <member refid="group__nodoc_1ga409f7f6411678f02d7bc9a73be29c7d6" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetCString</name></member>
      <member refid="classvrv_1_1_toolkit_1a33570df5ac75d86628a7db641d83ec8b" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetDefaultOptions</name></member>
      <member refid="classvrv_1_1_toolkit_1a328bf3cea7ea6b403f929d465db032a8" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetDescriptiveFeatures</name></member>
      <member refid="classvrv_1_1_toolkit_1acde5671467b4de6cacd55e7e8be87e93" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetElementAttr</name></member>
      <member refid="classvrv_1_1_toolkit_1a4618bafecb91784806f78751ea6b3f42" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetElementsAtTime</name></member>
      <member refid="classvrv_1_1_toolkit_1acbd4bf8bb87e10aa286034d8fe204469" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetExpansionIdsForElement</name></member>
      <member refid="classvrv_1_1_toolkit_1a1b23b93998cb39e2016130b01d1db1b3" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetHumdrum</name></member>
      <member refid="group__nodoc_1ga942ab5856517907ea4f2082d9f35f532" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetHumdrum</name></member>
      <member refid="group__nodoc_1ga11e13d1850cadf28b00a85fde655e133" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetHumdrumBuffer</name></member>
      <member refid="classvrv_1_1_toolkit_1ade214f7c4d835643aa13046d8ae000ef" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetHumdrumFile</name></member>
      <member refid="classvrv_1_1_toolkit_1a86dae67d6cae81d8026da6968e665e99" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetID</name></member>
      <member refid="group__nodoc_1gac0b9bfca70ab200ca3e313611e37cc20" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetInputFrom</name></member>
      <member refid="classvrv_1_1_toolkit_1a0dacf26288d829c51737cbca389c7117" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetLog</name></member>
      <member refid="classvrv_1_1_toolkit_1a32c3ff9da41c302c83c6f8d52fc11467" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetMEI</name></member>
      <member refid="classvrv_1_1_toolkit_1a1b7c6ef82b1ec90af16f8f32da24dd5f" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetMIDIValuesForElement</name></member>
      <member refid="classvrv_1_1_toolkit_1ab20d86aba8f534079fdf01dd72e97178" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetNotatedIdForElement</name></member>
      <member refid="classvrv_1_1_toolkit_1a44f1dbad7f6b6f24a9717ab32294be8a" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetOptions</name></member>
      <member refid="classvrv_1_1_toolkit_1aebe87c2bdaa8388550be5529a1c72163" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetOptions</name></member>
      <member refid="group__nodoc_1ga60b58e56aa730d920b18901d1b4d6a9a" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetOptionsObj</name></member>
      <member refid="classvrv_1_1_toolkit_1a6e4f7fb5f2071f726e6f705c14a6ed21" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetOptionUsageString</name></member>
      <member refid="group__nodoc_1ga602e2e1f79bb73affe064cb9ba7a4f5a" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetOutputTo</name></member>
      <member refid="classvrv_1_1_toolkit_1af24ccae4968a35e71b5fd82b70ee086c" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetPageCount</name></member>
      <member refid="classvrv_1_1_toolkit_1a234616d8b4ab54ec1b7efb79e5ae464d" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetPageWithElement</name></member>
      <member refid="classvrv_1_1_toolkit_1a03ba0015bcb367ba3c970b8f047b45ac" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetResourcePath</name></member>
      <member refid="group__nodoc_1gaff331abcba4d70c7e6ecc17d08df382c" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetRuntimeInSeconds</name></member>
      <member refid="classvrv_1_1_toolkit_1a321e0a62f5f15b1c5cd522fb0e514d3f" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetScale</name></member>
      <member refid="classvrv_1_1_toolkit_1ab29688374542c0d3fb3cf5007bd23ab2" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetTimeForElement</name></member>
      <member refid="classvrv_1_1_toolkit_1ad79d6ace65df36810f0d84e774aee05d" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetTimesForElement</name></member>
      <member refid="classvrv_1_1_toolkit_1a96b02ba0e9b490daa5803a98a5b7e645" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>GetVersion</name></member>
      <member refid="classvrv_1_1_toolkit_1a05feed813407bca32d82d34319f5185a" prot="protected" virt="non-virtual"><scope>vrv::Toolkit</scope><name>IdentifyInputFrom</name></member>
      <member refid="group__nodoc_1ga3eb22488f8037f75c5d950271e0d9ad3" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>InitClock</name></member>
      <member refid="classvrv_1_1_toolkit_1a8d00a1762ebe79c8d9021148017a2072" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>IsUTF16</name></member>
      <member refid="classvrv_1_1_toolkit_1aec4e3b3448e5d3312113310ab4a7031f" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>IsZip</name></member>
      <member refid="classvrv_1_1_toolkit_1a9a08fd8e89da6c2c709eaae69e28b2b1" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadData</name></member>
      <member refid="classvrv_1_1_toolkit_1af03d8520c77603ed893203b0fa5a8821" prot="protected" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadData</name></member>
      <member refid="classvrv_1_1_toolkit_1a3859f9341d415376b7d8f11a1aa8e352" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadFile</name></member>
      <member refid="classvrv_1_1_toolkit_1ad4839601f6e6a10f32e8c843e1bacfb9" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadUTF16File</name></member>
      <member refid="classvrv_1_1_toolkit_1acd24044c6c9fe0e03ac72726a5ec330a" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadZipData</name></member>
      <member refid="classvrv_1_1_toolkit_1aeae2ad736af0f0d436c9131745057556" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadZipDataBase64</name></member>
      <member refid="classvrv_1_1_toolkit_1abf4167617faed8347a7da3291e927e05" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadZipDataBuffer</name></member>
      <member refid="classvrv_1_1_toolkit_1a97084c343467959a1b8fb5d0edfdbc54" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LoadZipFile</name></member>
      <member refid="group__nodoc_1gabd5f684704d8e4736ea416e43cdc5827" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>LogRuntime</name></member>
      <member refid="classvrv_1_1_toolkit_1ac0bd285a5155dd9737032d26edba729d" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_cString</name></member>
      <member refid="classvrv_1_1_toolkit_1a5e0a77331e07aefa6f9471a1bc34f185" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_doc</name></member>
      <member refid="classvrv_1_1_toolkit_1a308a98315c470e7f7466c8c5e9439911" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_docSelection</name></member>
      <member refid="classvrv_1_1_toolkit_1a27512885b4cd196fd47cc4430fffeb76" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_editorToolkit</name></member>
      <member refid="classvrv_1_1_toolkit_1af139b70cab7a8189edeec53a0093e93d" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_humdrumBuffer</name></member>
      <member refid="classvrv_1_1_toolkit_1a4c0d66ae08c2a5e24af9e0ac137f3433" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_inputFrom</name></member>
      <member refid="classvrv_1_1_toolkit_1a8f5060c2fec413147a6bde2fcd672565" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_options</name></member>
      <member refid="classvrv_1_1_toolkit_1ab3948b7bb4d42e1a2770a0701ee01dc2" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_outputTo</name></member>
      <member refid="classvrv_1_1_toolkit_1aa2dc0652c3641dc9e7000df9a3d7f0ed" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_previousLocale</name></member>
      <member refid="classvrv_1_1_toolkit_1a95517ce80380b990a5e37c8e5bde8018" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_runtimeClock</name></member>
      <member refid="classvrv_1_1_toolkit_1a41a694f23fc26f10b27c56dccf0cec68" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>m_view</name></member>
      <member refid="classvrv_1_1_toolkit_1ade313a25a731e494eba87d3c4619cbad" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>PrintOptionUsage</name></member>
      <member refid="classvrv_1_1_toolkit_1ab9ba4f30abf5a45944e83926efad3294" prot="protected" virt="non-virtual"><scope>vrv::Toolkit</scope><name>PrintOptionUsageOutput</name></member>
      <member refid="classvrv_1_1_toolkit_1acd2477cdd946bbc98936c00347ddf3af" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RedoLayout</name></member>
      <member refid="classvrv_1_1_toolkit_1aff4b4b830b5859bf07d19e8ca63d2335" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RedoPagePitchPosLayout</name></member>
      <member refid="classvrv_1_1_toolkit_1ad211393138b2c6b8f0afd933c117a9a4" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderData</name></member>
      <member refid="group__nodoc_1gaa6f27919ec3642d4da89408f8143f51d" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToDeviceContext</name></member>
      <member refid="classvrv_1_1_toolkit_1a2766268f4c000fb97a5bc2e666c4f53e" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToExpansionMap</name></member>
      <member refid="classvrv_1_1_toolkit_1a58d5ff7b44f30721ca7c00bee87fdb83" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToExpansionMapFile</name></member>
      <member refid="classvrv_1_1_toolkit_1a24988e48cc901661fd4db03ec9f756e9" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToMIDI</name></member>
      <member refid="classvrv_1_1_toolkit_1a298894afff860e0675f2ca3b199fda98" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToMIDIFile</name></member>
      <member refid="classvrv_1_1_toolkit_1a572174dc1e44773a2ab83a0ac79b479c" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToPAE</name></member>
      <member refid="classvrv_1_1_toolkit_1a4360e00f3093a9360bf231e3d7f48c5f" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToPAEFile</name></member>
      <member refid="classvrv_1_1_toolkit_1a07da382b8c69698f19ff7e3136fd0813" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToSVG</name></member>
      <member refid="classvrv_1_1_toolkit_1a3ff0a3aa8deeef77c291d496ee0d2959" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToSVGFile</name></member>
      <member refid="classvrv_1_1_toolkit_1aa0005de91225b21a57bf09ef28ad5498" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToTimemap</name></member>
      <member refid="classvrv_1_1_toolkit_1a9b4d838a1d7256322a4f842877794905" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>RenderToTimemapFile</name></member>
      <member refid="group__nodoc_1ga4dc4ddc728a00b02e5bacac33e1769e2" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ResetClock</name></member>
      <member refid="group__nodoc_1ga028fa93d6698315a5f04ab96160a6a62" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ResetLocale</name></member>
      <member refid="classvrv_1_1_toolkit_1a9621011e0b28c573d62c5412a8c886ec" prot="protected" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ResetLogBuffer</name></member>
      <member refid="classvrv_1_1_toolkit_1a96fbf91f6688a0d81886a4a25254dc25" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ResetOptions</name></member>
      <member refid="classvrv_1_1_toolkit_1aa851c49e48d4fd83e71f1a457f022366" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ResetXmlIdSeed</name></member>
      <member refid="classvrv_1_1_toolkit_1a0206f317ac7ebe3c61df606c8afcd4ca" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SaveFile</name></member>
      <member refid="classvrv_1_1_toolkit_1acd94a639c138408298c34bb41562ee6a" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>Select</name></member>
      <member refid="group__nodoc_1ga7d77de8b102acd2f07f0fa23270f82a5" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetCString</name></member>
      <member refid="classvrv_1_1_toolkit_1aa871f542892a4ea2ad8441dcd4fc6396" prot="private" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetFont</name></member>
      <member refid="group__nodoc_1ga5ae3fb587d96567263bfebc1261ff4d9" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetHumdrumBuffer</name></member>
      <member refid="classvrv_1_1_toolkit_1abbe738f9285b31845ea71cb322d9a581" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetInputFrom</name></member>
      <member refid="group__nodoc_1ga5b3b3c80844a342a465d4887bb599ae0" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetInputFrom</name></member>
      <member refid="group__nodoc_1ga80b1e5c4211c1f7972d55cf2e4cd6c16" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetLocale</name></member>
      <member refid="classvrv_1_1_toolkit_1a09c79a752dd0b9e752506d9bcf583ecd" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetOptions</name></member>
      <member refid="classvrv_1_1_toolkit_1a765716f5361637b41914ee6b74e39ac7" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetOutputTo</name></member>
      <member refid="classvrv_1_1_toolkit_1aed5c67aae6d92d7c8d1d68edf5a5ae65" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetResourcePath</name></member>
      <member refid="classvrv_1_1_toolkit_1a53b48c97c58b0da6e6083193ebd966e4" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>SetScale</name></member>
      <member refid="classvrv_1_1_toolkit_1ad009ed5b8852f67843a34c4b6fd1e3c7" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>Toolkit</name></member>
      <member refid="classvrv_1_1_toolkit_1a7311cd71df650b10f1ce75e037b49268" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ValidatePAE</name></member>
      <member refid="classvrv_1_1_toolkit_1a00a6268261b17ac90ba802ea9780e2df" prot="public" virt="non-virtual"><scope>vrv::Toolkit</scope><name>ValidatePAEFile</name></member>
      <member refid="classvrv_1_1_toolkit_1a97d14fc376f8532765955015b26a6811" prot="public" virt="virtual"><scope>vrv::Toolkit</scope><name>~Toolkit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
