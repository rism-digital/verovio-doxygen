<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvrv_1_1_m_e_i_output" kind="class" language="C++" prot="public">
    <compoundname>vrv::MEIOutput</compoundname>
    <basecompoundref refid="classvrv_1_1_output" prot="public" virt="non-virtual">vrv::Output</basecompoundref>
    <includes refid="iomei_8h" local="no">iomei.h</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and destructor</header>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1abcbfdbba42ecd1741b64a255ab505c84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::MEIOutput::MEIOutput</definition>
        <argsstring>(Doc *doc)</argsstring>
        <name>MEIOutput</name>
        <param>
          <type><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="172" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a0fdf610034d25168589b7cb88729e205" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vrv::MEIOutput::~MEIOutput</definition>
        <argsstring>()</argsstring>
        <name>~MEIOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="173" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for writing MEI body elements.</header>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aa673c000af3853b637c0dd6ededbe6c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMdiv</definition>
        <argsstring>(pugi::xml_node currentNode, Mdiv *mdiv)</argsstring>
        <name>WriteMdiv</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_mdiv" kindref="compound">Mdiv</ref> *</type>
          <declname>mdiv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="223" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1afb53289f6cda969b5c77742a79070993" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePages</definition>
        <argsstring>(pugi::xml_node currentNode, Pages *pages)</argsstring>
        <name>WritePages</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_pages" kindref="compound">Pages</ref> *</type>
          <declname>pages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="224" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a0465c4d548b8ddd92010c02b72779e0c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteScore</definition>
        <argsstring>(pugi::xml_node currentNode, Score *score)</argsstring>
        <name>WriteScore</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>score</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="225" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for writing MEI score-based elements</header>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1af05189e3d97812ce8aa836353c298590" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSection</definition>
        <argsstring>(pugi::xml_node currentNode, Section *section)</argsstring>
        <name>WriteSection</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_section" kindref="compound">Section</ref> *</type>
          <declname>section</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="232" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a538972bc260ef8e1c2c210b14a319538" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteEnding</definition>
        <argsstring>(pugi::xml_node currentNote, Ending *ending)</argsstring>
        <name>WriteEnding</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNote</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_ending" kindref="compound">Ending</ref> *</type>
          <declname>ending</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="233" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a6f9cfc224901a1432ae27eae262d3964" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteExpansion</definition>
        <argsstring>(pugi::xml_node currentNote, Expansion *expansion)</argsstring>
        <name>WriteExpansion</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNote</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_expansion" kindref="compound">Expansion</ref> *</type>
          <declname>expansion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="234" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a13d9cb7cb25d5020b919f81341d68ebd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePb</definition>
        <argsstring>(pugi::xml_node currentNode, Pb *pb)</argsstring>
        <name>WritePb</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_pb" kindref="compound">Pb</ref> *</type>
          <declname>pb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="235" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aded12a347e69de2320f604b03fa1730b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSb</definition>
        <argsstring>(pugi::xml_node currentNode, Sb *sb)</argsstring>
        <name>WriteSb</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_sb" kindref="compound">Sb</ref> *</type>
          <declname>sb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="236" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for writing MEI containers (measures, staff, etc) scoreDef and related.</header>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a2b55dddc0776ccbcf5bb864639f9cd1d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePage</definition>
        <argsstring>(pugi::xml_node currentNode, Page *page)</argsstring>
        <name>WritePage</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_page" kindref="compound">Page</ref> *</type>
          <declname>page</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="243" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a7d8636e8173d0c6eb0aeb9690a25017d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSystem</definition>
        <argsstring>(pugi::xml_node currentNode, System *system)</argsstring>
        <name>WriteSystem</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_system" kindref="compound">System</ref> *</type>
          <declname>system</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="244" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aef74185bbf0948508be8ea00117aec28" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteBoundaryEnd</definition>
        <argsstring>(pugi::xml_node currentNode, BoundaryEnd *boundaryEnd)</argsstring>
        <name>WriteBoundaryEnd</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_boundary_end" kindref="compound">BoundaryEnd</ref> *</type>
          <declname>boundaryEnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="245" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a82c1df81fac9c2b65463bd1d68c8c0cd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteScoreDef</definition>
        <argsstring>(pugi::xml_node currentNode, ScoreDef *scoreDef)</argsstring>
        <name>WriteScoreDef</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_score_def" kindref="compound">ScoreDef</ref> *</type>
          <declname>scoreDef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="246" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ac0caa0ddfaf64decb5e1cf0918a430e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteGrpSym</definition>
        <argsstring>(pugi::xml_node currentNode, GrpSym *grmSym)</argsstring>
        <name>WriteGrpSym</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_grp_sym" kindref="compound">GrpSym</ref> *</type>
          <declname>grmSym</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="247" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aef20e27e37648add44fae663ce3347c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePgFoot</definition>
        <argsstring>(pugi::xml_node currentNode, PgFoot *pgFoot)</argsstring>
        <name>WritePgFoot</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_pg_foot" kindref="compound">PgFoot</ref> *</type>
          <declname>pgFoot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="248" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aa0c198a3562d694f19b23be9f74b64d3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePgFoot2</definition>
        <argsstring>(pugi::xml_node currentNode, PgFoot2 *pgFoot2)</argsstring>
        <name>WritePgFoot2</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_pg_foot2" kindref="compound">PgFoot2</ref> *</type>
          <declname>pgFoot2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="249" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aeef815db31d71fc3689571c798c5677e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePgHead</definition>
        <argsstring>(pugi::xml_node currentNode, PgHead *pgHead)</argsstring>
        <name>WritePgHead</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_pg_head" kindref="compound">PgHead</ref> *</type>
          <declname>pgHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="250" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aa331145e328b74c53ed2dce55f3fa38b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePgHead2</definition>
        <argsstring>(pugi::xml_node currentNode, PgHead2 *pgHead2)</argsstring>
        <name>WritePgHead2</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_pg_head2" kindref="compound">PgHead2</ref> *</type>
          <declname>pgHead2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="251" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a7cb1aa3da8dd87c2eefd7c4e8e3ef56c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteStaffGrp</definition>
        <argsstring>(pugi::xml_node currentNode, StaffGrp *staffGrp)</argsstring>
        <name>WriteStaffGrp</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_staff_grp" kindref="compound">StaffGrp</ref> *</type>
          <declname>staffGrp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="252" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aaca0a609777e6f2cbc355d5921eb3fd9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteStaffDef</definition>
        <argsstring>(pugi::xml_node currentNode, StaffDef *staffDef)</argsstring>
        <name>WriteStaffDef</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_staff_def" kindref="compound">StaffDef</ref> *</type>
          <declname>staffDef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="253" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1adbbc2f257cae59e8c62259dea7b56cb2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteInstrDef</definition>
        <argsstring>(pugi::xml_node currentNode, InstrDef *instrDef)</argsstring>
        <name>WriteInstrDef</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_instr_def" kindref="compound">InstrDef</ref> *</type>
          <declname>instrDef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="254" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ab9d3af96ddd4e2f3ae4df83bc5e10a51" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteLabel</definition>
        <argsstring>(pugi::xml_node currentNode, Label *label)</argsstring>
        <name>WriteLabel</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_label" kindref="compound">Label</ref> *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="255" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a57da761d6e12186ae6acdb6960f6e3b3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteLabelAbbr</definition>
        <argsstring>(pugi::xml_node currentNode, LabelAbbr *labelAbbr)</argsstring>
        <name>WriteLabelAbbr</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_label_abbr" kindref="compound">LabelAbbr</ref> *</type>
          <declname>labelAbbr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="256" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ac2d5859c404e427591f1c95482df599f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteTuning</definition>
        <argsstring>(pugi::xml_node currentNode, Tuning *tuning)</argsstring>
        <name>WriteTuning</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_tuning" kindref="compound">Tuning</ref> *</type>
          <declname>tuning</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="257" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a1c8e0942fa40dbc0e90cdaf2620e6ded" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteCourse</definition>
        <argsstring>(pugi::xml_node currentNode, Course *course)</argsstring>
        <name>WriteCourse</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_course" kindref="compound">Course</ref> *</type>
          <declname>course</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="258" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1afab2e9af0aba89cab39d8f031a17d7ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMeasure</definition>
        <argsstring>(pugi::xml_node currentNode, Measure *measure)</argsstring>
        <name>WriteMeasure</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="259" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a02fb0667a34cdc84312e1c2d9893943f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMeterSigGrp</definition>
        <argsstring>(pugi::xml_node currentNode, MeterSigGrp *meterSigGrp)</argsstring>
        <name>WriteMeterSigGrp</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_meter_sig_grp" kindref="compound">MeterSigGrp</ref> *</type>
          <declname>meterSigGrp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="260" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1af83fbf28620bf04721a413a2ae64f668" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteFb</definition>
        <argsstring>(pugi::xml_node currentNode, Fb *fb)</argsstring>
        <name>WriteFb</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_fb" kindref="compound">Fb</ref> *</type>
          <declname>fb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="261" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a3d5458f26f28e4119644f512f2705d3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteStaff</definition>
        <argsstring>(pugi::xml_node currentNode, Staff *staff)</argsstring>
        <name>WriteStaff</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="262" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a6f6cb152b9da1b8f539457d3bfc82d60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteLayer</definition>
        <argsstring>(pugi::xml_node currentNode, Layer *layer)</argsstring>
        <name>WriteLayer</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="263" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for writing LayerElement children.</header>
      <description><para>Called from WriteLayerElement. </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a84d940c4f300ee1071a8f8b4036f7521" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteAccid</definition>
        <argsstring>(pugi::xml_node currentNode, Accid *accid)</argsstring>
        <name>WriteAccid</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_accid" kindref="compound">Accid</ref> *</type>
          <declname>accid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="271" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a1791dd9d13f39e7f969f642d1f28138a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteArtic</definition>
        <argsstring>(pugi::xml_node currentNode, Artic *artic)</argsstring>
        <name>WriteArtic</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_artic" kindref="compound">Artic</ref> *</type>
          <declname>artic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="272" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aab72e163888ea381c2c0bc9b6780ca3a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteBarLine</definition>
        <argsstring>(pugi::xml_node currentNode, BarLine *barLine)</argsstring>
        <name>WriteBarLine</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_bar_line" kindref="compound">BarLine</ref> *</type>
          <declname>barLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="273" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a9d56a9e1daa4cbf1497f7055252162d1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteBeam</definition>
        <argsstring>(pugi::xml_node currentNode, Beam *beam)</argsstring>
        <name>WriteBeam</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_beam" kindref="compound">Beam</ref> *</type>
          <declname>beam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="274" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ac74a9653e3c5cce8e1567b57fde2881c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteBeatRpt</definition>
        <argsstring>(pugi::xml_node currentNode, BeatRpt *beatRpt)</argsstring>
        <name>WriteBeatRpt</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_beat_rpt" kindref="compound">BeatRpt</ref> *</type>
          <declname>beatRpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="275" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1acbce59d32997c436ab12994973f8dd47" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteBTrem</definition>
        <argsstring>(pugi::xml_node currentNode, BTrem *bTrem)</argsstring>
        <name>WriteBTrem</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_b_trem" kindref="compound">BTrem</ref> *</type>
          <declname>bTrem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="276" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aafb3b3474c4db0b7bc13e2decf44561c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteChord</definition>
        <argsstring>(pugi::xml_node currentNode, Chord *chord)</argsstring>
        <name>WriteChord</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>chord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="277" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a3b300950db20b30551c4a7241aae2e64" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteClef</definition>
        <argsstring>(pugi::xml_node currentNode, Clef *clef)</argsstring>
        <name>WriteClef</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_clef" kindref="compound">Clef</ref> *</type>
          <declname>clef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="278" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a2099b49d03095b4a8e68bc8e6c844440" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteCustos</definition>
        <argsstring>(pugi::xml_node currentNode, Custos *custos)</argsstring>
        <name>WriteCustos</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_custos" kindref="compound">Custos</ref> *</type>
          <declname>custos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="279" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a683efcc406cabeea7009445c4f889c71" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteDot</definition>
        <argsstring>(pugi::xml_node currentNode, Dot *dot)</argsstring>
        <name>WriteDot</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_dot" kindref="compound">Dot</ref> *</type>
          <declname>dot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="280" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a5c4c5b298afd747ea5dd45ceff7f4c7f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteFTrem</definition>
        <argsstring>(pugi::xml_node currentNode, FTrem *fTrem)</argsstring>
        <name>WriteFTrem</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_f_trem" kindref="compound">FTrem</ref> *</type>
          <declname>fTrem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="281" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a2040dbd01a87a3181b70537ed7efdd82" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteGraceGrp</definition>
        <argsstring>(pugi::xml_node currentNode, GraceGrp *graceGrp)</argsstring>
        <name>WriteGraceGrp</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_grace_grp" kindref="compound">GraceGrp</ref> *</type>
          <declname>graceGrp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="282" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ab82d49af5c32bffae5c0928969f9cf54" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteHalfmRpt</definition>
        <argsstring>(pugi::xml_node currentNode, HalfmRpt *halfmRpt)</argsstring>
        <name>WriteHalfmRpt</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_halfm_rpt" kindref="compound">HalfmRpt</ref> *</type>
          <declname>halfmRpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="283" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a9351cfe5e3c69099f314c5cc0cf5c717" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteKeyAccid</definition>
        <argsstring>(pugi::xml_node currentNode, KeyAccid *keyAccid)</argsstring>
        <name>WriteKeyAccid</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_key_accid" kindref="compound">KeyAccid</ref> *</type>
          <declname>keyAccid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="284" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a2c526e8b3995a2dc2d6c41e32b9a3436" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteKeySig</definition>
        <argsstring>(pugi::xml_node currentNode, KeySig *keySig)</argsstring>
        <name>WriteKeySig</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_key_sig" kindref="compound">KeySig</ref> *</type>
          <declname>keySig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="285" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a8dee087667b0ea5fceef39543392782d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteLigature</definition>
        <argsstring>(pugi::xml_node currentNode, Ligature *ligature)</argsstring>
        <name>WriteLigature</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_ligature" kindref="compound">Ligature</ref> *</type>
          <declname>ligature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="286" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a4e16df79d62b57dcd9fcf081590dd283" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMensur</definition>
        <argsstring>(pugi::xml_node currentNode, Mensur *mensur)</argsstring>
        <name>WriteMensur</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_mensur" kindref="compound">Mensur</ref> *</type>
          <declname>mensur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="287" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a2307939bf33840d53e87970792341dc6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMeterSig</definition>
        <argsstring>(pugi::xml_node currentNode, MeterSig *meterSig)</argsstring>
        <name>WriteMeterSig</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_meter_sig" kindref="compound">MeterSig</ref> *</type>
          <declname>meterSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="288" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ae537495211824ce157da0c32564b87dd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMRest</definition>
        <argsstring>(pugi::xml_node currentNode, MRest *mRest)</argsstring>
        <name>WriteMRest</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_m_rest" kindref="compound">MRest</ref> *</type>
          <declname>mRest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="289" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aa67e475311a2415efa3635d4a402ca7d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMRpt</definition>
        <argsstring>(pugi::xml_node currentNode, MRpt *mRpt)</argsstring>
        <name>WriteMRpt</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_m_rpt" kindref="compound">MRpt</ref> *</type>
          <declname>mRpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="290" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a4727d390a509f2fc48f7b2acadcc94ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMRpt2</definition>
        <argsstring>(pugi::xml_node currentNode, MRpt2 *mRpt2)</argsstring>
        <name>WriteMRpt2</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_m_rpt2" kindref="compound">MRpt2</ref> *</type>
          <declname>mRpt2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="291" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a8d84d35c5af8947043248376738a30aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMSpace</definition>
        <argsstring>(pugi::xml_node currentNode, MSpace *mSpace)</argsstring>
        <name>WriteMSpace</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_m_space" kindref="compound">MSpace</ref> *</type>
          <declname>mSpace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="292" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a40eb86fae99a1c0c823d81a83ccd3066" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMultiRest</definition>
        <argsstring>(pugi::xml_node currentNode, MultiRest *multiRest)</argsstring>
        <name>WriteMultiRest</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_multi_rest" kindref="compound">MultiRest</ref> *</type>
          <declname>multiRest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="293" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ad95ab5dfe3862ffd3420423b952c32ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMultiRpt</definition>
        <argsstring>(pugi::xml_node currentNode, MultiRpt *multiRpt)</argsstring>
        <name>WriteMultiRpt</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_multi_rpt" kindref="compound">MultiRpt</ref> *</type>
          <declname>multiRpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="294" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a8b1fb898a14112b7d541fe7284ccc74b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteNc</definition>
        <argsstring>(pugi::xml_node currentNode, Nc *nc)</argsstring>
        <name>WriteNc</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_nc" kindref="compound">Nc</ref> *</type>
          <declname>nc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="295" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ac2cb44381793b52fd9849bebafa92ec1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteNeume</definition>
        <argsstring>(pugi::xml_node currentNode, Neume *neume)</argsstring>
        <name>WriteNeume</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_neume" kindref="compound">Neume</ref> *</type>
          <declname>neume</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="296" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1af46e007a42bf9cc46a0847b599bc9396" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteNote</definition>
        <argsstring>(pugi::xml_node currentNode, Note *note)</argsstring>
        <name>WriteNote</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="297" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a290a09396eb2df4cf4b2007bc90fa998" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePlica</definition>
        <argsstring>(pugi::xml_node currentNode, Plica *plica)</argsstring>
        <name>WritePlica</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_plica" kindref="compound">Plica</ref> *</type>
          <declname>plica</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="298" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1afca9266139567da2d3a212c591481cb7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteProport</definition>
        <argsstring>(pugi::xml_node currentNode, Proport *proport)</argsstring>
        <name>WriteProport</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_proport" kindref="compound">Proport</ref> *</type>
          <declname>proport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="299" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a5a4880687ce3558f070aef3ee548374a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteRest</definition>
        <argsstring>(pugi::xml_node currentNode, Rest *rest)</argsstring>
        <name>WriteRest</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_rest" kindref="compound">Rest</ref> *</type>
          <declname>rest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="300" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1abd2ca649e2336da60bb64312ee92d787" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSpace</definition>
        <argsstring>(pugi::xml_node currentNode, Space *space)</argsstring>
        <name>WriteSpace</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_space" kindref="compound">Space</ref> *</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="301" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a18bc8ff761d6ce56d10be456fc83021b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSyllable</definition>
        <argsstring>(pugi::xml_node currentNode, Syllable *syllable)</argsstring>
        <name>WriteSyllable</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_syllable" kindref="compound">Syllable</ref> *</type>
          <declname>syllable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="302" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1af928da4de710a69cd753604f4ec20848" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteTabDurSym</definition>
        <argsstring>(pugi::xml_node currentNode, TabDurSym *tabDurSym)</argsstring>
        <name>WriteTabDurSym</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_tab_dur_sym" kindref="compound">TabDurSym</ref> *</type>
          <declname>tabDurSym</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="303" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a9b92883b1aafb14373db72537cccad8e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteTabGrp</definition>
        <argsstring>(pugi::xml_node currentNode, TabGrp *tabGrp)</argsstring>
        <name>WriteTabGrp</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_tab_grp" kindref="compound">TabGrp</ref> *</type>
          <declname>tabGrp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="304" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a2fe0238c4ab2675b983b655d3e77c1f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteTuplet</definition>
        <argsstring>(pugi::xml_node currentNode, Tuplet *tuplet)</argsstring>
        <name>WriteTuplet</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_tuplet" kindref="compound">Tuplet</ref> *</type>
          <declname>tuplet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="305" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for writing ControlElement</header>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a2965157bdc03e52d3f950020e1bc05a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteAnchoredText</definition>
        <argsstring>(pugi::xml_node currentNode, AnchoredText *anchoredText)</argsstring>
        <name>WriteAnchoredText</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_anchored_text" kindref="compound">AnchoredText</ref> *</type>
          <declname>anchoredText</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="312" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ab34630caa2ea58c25b922e94895df7ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteArpeg</definition>
        <argsstring>(pugi::xml_node currentNode, Arpeg *arpeg)</argsstring>
        <name>WriteArpeg</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_arpeg" kindref="compound">Arpeg</ref> *</type>
          <declname>arpeg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="313" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a7397cd1133d6eac28df6cbeefd26bc7f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteBracketSpan</definition>
        <argsstring>(pugi::xml_node currentNode, BracketSpan *bracketSpan)</argsstring>
        <name>WriteBracketSpan</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_bracket_span" kindref="compound">BracketSpan</ref> *</type>
          <declname>bracketSpan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="314" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ab742f75bc5629b2bd2a1e0a0c28da826" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteBreath</definition>
        <argsstring>(pugi::xml_node currentNode, Breath *breath)</argsstring>
        <name>WriteBreath</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_breath" kindref="compound">Breath</ref> *</type>
          <declname>breath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="315" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a853d2d3421b590721e5a0e6173b5ef0a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteCaesura</definition>
        <argsstring>(pugi::xml_node currentNode, Caesura *caesura)</argsstring>
        <name>WriteCaesura</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_caesura" kindref="compound">Caesura</ref> *</type>
          <declname>caesura</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="316" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a68845796e27f5a47d1b8c072f2a2897f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteDir</definition>
        <argsstring>(pugi::xml_node currentNode, Dir *dir)</argsstring>
        <name>WriteDir</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_dir" kindref="compound">Dir</ref> *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="317" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1af3e23e6190a63065365ec2423ff64b46" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteDynam</definition>
        <argsstring>(pugi::xml_node currentNode, Dynam *dynam)</argsstring>
        <name>WriteDynam</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_dynam" kindref="compound">Dynam</ref> *</type>
          <declname>dynam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="318" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aff7a8759cb51742f86719fbbd5704b3a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteFermata</definition>
        <argsstring>(pugi::xml_node currentNode, Fermata *fermata)</argsstring>
        <name>WriteFermata</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_fermata" kindref="compound">Fermata</ref> *</type>
          <declname>fermata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="319" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a51dc1968a6d84db1bbec8907354080ea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteFing</definition>
        <argsstring>(pugi::xml_node currentNode, Fing *fing)</argsstring>
        <name>WriteFing</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_fing" kindref="compound">Fing</ref> *</type>
          <declname>fing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="320" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a8784775af7819e3d9aaab73c2e577c8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteGliss</definition>
        <argsstring>(pugi::xml_node currentNode, Gliss *gliss)</argsstring>
        <name>WriteGliss</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_gliss" kindref="compound">Gliss</ref> *</type>
          <declname>gliss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="321" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a3d452208873d90d3e340e0d6073eafd5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteHairpin</definition>
        <argsstring>(pugi::xml_node currentNode, Hairpin *hairpin)</argsstring>
        <name>WriteHairpin</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_hairpin" kindref="compound">Hairpin</ref> *</type>
          <declname>hairpin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="322" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a2ad979a6db03f0860afdcea8a91bb8f8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteHarm</definition>
        <argsstring>(pugi::xml_node currentNode, Harm *harm)</argsstring>
        <name>WriteHarm</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_harm" kindref="compound">Harm</ref> *</type>
          <declname>harm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="323" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a9c2a4eee50c9f4aa1971e2762ea47c97" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteLv</definition>
        <argsstring>(pugi::xml_node currentNode, Lv *lv)</argsstring>
        <name>WriteLv</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_lv" kindref="compound">Lv</ref> *</type>
          <declname>lv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="324" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a8fa0a8db793f7c38d129a6f8ec314132" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMNum</definition>
        <argsstring>(pugi::xml_node currentNode, MNum *mnum)</argsstring>
        <name>WriteMNum</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_m_num" kindref="compound">MNum</ref> *</type>
          <declname>mnum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="325" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ae925f6146e8719312cea90f25356e6e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteMordent</definition>
        <argsstring>(pugi::xml_node currentNode, Mordent *mordent)</argsstring>
        <name>WriteMordent</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_mordent" kindref="compound">Mordent</ref> *</type>
          <declname>mordent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="326" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a7266369c9dbbd72ea7976627a7fb9065" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteOctave</definition>
        <argsstring>(pugi::xml_node currentNode, Octave *octave)</argsstring>
        <name>WriteOctave</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_octave" kindref="compound">Octave</ref> *</type>
          <declname>octave</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="327" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a7bcfd4f66c4c7aca279546950f2dc7a5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePedal</definition>
        <argsstring>(pugi::xml_node currentNode, Pedal *pedal)</argsstring>
        <name>WritePedal</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_pedal" kindref="compound">Pedal</ref> *</type>
          <declname>pedal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="328" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a22169b018d45666428c48808aab2cb06" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePhrase</definition>
        <argsstring>(pugi::xml_node currentNode, Phrase *phrase)</argsstring>
        <name>WritePhrase</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_phrase" kindref="compound">Phrase</ref> *</type>
          <declname>phrase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="329" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a70ef2021ac733991b0ab0cd61c0a5b0c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePitchInflection</definition>
        <argsstring>(pugi::xml_node currentNode, PitchInflection *pitchInflection)</argsstring>
        <name>WritePitchInflection</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_pitch_inflection" kindref="compound">PitchInflection</ref> *</type>
          <declname>pitchInflection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="330" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a7c50fe78af63ec36f565c1076d1db9c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteReh</definition>
        <argsstring>(pugi::xml_node currentNode, Reh *reh)</argsstring>
        <name>WriteReh</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_reh" kindref="compound">Reh</ref> *</type>
          <declname>reh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="331" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a52b97b578191d9e99dc5a3049d2a1e92" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSlur</definition>
        <argsstring>(pugi::xml_node currentNode, Slur *slur)</argsstring>
        <name>WriteSlur</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref> *</type>
          <declname>slur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="332" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a10b4c253592a6de1dea8cf1ebac7f41b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteTempo</definition>
        <argsstring>(pugi::xml_node currentNode, Tempo *tempo)</argsstring>
        <name>WriteTempo</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_tempo" kindref="compound">Tempo</ref> *</type>
          <declname>tempo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="333" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ade86f953ac20b0fa3855651596f4ede5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteTie</definition>
        <argsstring>(pugi::xml_node currentNode, Tie *tie)</argsstring>
        <name>WriteTie</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_tie" kindref="compound">Tie</ref> *</type>
          <declname>tie</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="334" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ae0c653bb673aeb6e0ff51a9134a301aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteTrill</definition>
        <argsstring>(pugi::xml_node currentNode, Trill *trill)</argsstring>
        <name>WriteTrill</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_trill" kindref="compound">Trill</ref> *</type>
          <declname>trill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="335" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aa493098663f440fbde40439ad1817be9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteTurn</definition>
        <argsstring>(pugi::xml_node currentNode, Turn *turn)</argsstring>
        <name>WriteTurn</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_turn" kindref="compound">Turn</ref> *</type>
          <declname>turn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="336" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for writing text and figure elements</header>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a6720fcf6550f40bd76881163bdd67633" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteF</definition>
        <argsstring>(pugi::xml_node currentNode, F *f)</argsstring>
        <name>WriteF</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_f" kindref="compound">F</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="343" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aeffed77d5d4573269fceea9829eaec24" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteFig</definition>
        <argsstring>(pugi::xml_node currentNode, Fig *fig)</argsstring>
        <name>WriteFig</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_fig" kindref="compound">Fig</ref> *</type>
          <declname>fig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="344" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aa0a3ac225b35982a598aa84da656030f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteLb</definition>
        <argsstring>(pugi::xml_node currentNode, Lb *lb)</argsstring>
        <name>WriteLb</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_lb" kindref="compound">Lb</ref> *</type>
          <declname>lb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="345" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a7d432798b27cc9eb080d0e857d727b60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteNum</definition>
        <argsstring>(pugi::xml_node currentNode, Num *num)</argsstring>
        <name>WriteNum</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_num" kindref="compound">Num</ref> *</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="346" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a197005dd079215fa7432fd9912125e01" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteRend</definition>
        <argsstring>(pugi::xml_node currentNode, Rend *rend)</argsstring>
        <name>WriteRend</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_rend" kindref="compound">Rend</ref> *</type>
          <declname>rend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="347" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a6bc225230312aeceecec5c873a859629" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSvg</definition>
        <argsstring>(pugi::xml_node currentNode, Svg *svg)</argsstring>
        <name>WriteSvg</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_svg" kindref="compound">Svg</ref> *</type>
          <declname>svg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="348" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a9874de720ba2edfae4ace7df1cbf84d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteText</definition>
        <argsstring>(pugi::xml_node currentNode, Text *text)</argsstring>
        <name>WriteText</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_text" kindref="compound">Text</ref> *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="349" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for writing editorial markup</header>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a13851965a0a5fdebe2db207c8a93e3e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteAbbr</definition>
        <argsstring>(pugi::xml_node currentNode, Abbr *abbr)</argsstring>
        <name>WriteAbbr</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_abbr" kindref="compound">Abbr</ref> *</type>
          <declname>abbr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="356" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a4ada27c740e9c69f067bc1dde30fac24" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteAdd</definition>
        <argsstring>(pugi::xml_node currentNode, Add *add)</argsstring>
        <name>WriteAdd</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_add" kindref="compound">Add</ref> *</type>
          <declname>add</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="357" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a5b4c1d4823e366d862dcfc60104c37fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteAnnot</definition>
        <argsstring>(pugi::xml_node currentNode, Annot *annot)</argsstring>
        <name>WriteAnnot</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_annot" kindref="compound">Annot</ref> *</type>
          <declname>annot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="358" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ac8a3117790776d9918b6ab85ded63f8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteApp</definition>
        <argsstring>(pugi::xml_node currentNode, App *app)</argsstring>
        <name>WriteApp</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_app" kindref="compound">App</ref> *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="359" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a0aac8284ee5294465f721467dc38f077" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteChoice</definition>
        <argsstring>(pugi::xml_node currentNode, Choice *choice)</argsstring>
        <name>WriteChoice</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_choice" kindref="compound">Choice</ref> *</type>
          <declname>choice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="360" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a2bb8344f282310360d551f55a98178ae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteCorr</definition>
        <argsstring>(pugi::xml_node currentNode, Corr *corr)</argsstring>
        <name>WriteCorr</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_corr" kindref="compound">Corr</ref> *</type>
          <declname>corr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="361" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ad5d8e7cb93af0a932fe36b1d4540bd63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteDamage</definition>
        <argsstring>(pugi::xml_node currentNode, Damage *damage)</argsstring>
        <name>WriteDamage</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_damage" kindref="compound">Damage</ref> *</type>
          <declname>damage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="362" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a9f91c44de9dd1b1beef6811812e4c205" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteDel</definition>
        <argsstring>(pugi::xml_node currentNode, Del *del)</argsstring>
        <name>WriteDel</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_del" kindref="compound">Del</ref> *</type>
          <declname>del</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="363" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aec53b6433e64b76d547368ec213b7b1c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteExpan</definition>
        <argsstring>(pugi::xml_node currentNode, Expan *expan)</argsstring>
        <name>WriteExpan</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_expan" kindref="compound">Expan</ref> *</type>
          <declname>expan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="364" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a9a04f734a9c6281b1cd473cad1be242f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteLem</definition>
        <argsstring>(pugi::xml_node currentNode, Lem *lem)</argsstring>
        <name>WriteLem</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_lem" kindref="compound">Lem</ref> *</type>
          <declname>lem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="365" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ace561606ef6e6dd41c1715115cfbb05b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteOrig</definition>
        <argsstring>(pugi::xml_node currentNode, Orig *orig)</argsstring>
        <name>WriteOrig</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_orig" kindref="compound">Orig</ref> *</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="366" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ac2e3f962f51469415f9eb72347287580" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteRdg</definition>
        <argsstring>(pugi::xml_node currentNode, Rdg *rdg)</argsstring>
        <name>WriteRdg</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_rdg" kindref="compound">Rdg</ref> *</type>
          <declname>rdg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="367" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a822e3f22fb115df8332f9424e9022cfc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteRef</definition>
        <argsstring>(pugi::xml_node currentNode, Ref *Ref)</argsstring>
        <name>WriteRef</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_ref" kindref="compound">Ref</ref> *</type>
          <declname>Ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="368" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a1c8a46c297794b6a894d7172bdac68e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteReg</definition>
        <argsstring>(pugi::xml_node currentNode, Reg *Reg)</argsstring>
        <name>WriteReg</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_reg" kindref="compound">Reg</ref> *</type>
          <declname>Reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="369" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a354fb3bb57b30e5308491c8ae978ec9e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteRestore</definition>
        <argsstring>(pugi::xml_node currentNode, Restore *restore)</argsstring>
        <name>WriteRestore</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_restore" kindref="compound">Restore</ref> *</type>
          <declname>restore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="370" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a7e7a4b4cfe3892fac2f49f2b1bf09648" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSic</definition>
        <argsstring>(pugi::xml_node currentNode, Sic *sic)</argsstring>
        <name>WriteSic</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_sic" kindref="compound">Sic</ref> *</type>
          <declname>sic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="371" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a2d7d8f370ab438caf977794da116f2ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSubst</definition>
        <argsstring>(pugi::xml_node currentNode, Subst *subst)</argsstring>
        <name>WriteSubst</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_subst" kindref="compound">Subst</ref> *</type>
          <declname>subst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="372" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a5ddb3463dc84d52fd63aad7d8d8a87a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSupplied</definition>
        <argsstring>(pugi::xml_node currentNode, Supplied *supplied)</argsstring>
        <name>WriteSupplied</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_supplied" kindref="compound">Supplied</ref> *</type>
          <declname>supplied</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="373" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a42442639dd9079214ad66c8d8b52f1ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteUnclear</definition>
        <argsstring>(pugi::xml_node currentNode, Unclear *unclear)</argsstring>
        <name>WriteUnclear</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_unclear" kindref="compound">Unclear</ref> *</type>
          <declname>unclear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="374" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for writing other mei elements</header>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a621488d779012514a571695bb0220bbc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteVerse</definition>
        <argsstring>(pugi::xml_node currentNode, Verse *verse)</argsstring>
        <name>WriteVerse</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_verse" kindref="compound">Verse</ref> *</type>
          <declname>verse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="381" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a7e5d1759d8116832a7d13e156c865c0a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSyl</definition>
        <argsstring>(pugi::xml_node currentNode, Syl *syl)</argsstring>
        <name>WriteSyl</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_syl" kindref="compound">Syl</ref> *</type>
          <declname>syl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="382" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ada03af11778c9ceb30ed4d0000d96e6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteZone</definition>
        <argsstring>(pugi::xml_node currentNode, Zone *zone)</argsstring>
        <name>WriteZone</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_zone" kindref="compound">Zone</ref> *</type>
          <declname>zone</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="383" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a15163f49d3f27a48024cbab16bfd66b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSurface</definition>
        <argsstring>(pugi::xml_node currentNode, Surface *surface)</argsstring>
        <name>WriteSurface</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_surface" kindref="compound">Surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="384" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ae1f25461b0d0e17048351442d3a717ba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteFacsimile</definition>
        <argsstring>(pugi::xml_node currentNode, Facsimile *facsimile)</argsstring>
        <name>WriteFacsimile</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_facsimile" kindref="compound">Facsimile</ref> *</type>
          <declname>facsimile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="385" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for writing LayerElement, EditorialElement and interfaces.</header>
      <description><para>Call WriteDurationInferface from WriteNote, for example. </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a1f0843577626299ef25d5b427968a577" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteControlElement</definition>
        <argsstring>(pugi::xml_node element, ControlElement *object)</argsstring>
        <name>WriteControlElement</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>element</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_control_element" kindref="compound">ControlElement</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="398" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a456e00eacc0172d3c89309d00ef3e275" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteEditorialElement</definition>
        <argsstring>(pugi::xml_node element, EditorialElement *object)</argsstring>
        <name>WriteEditorialElement</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>element</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_editorial_element" kindref="compound">EditorialElement</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="399" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ae632db323ad35d19d5fd95379da7f737" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteLayerElement</definition>
        <argsstring>(pugi::xml_node element, LayerElement *object)</argsstring>
        <name>WriteLayerElement</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>element</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="400" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aca5a2ae00f291702bdd38c566ee1804d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteRunningElement</definition>
        <argsstring>(pugi::xml_node element, RunningElement *object)</argsstring>
        <name>WriteRunningElement</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>element</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_running_element" kindref="compound">RunningElement</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="401" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a707829040903efe1137c2655b28eb360" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteScoreDefElement</definition>
        <argsstring>(pugi::xml_node element, ScoreDefElement *object)</argsstring>
        <name>WriteScoreDefElement</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>element</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_score_def_element" kindref="compound">ScoreDefElement</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="402" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ab8da9d873380caaa8df8cd0cd54581f6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteSystemElement</definition>
        <argsstring>(pugi::xml_node element, SystemElement *object)</argsstring>
        <name>WriteSystemElement</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>element</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_system_element" kindref="compound">SystemElement</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="403" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a9f4b9e2ac4a0ba83057b9aafaa7475e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteTextElement</definition>
        <argsstring>(pugi::xml_node element, TextElement *object)</argsstring>
        <name>WriteTextElement</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>element</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_text_element" kindref="compound">TextElement</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="404" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aba11fb1aeb867f4ffa14f0582854259c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteAreaPosInterface</definition>
        <argsstring>(pugi::xml_node currentNode, AreaPosInterface *interface)</argsstring>
        <name>WriteAreaPosInterface</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_area_pos_interface" kindref="compound">AreaPosInterface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="406" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a4d549bf47636abdd312a17c20e541c45" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteDurationInterface</definition>
        <argsstring>(pugi::xml_node currentNode, DurationInterface *interface)</argsstring>
        <name>WriteDurationInterface</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_duration_interface" kindref="compound">DurationInterface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="407" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a916b8e4c2c1897a262d579ee4db06bbe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteLinkingInterface</definition>
        <argsstring>(pugi::xml_node currentNode, LinkingInterface *interface)</argsstring>
        <name>WriteLinkingInterface</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_linking_interface" kindref="compound">LinkingInterface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="408" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a504866783e55d363ffd7f9dc26a469d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteFacsimileInterface</definition>
        <argsstring>(pugi::xml_node element, FacsimileInterface *interface)</argsstring>
        <name>WriteFacsimileInterface</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>element</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_facsimile_interface" kindref="compound">FacsimileInterface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="409" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ab72b6feb9a83fb0335ab560cda69bff3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePitchInterface</definition>
        <argsstring>(pugi::xml_node currentNode, PitchInterface *interface)</argsstring>
        <name>WritePitchInterface</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_pitch_interface" kindref="compound">PitchInterface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="410" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1afc9b4244ecc6f4ae05f1f969b1ac5026" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePlistInterface</definition>
        <argsstring>(pugi::xml_node currentNode, PlistInterface *interface)</argsstring>
        <name>WritePlistInterface</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_plist_interface" kindref="compound">PlistInterface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="411" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a48c7a7b166766aaadad10f183d5484ae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WritePositionInterface</definition>
        <argsstring>(pugi::xml_node currentNode, PositionInterface *interface)</argsstring>
        <name>WritePositionInterface</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_position_interface" kindref="compound">PositionInterface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="412" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a7dd7aa6667898fd5b8e1f18a4496b42f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteScoreDefInterface</definition>
        <argsstring>(pugi::xml_node currentNode, ScoreDefInterface *interface)</argsstring>
        <name>WriteScoreDefInterface</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_score_def_interface" kindref="compound">ScoreDefInterface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="413" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1aa954310bd9fb6552cb89aeaccc28bcb7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteTextDirInterface</definition>
        <argsstring>(pugi::xml_node currentNode, TextDirInterface *interface)</argsstring>
        <name>WriteTextDirInterface</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_text_dir_interface" kindref="compound">TextDirInterface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="414" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a02a74e57bbfeaa662990963b56ed54a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteTimePointInterface</definition>
        <argsstring>(pugi::xml_node currentNode, TimePointInterface *interface)</argsstring>
        <name>WriteTimePointInterface</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_time_point_interface" kindref="compound">TimePointInterface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="415" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a19f6c1b0f138637ba41fca55aeccc49c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteTimeSpanningInterface</definition>
        <argsstring>(pugi::xml_node currentNode, TimeSpanningInterface *interface)</argsstring>
        <name>WriteTimeSpanningInterface</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_time_spanning_interface" kindref="compound">TimeSpanningInterface</ref> *</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="416" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for converting members into MEI attributes.</header>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a8439a7457756e2d4493b788590d06352" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::MEIOutput::UuidToMeiStr</definition>
        <argsstring>(Object *element)</argsstring>
        <name>UuidToMeiStr</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="428" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a0f905614aad7304fbf75618a9b1a67a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::MEIOutput::DocTypeToStr</definition>
        <argsstring>(DocType type)</argsstring>
        <name>DocTypeToStr</name>
        <param>
          <type>DocType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="429" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Current element</header>
      <memberdef kind="variable" id="classvrv_1_1_m_e_i_output_1aa5a7e5bf5397d4112fa553cc1256944f" prot="private" static="no" mutable="no">
        <type>pugi::xml_node</type>
        <definition>pugi::xml_node vrv::MEIOutput::m_currentNode</definition>
        <argsstring></argsstring>
        <name>m_currentNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="441" column="20" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_m_e_i_output_1a34f35584724b02b4d87a7fa42591f509" prot="private" static="no" mutable="no">
        <type>std::list&lt; pugi::xml_node &gt;</type>
        <definition>std::list&lt;pugi::xml_node&gt; vrv::MEIOutput::m_nodeStack</definition>
        <argsstring></argsstring>
        <name>m_nodeStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="442" column="15" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_m_e_i_output_1ad2bfa31af6682c4e1197a0731d332d01" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::MEIOutput::m_removeIds</definition>
        <argsstring></argsstring>
        <name>m_removeIds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="443" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_m_e_i_output_1a3e40d7441ed3deba38cf6269bc5ce7f8" prot="private" static="no" mutable="no">
        <type>ListOfObjects</type>
        <definition>ListOfObjects vrv::MEIOutput::m_referredObjects</definition>
        <argsstring></argsstring>
        <name>m_referredObjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="444" column="19" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvrv_1_1_m_e_i_output_1a0793c9c7a4c3d1b9ec446dc6f083c456" prot="private" static="no" mutable="no">
        <type>std::ostringstream</type>
        <definition>std::ostringstream vrv::MEIOutput::m_streamStringOutput</definition>
        <argsstring></argsstring>
        <name>m_streamStringOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="435" column="24" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_m_e_i_output_1a3612aa91e8c1e34f8a1169af57ab3ef3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::MEIOutput::m_indent</definition>
        <argsstring></argsstring>
        <name>m_indent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="436" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_m_e_i_output_1afeb87c0c9700cb1b289d98bb22e62951" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::MEIOutput::m_page</definition>
        <argsstring></argsstring>
        <name>m_page</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="437" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_m_e_i_output_1aed1146a1f2baf4fd64b10cfaba93f873" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::MEIOutput::m_scoreBasedMEI</definition>
        <argsstring></argsstring>
        <name>m_scoreBasedMEI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="438" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_m_e_i_output_1a7d8650837114dda1ae184b215f40f20a" prot="private" static="no" mutable="no">
        <type>pugi::xml_node</type>
        <definition>pugi::xml_node vrv::MEIOutput::m_mei</definition>
        <argsstring></argsstring>
        <name>m_mei</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="439" column="20" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a28a5600705fbc7516e46d77b3a7611cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::MEIOutput::Export</definition>
        <argsstring>()</argsstring>
        <name>Export</name>
        <briefdescription>
<para>The main method for exporting the file to MEI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="179" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a411c82a8c15e23378a0088111548faff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool vrv::MEIOutput::WriteObject</definition>
        <argsstring>(Object *object)</argsstring>
        <name>WriteObject</name>
        <reimplements refid="classvrv_1_1_output_1a2f9a229fd8899ee37bb3575f1c769a1c">WriteObject</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>The main method for write objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="184" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a65f7704c66919e1c03c486505d4d25f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool vrv::MEIOutput::WriteObjectEnd</definition>
        <argsstring>(Object *object)</argsstring>
        <name>WriteObjectEnd</name>
        <reimplements refid="classvrv_1_1_output_1aae4a87a3b59a0de4e1d73ac366639802">WriteObjectEnd</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Writing object method that must be overridden in the child class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="189" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ac42d95b55efe169cd73773767193d962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::MEIOutput::GetOutput</definition>
        <argsstring>(int page=-1)</argsstring>
        <name>GetOutput</name>
        <param>
          <type>int</type>
          <declname>page</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Return the output as a string by writing it to the stringstream member. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="194" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1ada785a9d7f36e7f2eb8e5d9b2e4bdba4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::SetScoreBasedMEI</definition>
        <argsstring>(bool scoreBasedMEI)</argsstring>
        <name>SetScoreBasedMEI</name>
        <param>
          <type>bool</type>
          <declname>scoreBasedMEI</declname>
        </param>
        <briefdescription>
<para>Setter for score-based MEI output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="199" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a4633a24c057d8a068a514c9efcccdb1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::SetIndent</definition>
        <argsstring>(int indent)</argsstring>
        <name>SetIndent</name>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>Setter for indent for the MEI output (default is 3, -1 for tabs) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="204" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a2ecd99315ccb1bac894cca2dc4dfa6ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::SetRemoveIds</definition>
        <argsstring>(bool removeIds)</argsstring>
        <name>SetRemoveIds</name>
        <param>
          <type>bool</type>
          <declname>removeIds</declname>
        </param>
        <briefdescription>
<para>Setter for remove Ids flag for the MEI output (default is false) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="209" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="209" bodyend="209"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a19398f1caaa5c03d5f610ca5c6e1d361" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::MEIOutput::WriteDoc</definition>
        <argsstring>(Doc *doc)</argsstring>
        <name>WriteDoc</name>
        <param>
          <type><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="212" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a83df3f40e7f1e5de7e90d2130b1453ea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteXmlId</definition>
        <argsstring>(pugi::xml_node currentNode, Object *object)</argsstring>
        <name>WriteXmlId</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Write the @xml:id to the currentNode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="217" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a445a8d084085621bc637c72a74c30793" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::MEIOutput::WriteUnsupportedAttr</definition>
        <argsstring>(pugi::xml_node currentNode, Object *object)</argsstring>
        <name>WriteUnsupportedAttr</name>
        <param>
          <type>pugi::xml_node</type>
          <declname>currentNode</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Write unsupported attributes stored in <ref refid="classvrv_1_1_object_1a74ae0995caefb72a71445ba43fce0652" kindref="member">Object::m_unsupported</ref> (not tested) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="391" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_m_e_i_output_1a40a777f41427875c8088b3e8b9958ba9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring vrv::MEIOutput::EscapeSMuFL</definition>
        <argsstring>(std::wstring data)</argsstring>
        <name>EscapeSMuFL</name>
        <param>
          <type>std::wstring</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Escapes SMuFL characters to entities (e.g., &amp;#xe1e7;). </para>
        </briefdescription>
        <detaileddescription>
<para>Must be used in conjunction with (pugi::format_default | pugi::format_no_escapes). Unused for now (see WriteText) because of un-escaped entities in the header. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="424" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is a file output stream for writing MEI files. </para>
    </briefdescription>
    <detaileddescription>
<para>It uses the libmei C++ library. Not implemented. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>vrv::Output</label>
        <link refid="classvrv_1_1_output"/>
      </node>
      <node id="1">
        <label>vrv::MEIOutput</label>
        <link refid="classvrv_1_1_m_e_i_output"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>vrv::Doc</label>
        <link refid="classvrv_1_1_doc"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_expansionMap</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_mdivScoreDef</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>AttMultinumMeasures</label>
      </node>
      <node id="8">
        <label>vrv::ScoreDefElement</label>
        <link refid="classvrv_1_1_score_def_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>AttSystems</label>
      </node>
      <node id="19">
        <label>AttDistances</label>
      </node>
      <node id="17">
        <label>AttTyped</label>
      </node>
      <node id="5">
        <label>vrv::BoundingBox</label>
        <link refid="classvrv_1_1_bounding_box"/>
      </node>
      <node id="9">
        <label>vrv::ScoreDefInterface</label>
        <link refid="classvrv_1_1_score_def_interface"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>vrv::Interface</label>
        <link refid="classvrv_1_1_interface"/>
      </node>
      <node id="13">
        <label>AttMidiTempo</label>
      </node>
      <node id="2">
        <label>vrv::Output</label>
        <link refid="classvrv_1_1_output"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_doc</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>AttEndings</label>
      </node>
      <node id="15">
        <label>AttSpacing</label>
      </node>
      <node id="6">
        <label>vrv::ExpansionMap</label>
        <link refid="classvrv_1_1_expansion_map"/>
      </node>
      <node id="11">
        <label>AttLyricStyle</label>
      </node>
      <node id="7">
        <label>vrv::ScoreDef</label>
        <link refid="classvrv_1_1_score_def"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>vrv::MEIOutput</label>
        <link refid="classvrv_1_1_m_e_i_output"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>AttOptimization</label>
      </node>
      <node id="4">
        <label>vrv::Object</label>
        <link refid="classvrv_1_1_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>AttMeasureNumbers</label>
      </node>
      <node id="18">
        <label>vrv::ObjectListInterface</label>
        <link refid="classvrv_1_1_object_list_interface"/>
      </node>
      <node id="22">
        <label>AttTimeBase</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/verovio/verovio/include/vrv/iomei.h" line="168" column="30" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iomei.h" bodystart="168" bodyend="445"/>
    <listofallmembers>
      <member refid="classvrv_1_1_m_e_i_output_1a0f905614aad7304fbf75618a9b1a67a7" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>DocTypeToStr</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a40a777f41427875c8088b3e8b9958ba9" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>EscapeSMuFL</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a28a5600705fbc7516e46d77b3a7611cb" prot="public" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>Export</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ac42d95b55efe169cd73773767193d962" prot="public" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>GetOutput</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aa5a7e5bf5397d4112fa553cc1256944f" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>m_currentNode</name></member>
      <member refid="classvrv_1_1_output_1ae6309d99027038fc89735e3a4186ded8" prot="protected" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>m_doc</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a3612aa91e8c1e34f8a1169af57ab3ef3" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>m_indent</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a7d8650837114dda1ae184b215f40f20a" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>m_mei</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a34f35584724b02b4d87a7fa42591f509" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>m_nodeStack</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1afeb87c0c9700cb1b289d98bb22e62951" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>m_page</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a3e40d7441ed3deba38cf6269bc5ce7f8" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>m_referredObjects</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ad2bfa31af6682c4e1197a0731d332d01" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>m_removeIds</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aed1146a1f2baf4fd64b10cfaba93f873" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>m_scoreBasedMEI</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a0793c9c7a4c3d1b9ec446dc6f083c456" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>m_streamStringOutput</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1abcbfdbba42ecd1741b64a255ab505c84" prot="public" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>MEIOutput</name></member>
      <member refid="classvrv_1_1_output_1ab8293a488f55b424692bad0940a34d27" prot="public" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>Output</name></member>
      <member refid="classvrv_1_1_output_1a7bbeb13af9cb85b727703fd272fd4406" prot="public" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>Output</name></member>
      <member refid="classvrv_1_1_output_1af349589f17cb08da9e22dba222034a83" prot="public" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>Output</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a4633a24c057d8a068a514c9efcccdb1a" prot="public" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>SetIndent</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a2ecd99315ccb1bac894cca2dc4dfa6ec" prot="public" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>SetRemoveIds</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ada785a9d7f36e7f2eb8e5d9b2e4bdba4" prot="public" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>SetScoreBasedMEI</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a8439a7457756e2d4493b788590d06352" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>UuidToMeiStr</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a13851965a0a5fdebe2db207c8a93e3e9" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteAbbr</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a84d940c4f300ee1071a8f8b4036f7521" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteAccid</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a4ada27c740e9c69f067bc1dde30fac24" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteAdd</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a2965157bdc03e52d3f950020e1bc05a2" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteAnchoredText</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a5b4c1d4823e366d862dcfc60104c37fb" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteAnnot</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ac8a3117790776d9918b6ab85ded63f8f" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteApp</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aba11fb1aeb867f4ffa14f0582854259c" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteAreaPosInterface</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ab34630caa2ea58c25b922e94895df7ec" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteArpeg</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a1791dd9d13f39e7f969f642d1f28138a" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteArtic</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aab72e163888ea381c2c0bc9b6780ca3a" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteBarLine</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a9d56a9e1daa4cbf1497f7055252162d1" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteBeam</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ac74a9653e3c5cce8e1567b57fde2881c" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteBeatRpt</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aef74185bbf0948508be8ea00117aec28" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteBoundaryEnd</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a7397cd1133d6eac28df6cbeefd26bc7f" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteBracketSpan</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ab742f75bc5629b2bd2a1e0a0c28da826" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteBreath</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1acbce59d32997c436ab12994973f8dd47" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteBTrem</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a853d2d3421b590721e5a0e6173b5ef0a" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteCaesura</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a0aac8284ee5294465f721467dc38f077" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteChoice</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aafb3b3474c4db0b7bc13e2decf44561c" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteChord</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a3b300950db20b30551c4a7241aae2e64" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteClef</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a1f0843577626299ef25d5b427968a577" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteControlElement</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a2bb8344f282310360d551f55a98178ae" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteCorr</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a1c8e0942fa40dbc0e90cdaf2620e6ded" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteCourse</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a2099b49d03095b4a8e68bc8e6c844440" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteCustos</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ad5d8e7cb93af0a932fe36b1d4540bd63" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteDamage</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a9f91c44de9dd1b1beef6811812e4c205" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteDel</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a68845796e27f5a47d1b8c072f2a2897f" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteDir</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a19398f1caaa5c03d5f610ca5c6e1d361" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteDoc</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a683efcc406cabeea7009445c4f889c71" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteDot</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a4d549bf47636abdd312a17c20e541c45" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteDurationInterface</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1af3e23e6190a63065365ec2423ff64b46" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteDynam</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a456e00eacc0172d3c89309d00ef3e275" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteEditorialElement</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a538972bc260ef8e1c2c210b14a319538" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteEnding</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aec53b6433e64b76d547368ec213b7b1c" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteExpan</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a6f9cfc224901a1432ae27eae262d3964" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteExpansion</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a6720fcf6550f40bd76881163bdd67633" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteF</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ae1f25461b0d0e17048351442d3a717ba" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteFacsimile</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a504866783e55d363ffd7f9dc26a469d8" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteFacsimileInterface</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1af83fbf28620bf04721a413a2ae64f668" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteFb</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aff7a8759cb51742f86719fbbd5704b3a" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteFermata</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aeffed77d5d4573269fceea9829eaec24" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteFig</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a51dc1968a6d84db1bbec8907354080ea" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteFing</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a5c4c5b298afd747ea5dd45ceff7f4c7f" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteFTrem</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a8784775af7819e3d9aaab73c2e577c8b" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteGliss</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a2040dbd01a87a3181b70537ed7efdd82" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteGraceGrp</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ac0caa0ddfaf64decb5e1cf0918a430e5" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteGrpSym</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a3d452208873d90d3e340e0d6073eafd5" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteHairpin</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ab82d49af5c32bffae5c0928969f9cf54" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteHalfmRpt</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a2ad979a6db03f0860afdcea8a91bb8f8" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteHarm</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1adbbc2f257cae59e8c62259dea7b56cb2" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteInstrDef</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a9351cfe5e3c69099f314c5cc0cf5c717" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteKeyAccid</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a2c526e8b3995a2dc2d6c41e32b9a3436" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteKeySig</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ab9d3af96ddd4e2f3ae4df83bc5e10a51" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteLabel</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a57da761d6e12186ae6acdb6960f6e3b3" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteLabelAbbr</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a6f6cb152b9da1b8f539457d3bfc82d60" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteLayer</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ae632db323ad35d19d5fd95379da7f737" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteLayerElement</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aa0a3ac225b35982a598aa84da656030f" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteLb</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a9a04f734a9c6281b1cd473cad1be242f" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteLem</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a8dee087667b0ea5fceef39543392782d" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteLigature</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a916b8e4c2c1897a262d579ee4db06bbe" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteLinkingInterface</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a9c2a4eee50c9f4aa1971e2762ea47c97" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteLv</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aa673c000af3853b637c0dd6ededbe6c2" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMdiv</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1afab2e9af0aba89cab39d8f031a17d7ac" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMeasure</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a4e16df79d62b57dcd9fcf081590dd283" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMensur</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a2307939bf33840d53e87970792341dc6" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMeterSig</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a02fb0667a34cdc84312e1c2d9893943f" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMeterSigGrp</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a8fa0a8db793f7c38d129a6f8ec314132" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMNum</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ae925f6146e8719312cea90f25356e6e4" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMordent</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ae537495211824ce157da0c32564b87dd" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMRest</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aa67e475311a2415efa3635d4a402ca7d" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMRpt</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a4727d390a509f2fc48f7b2acadcc94ec" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMRpt2</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a8d84d35c5af8947043248376738a30aa" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMSpace</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a40eb86fae99a1c0c823d81a83ccd3066" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMultiRest</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ad95ab5dfe3862ffd3420423b952c32ce" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteMultiRpt</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a8b1fb898a14112b7d541fe7284ccc74b" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteNc</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ac2cb44381793b52fd9849bebafa92ec1" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteNeume</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1af46e007a42bf9cc46a0847b599bc9396" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteNote</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a7d432798b27cc9eb080d0e857d727b60" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteNum</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a411c82a8c15e23378a0088111548faff" prot="public" virt="virtual"><scope>vrv::MEIOutput</scope><name>WriteObject</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a65f7704c66919e1c03c486505d4d25f4" prot="public" virt="virtual"><scope>vrv::MEIOutput</scope><name>WriteObjectEnd</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a7266369c9dbbd72ea7976627a7fb9065" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteOctave</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ace561606ef6e6dd41c1715115cfbb05b" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteOrig</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a2b55dddc0776ccbcf5bb864639f9cd1d" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePage</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1afb53289f6cda969b5c77742a79070993" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePages</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a13d9cb7cb25d5020b919f81341d68ebd" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePb</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a7bcfd4f66c4c7aca279546950f2dc7a5" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePedal</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aef20e27e37648add44fae663ce3347c4" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePgFoot</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aa0c198a3562d694f19b23be9f74b64d3" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePgFoot2</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aeef815db31d71fc3689571c798c5677e" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePgHead</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aa331145e328b74c53ed2dce55f3fa38b" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePgHead2</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a22169b018d45666428c48808aab2cb06" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePhrase</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a70ef2021ac733991b0ab0cd61c0a5b0c" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePitchInflection</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ab72b6feb9a83fb0335ab560cda69bff3" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePitchInterface</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a290a09396eb2df4cf4b2007bc90fa998" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePlica</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1afc9b4244ecc6f4ae05f1f969b1ac5026" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePlistInterface</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a48c7a7b166766aaadad10f183d5484ae" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WritePositionInterface</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1afca9266139567da2d3a212c591481cb7" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteProport</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ac2e3f962f51469415f9eb72347287580" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteRdg</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a822e3f22fb115df8332f9424e9022cfc" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteRef</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a1c8a46c297794b6a894d7172bdac68e4" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteReg</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a7c50fe78af63ec36f565c1076d1db9c7" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteReh</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a197005dd079215fa7432fd9912125e01" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteRend</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a5a4880687ce3558f070aef3ee548374a" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteRest</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a354fb3bb57b30e5308491c8ae978ec9e" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteRestore</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aca5a2ae00f291702bdd38c566ee1804d" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteRunningElement</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aded12a347e69de2320f604b03fa1730b" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSb</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a0465c4d548b8ddd92010c02b72779e0c" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteScore</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a82c1df81fac9c2b65463bd1d68c8c0cd" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteScoreDef</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a707829040903efe1137c2655b28eb360" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteScoreDefElement</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a7dd7aa6667898fd5b8e1f18a4496b42f" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteScoreDefInterface</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1af05189e3d97812ce8aa836353c298590" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSection</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a7e7a4b4cfe3892fac2f49f2b1bf09648" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSic</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a52b97b578191d9e99dc5a3049d2a1e92" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSlur</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1abd2ca649e2336da60bb64312ee92d787" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSpace</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a3d5458f26f28e4119644f512f2705d3c" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteStaff</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aaca0a609777e6f2cbc355d5921eb3fd9" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteStaffDef</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a7cb1aa3da8dd87c2eefd7c4e8e3ef56c" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteStaffGrp</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a2d7d8f370ab438caf977794da116f2ed" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSubst</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a5ddb3463dc84d52fd63aad7d8d8a87a4" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSupplied</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a15163f49d3f27a48024cbab16bfd66b2" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSurface</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a6bc225230312aeceecec5c873a859629" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSvg</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a7e5d1759d8116832a7d13e156c865c0a" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSyl</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a18bc8ff761d6ce56d10be456fc83021b" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSyllable</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a7d8636e8173d0c6eb0aeb9690a25017d" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSystem</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ab8da9d873380caaa8df8cd0cd54581f6" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteSystemElement</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1af928da4de710a69cd753604f4ec20848" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteTabDurSym</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a9b92883b1aafb14373db72537cccad8e" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteTabGrp</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a10b4c253592a6de1dea8cf1ebac7f41b" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteTempo</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a9874de720ba2edfae4ace7df1cbf84d7" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteText</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aa954310bd9fb6552cb89aeaccc28bcb7" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteTextDirInterface</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a9f4b9e2ac4a0ba83057b9aafaa7475e5" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteTextElement</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ade86f953ac20b0fa3855651596f4ede5" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteTie</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a02a74e57bbfeaa662990963b56ed54a7" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteTimePointInterface</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a19f6c1b0f138637ba41fca55aeccc49c" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteTimeSpanningInterface</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ae0c653bb673aeb6e0ff51a9134a301aa" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteTrill</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ac2d5859c404e427591f1c95482df599f" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteTuning</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a2fe0238c4ab2675b983b655d3e77c1f1" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteTuplet</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1aa493098663f440fbde40439ad1817be9" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteTurn</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a42442639dd9079214ad66c8d8b52f1ce" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteUnclear</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a445a8d084085621bc637c72a74c30793" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteUnsupportedAttr</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a621488d779012514a571695bb0220bbc" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteVerse</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a83df3f40e7f1e5de7e90d2130b1453ea" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteXmlId</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1ada03af11778c9ceb30ed4d0000d96e6e" prot="private" virt="non-virtual"><scope>vrv::MEIOutput</scope><name>WriteZone</name></member>
      <member refid="classvrv_1_1_m_e_i_output_1a0fdf610034d25168589b7cb88729e205" prot="public" virt="virtual"><scope>vrv::MEIOutput</scope><name>~MEIOutput</name></member>
      <member refid="classvrv_1_1_output_1a8237f1ce839467ff66ed61126dfa5588" prot="public" virt="virtual"><scope>vrv::MEIOutput</scope><name>~Output</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
