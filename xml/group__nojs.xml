<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__nojs" kind="group">
    <compoundname>nojs</compoundname>
    <title>Methods not available in the JavaScript toolkit</title>
      <sectiondef kind="user-defined">
      <header>Utility methods</header>
      <memberdef kind="function" id="group__nojs_1ga86dae67d6cae81d8026da6968e665e99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetID</definition>
        <argsstring>()</argsstring>
        <name>GetID</name>
        <briefdescription>
<para>Return the ID of the <ref refid="classvrv_1_1_toolkit" kindref="compound">Toolkit</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The ID as as string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="96" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga03ba0015bcb367ba3c970b8f047b45ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetResourcePath</definition>
        <argsstring>() const</argsstring>
        <name>GetResourcePath</name>
        <briefdescription>
<para>Get the resource path for the <ref refid="classvrv_1_1_toolkit" kindref="compound">Toolkit</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A string with the resource path </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="105" column="17"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1gaed5c67aae6d92d7c8d1d68edf5a5ae65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetResourcePath</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>SetResourcePath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Set the resource path for the <ref refid="classvrv_1_1_toolkit" kindref="compound">Toolkit</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para>This method needs to be called if the constructor had initFont=false or if the resource path needs to be changed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the resource directory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the resources was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="118" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga0dacf26288d829c51737cbca389c7117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetLog</definition>
        <argsstring>()</argsstring>
        <name>GetLog</name>
        <briefdescription>
<para>Get the log content for the latest operation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The log content as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="125" column="17"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga293b23b38c10be4da8b38c4b3a769d1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetVersion</definition>
        <argsstring>()</argsstring>
        <name>GetVersion</name>
        <briefdescription>
<para>Return the version number. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the version number as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="132" column="17"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1gaa851c49e48d4fd83e71f1a457f022366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Toolkit::ResetXmlIdSeed</definition>
        <argsstring>(int seed)</argsstring>
        <name>ResetXmlIdSeed</name>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
<para>Reset the seed used to generate MEI xml:id attribute values. </para>
        </briefdescription>
        <detaileddescription>
<para>Passing 0 will seed the xml:id generator with a random (time-based) seed value. This method will have no effect if the <ndash/>xml-id-checksum option is set.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>The seed value for generating the xml:id values (0 for a time-based random seed) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="142" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Loading methods</header>
      <memberdef kind="function" id="group__nojs_1ga3859f9341d415376b7d8f11a1aa8e352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>LoadFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Load a file from the file system. </para>
        </briefdescription>
        <detaileddescription>
<para>Previously convert UTF16 files to UTF8 or extract files from MusicXML compressed files.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename to be loaded </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="163" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga00a6268261b17ac90ba802ea9780e2df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::ValidatePAEFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>ValidatePAEFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Validate the Plaine and Easie file from the file system. </para>
        </briefdescription>
        <detaileddescription>
<para>The method calls <ref refid="group__nojs_1ga7311cd71df650b10f1ce75e037b49268" kindref="member">Toolkit::ValidatePAE</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename to be validated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with the validation warnings or errors </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="202" column="17"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga9a08fd8e89da6c2c709eaae69e28b2b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadData</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>LoadData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Load a string data with the type previously specified in the options. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, the methods try to auto-detect the type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A string with the data (e.g., MEI data) to be loaded </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the data was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="173" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1gaeae2ad736af0f0d436c9131745057556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadZipDataBase64</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>LoadZipDataBase64</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Load a MusicXML compressed file passed as base64 encoded string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A ZIP file as a base64 encoded string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the data was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="181" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1gabf4167617faed8347a7da3291e927e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::LoadZipDataBuffer</definition>
        <argsstring>(const unsigned char *data, int length)</argsstring>
        <name>LoadZipDataBuffer</name>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Load a MusicXML compressed file passed as a buffer of bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A ZIP file as a buffer of bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the data buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the data was successfully loaded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="190" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga7311cd71df650b10f1ce75e037b49268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::ValidatePAE</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>ValidatePAE</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Validate the Plaine and Easie code passed in the string data. </para>
        </briefdescription>
        <detaileddescription>
<para>A single JSON object is returned when there is a global input error. When reading the input succeeds, validation is grouped by input keys. The methods always returns errors in PAE pedantic mode. No data remains loaded after the validation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A string with the data in JSON or with PAE <computeroutput>@</computeroutput> keys </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A stringified JSON object with the validation warnings or errors </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="215" column="17"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1gaf24ccae4968a35e71b5fd82b70ee086c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetPageCount</definition>
        <argsstring>()</argsstring>
        <name>GetPageCount</name>
        <briefdescription>
<para>Return the number of pages in the loaded document. </para>
        </briefdescription>
        <detaileddescription>
<para>The number of pages depends one the page size and if encoded layout was taken into account or not.</para>
<para><simplesect kind="return"><para>The number of pages </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="224" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getter and setter for options</header>
      <memberdef kind="function" id="group__nojs_1ga68c3c9a776a1ec7e9734bb7540864e49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::Toolkit::GetOption</definition>
        <argsstring>(const std::string &amp;option, bool defaultValue=false) const</argsstring>
        <name>GetOption</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>option</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>defaultValue</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the value for an option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>True to get the default value of the option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The option value as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="277" column="17"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga580fc9fe7eb90047c8ebbe576c96697e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetOption</definition>
        <argsstring>(const std::string &amp;option, const std::string &amp;value)</argsstring>
        <name>SetOption</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>option</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the value for an option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The option value as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the option was successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="288" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga53b48c97c58b0da6e6083193ebd966e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetScale</definition>
        <argsstring>(int scale)</argsstring>
        <name>SetScale</name>
        <param>
          <type>int</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Set the scale option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the scale value as integer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the option was successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="303" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga321e0a62f5f15b1c5cd522fb0e514d3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Toolkit::GetScale</definition>
        <argsstring>()</argsstring>
        <name>GetScale</name>
        <briefdescription>
<para>Get the scale option. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the scale option as integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="312" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" bodystart="312" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1gabbe738f9285b31845ea71cb322d9a581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetInputFrom</definition>
        <argsstring>(std::string const &amp;inputFrom)</argsstring>
        <name>SetInputFrom</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>inputFrom</declname>
        </param>
        <briefdescription>
<para>Set the input from option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>the input from value as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the option was successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="322" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga765716f5361637b41914ee6b74e39ac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SetOutputTo</definition>
        <argsstring>(std::string const &amp;outputTo)</argsstring>
        <name>SetOutputTo</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outputTo</declname>
        </param>
        <briefdescription>
<para>Set the output to option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputTo</parametername>
</parameternamelist>
<parameterdescription>
<para>the output to value as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the option was successfully set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="332" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Rendering methods</header>
      <memberdef kind="function" id="group__nojs_1ga3ff0a3aa8deeef77c291d496ee0d2959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToSVGFile</definition>
        <argsstring>(const std::string &amp;filename, int pageNo=1)</argsstring>
        <name>RenderToSVGFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pageNo</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Render a page to SVG and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="408" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga298894afff860e0675f2ca3b199fda98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToMIDIFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>RenderToMIDIFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Render a document to MIDI and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="425" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga4360e00f3093a9360bf231e3d7f48c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToPAEFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>RenderToPAEFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Render a document to Plaine and Easie and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para>Only the top staff / layer is exported.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="446" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nojs_1ga9b4d838a1d7256322a4f842877794905" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::RenderToTimemapFile</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;jsonOptions=&quot;&quot;)</argsstring>
        <name>RenderToTimemapFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Render a document to timemap and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="465" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Humdrum related methods</header>
      <memberdef kind="function" id="group__nojs_1gade214f7c4d835643aa13046d8ae000ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::GetHumdrumFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>GetHumdrumFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Write the humdrum buffer to the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="512" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>MEI related methods</header>
      <memberdef kind="function" id="group__nojs_1ga0206f317ac7ebe3c61df606c8afcd4ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Toolkit::SaveFile</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;jsonOptions=&quot;&quot;)</argsstring>
        <name>SaveFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>jsonOptions</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Get the MEI and save it to the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The output filename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jsonOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>A stringified JSON object with the output options </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file was successfully written </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/toolkit.h" line="542" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
