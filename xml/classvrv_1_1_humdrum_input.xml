<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvrv_1_1_humdrum_input" kind="class" language="C++" prot="public">
    <compoundname>vrv::HumdrumInput</compoundname>
    <basecompoundref refid="classvrv_1_1_input" prot="public" virt="non-virtual">vrv::Input</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1add29b46c744beda8109f7baa5435fd72" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::m_filename</definition>
        <argsstring></argsstring>
        <name>m_filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="822" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="822" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a7fd28b216473ac0e1d153ad723942b6c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::HumdrumInput::m_debug</definition>
        <argsstring></argsstring>
        <name>m_debug</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="825" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="825" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ad6549b015b840b7629579720509381bb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::HumdrumInput::m_comment</definition>
        <argsstring></argsstring>
        <name>m_comment</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="829" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="829" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a5e0d3f570ecf75477e3907bbb3408f55" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_score" kindref="compound">Score</ref> *</type>
        <definition>Score* vrv::HumdrumInput::m_score</definition>
        <argsstring></argsstring>
        <name>m_score</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="834" column="11" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="834" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ae0a3bed35ca97a15f9c610084ea42be1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classvrv_1_1_section" kindref="compound">Section</ref> * &gt;</type>
        <definition>std::vector&lt;Section *&gt; vrv::HumdrumInput::m_sections</definition>
        <argsstring></argsstring>
        <name>m_sections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="837" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="837" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a39e79449bf4882fae8b5c07259c15f75" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::m_lastsection</definition>
        <argsstring></argsstring>
        <name>m_lastsection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="840" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="840" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1acb5056622031900fc3a6accccfabf317" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classvrv_1_1_staff_def" kindref="compound">vrv::StaffDef</ref> * &gt;</type>
        <definition>std::vector&lt;vrv::StaffDef *&gt; vrv::HumdrumInput::m_staffdef</definition>
        <argsstring></argsstring>
        <name>m_staffdef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="853" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="853" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1af9279e2aaa5b342293fce6fa590567c1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classvrv_1_1_measure" kindref="compound">vrv::Measure</ref> * &gt;</type>
        <definition>std::vector&lt;vrv::Measure *&gt; vrv::HumdrumInput::m_measures</definition>
        <argsstring></argsstring>
        <name>m_measures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="855" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="855" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ae0b2241e7f21d2dccec7d923d1c43796" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_measure" kindref="compound">vrv::Measure</ref> *</type>
        <definition>vrv::Measure* vrv::HumdrumInput::m_measure</definition>
        <argsstring></argsstring>
        <name>m_measure</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="858" column="18" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="858" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ab15cd9c2be6568f82918b845c94db257" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_staff" kindref="compound">vrv::Staff</ref> *</type>
        <definition>vrv::Staff* vrv::HumdrumInput::m_staff</definition>
        <argsstring></argsstring>
        <name>m_staff</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="861" column="16" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a80560f3556f928a421c52f85bedf57bd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::HumdrumInput::m_currentstaff</definition>
        <argsstring></argsstring>
        <name>m_currentstaff</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="864" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="864" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a50b9e0452cc107227b6af3cab90f252c" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_layer" kindref="compound">vrv::Layer</ref> *</type>
        <definition>vrv::Layer* vrv::HumdrumInput::m_layer</definition>
        <argsstring></argsstring>
        <name>m_layer</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="867" column="16" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="867" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1aec1492c53e324cb751d7757884f305c7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::HumdrumInput::m_currentlayer</definition>
        <argsstring></argsstring>
        <name>m_currentlayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="869" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="869" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1aa42f64725eca78e2a0230befdab73200" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::vector&lt; hum::HTp &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;std::vector&lt;hum::HTp&gt; &gt; &gt; vrv::HumdrumInput::m_layertokens</definition>
        <argsstring></argsstring>
        <name>m_layertokens</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="873" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="873" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a411dfd66847c1b1461c0ab51be83ce78" prot="private" static="no" mutable="no">
        <type>std::vector&lt; hum::HTp &gt;</type>
        <definition>std::vector&lt;hum::HTp&gt; vrv::HumdrumInput::m_staffstarts</definition>
        <argsstring></argsstring>
        <name>m_staffstarts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="878" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="878" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a83579466cd48e47193f6c38a0feb1dc7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::HumdrumInput::m_rkern</definition>
        <argsstring></argsstring>
        <name>m_rkern</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="881" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="881" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a192419f45990a367628e98ea1d1e770e" prot="private" static="no" mutable="no">
        <type>hum::HumdrumFileSet</type>
        <definition>hum::HumdrumFileSet vrv::HumdrumInput::m_infiles</definition>
        <argsstring></argsstring>
        <name>m_infiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="884" column="25" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="884" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a2ecaff0ad71725f5ec2b36f235a6c424" prot="private" static="no" mutable="no">
        <type>std::vector&lt; hum::HumNum &gt;</type>
        <definition>std::vector&lt;hum::HumNum&gt; vrv::HumdrumInput::m_timesigdurs</definition>
        <argsstring></argsstring>
        <name>m_timesigdurs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="887" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="887" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ad56ba9f58ba25c9f92983e779ef994f3" prot="private" static="no" mutable="no">
        <type>hum::HumNum</type>
        <definition>hum::HumNum vrv::HumdrumInput::m_tupletscaling</definition>
        <argsstring></argsstring>
        <name>m_tupletscaling</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="890" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="890" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ad10b286d19119a05cc5a1b3bbae8c2a7" prot="private" static="no" mutable="no">
        <type>hum::HumNum</type>
        <definition>hum::HumNum vrv::HumdrumInput::m_omd</definition>
        <argsstring></argsstring>
        <name>m_omd</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="893" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="893" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a56213ea199e6516c09eedafee643ffc1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; int, hum::HTp &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;int, hum::HTp&gt; &gt; vrv::HumdrumInput::m_oclef</definition>
        <argsstring></argsstring>
        <name>m_oclef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="896" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="896" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a3d1cebef75021c6111d45d5146e19ceb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; int, hum::HTp &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;int, hum::HTp&gt; &gt; vrv::HumdrumInput::m_omet</definition>
        <argsstring></argsstring>
        <name>m_omet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="899" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a71b4c6211e3795acefad6b218e40675e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; int, hum::HTp &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;int, hum::HTp&gt; &gt; vrv::HumdrumInput::m_okey</definition>
        <argsstring></argsstring>
        <name>m_okey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="902" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="902" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a3fa6a763418b2941d221d5a3ec520678" prot="private" static="no" mutable="no">
        <type>std::vector&lt; humaux::StaffStateVariables &gt;</type>
        <definition>std::vector&lt;humaux::StaffStateVariables&gt; vrv::HumdrumInput::m_staffstates</definition>
        <argsstring></argsstring>
        <name>m_staffstates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="905" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a0bda86220cc0e8385e0120d415bdb746" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::HumdrumInput::m_measureIndex</definition>
        <argsstring></argsstring>
        <name>m_measureIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="909" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="909" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a784058f890a31cd0170fb6b4ed185da8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::m_harm</definition>
        <argsstring></argsstring>
        <name>m_harm</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="914" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="914" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1aa05270d0d717bbfe46c40d7ec8e63272" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::m_fing</definition>
        <argsstring></argsstring>
        <name>m_fing</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="919" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="919" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a0ffbba51a8b75167eaa74778bd664f84" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::m_string</definition>
        <argsstring></argsstring>
        <name>m_string</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="924" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="924" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a8d1aae317b9ba3302d9feccb3e8af8d9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::m_mens</definition>
        <argsstring></argsstring>
        <name>m_mens</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="929" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="929" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a6d61dfd5085bf419921f83d9f5739106" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::m_fb</definition>
        <argsstring></argsstring>
        <name>m_fb</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="934" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="934" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a61b075ee93003ab05f0d7f7de42d386a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; vrv::HumdrumInput::m_fbstaff</definition>
        <argsstring></argsstring>
        <name>m_fbstaff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="940" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="940" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a4ae6f303023eda1ddac452b785ea0694" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::HumdrumInput::m_fbstates</definition>
        <argsstring></argsstring>
        <name>m_fbstates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="945" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="945" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ab4eb94de989f870eacb76495e0396969" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::m_setrightstem</definition>
        <argsstring></argsstring>
        <name>m_setrightstem</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="948" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="948" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a9e770435f3f18bc442a3593b25e46ecc" prot="private" static="no" mutable="no">
        <type>data_BARRENDITION</type>
        <definition>data_BARRENDITION vrv::HumdrumInput::m_leftbarstyle</definition>
        <argsstring></argsstring>
        <name>m_leftbarstyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="953" column="23" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="953" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a0dbc5b50ade689e8d058bb16ead41110" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_humdrum_signifiers" kindref="compound">HumdrumSignifiers</ref></type>
        <definition>HumdrumSignifiers vrv::HumdrumInput::m_signifiers</definition>
        <argsstring></argsstring>
        <name>m_signifiers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="958" column="23" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="958" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a1bdd1a29c8b7ec669f86a9303b8d18fc" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::HumdrumInput::m_multirest</definition>
        <argsstring></argsstring>
        <name>m_multirest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="961" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="961" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ac2326f6988b68f3cd1ad7a99038d421f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; hum::HTp &gt;</type>
        <definition>std::vector&lt;hum::HTp&gt; vrv::HumdrumInput::m_sectionlabels</definition>
        <argsstring></argsstring>
        <name>m_sectionlabels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="964" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="964" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ad9cf2e6573d6adb087ef792e76f998a7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; hum::HTp &gt;</type>
        <definition>std::vector&lt;hum::HTp&gt; vrv::HumdrumInput::m_numberlesslabels</definition>
        <argsstring></argsstring>
        <name>m_numberlesslabels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="967" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="967" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a717f17e74635ce932c33c1d2f0cc00e1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::HumdrumInput::m_endingnum</definition>
        <argsstring></argsstring>
        <name>m_endingnum</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="970" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="970" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a64af2db39441c2121b3762838202a27c" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_ending" kindref="compound">vrv::Ending</ref> *</type>
        <definition>vrv::Ending* vrv::HumdrumInput::m_currentending</definition>
        <argsstring></argsstring>
        <name>m_currentending</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="973" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="973" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ac515f713730b24e64934a1e4f5667db0" prot="private" static="no" mutable="no">
        <type><ref refid="classvrv_1_1_section" kindref="compound">vrv::Section</ref> *</type>
        <definition>vrv::Section* vrv::HumdrumInput::m_currentsection</definition>
        <argsstring></argsstring>
        <name>m_currentsection</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="976" column="18" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="976" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1aa114f2926683a62fb88bf0aea9241e95" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::m_has_color_spine</definition>
        <argsstring></argsstring>
        <name>m_has_color_spine</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="979" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="979" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1aa2a00a80e32a14418230307f3da6b85f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::string &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;std::string&gt; &gt; vrv::HumdrumInput::m_spine_color</definition>
        <argsstring></argsstring>
        <name>m_spine_color</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="983" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="983" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1adc0d45a88a91c2d00afd59e0cab5fd0d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::HumdrumInput::m_transpose</definition>
        <argsstring></argsstring>
        <name>m_transpose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="986" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="986" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a1c7a379ca3532bf3996195a3654861fb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::m_show_cautionary_keysig</definition>
        <argsstring></argsstring>
        <name>m_show_cautionary_keysig</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="990" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="990" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a5bd3d5e39dc9a78f552792af4b5b10bb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::m_hasTremolo</definition>
        <argsstring></argsstring>
        <name>m_hasTremolo</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="993" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="993" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ad8ced3487cded883a2058c10598a9885" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::HumdrumInput::m_placement</definition>
        <argsstring></argsstring>
        <name>m_placement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1002" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1002" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a7e58c8e9d360d73166ffccc292b18fee" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::HumdrumInput::m_reverse</definition>
        <argsstring></argsstring>
        <name>m_reverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1009" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1afec5bfbcad7b2a34f337be32fa1009d9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::HumdrumInput::m_absolute</definition>
        <argsstring></argsstring>
        <name>m_absolute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1015" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1afeba4703d65525494b36feed97d66844" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::HumdrumInput::m_slash</definition>
        <argsstring></argsstring>
        <name>m_slash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1021" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1021" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a470ee06df7cfe179e67c5106b008d789" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::m_breaks</definition>
        <argsstring></argsstring>
        <name>m_breaks</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1024" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1024" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a6dfa9a9aa895e3020e5ae5008ece2e81" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; vrv::HumdrumInput::m_nulls</definition>
        <argsstring></argsstring>
        <name>m_nulls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1027" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1027" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a0762f7724aa7b963489ef2b0eeeff49e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; hum::HumNum &gt;</type>
        <definition>std::vector&lt;hum::HumNum&gt; vrv::HumdrumInput::m_duradj</definition>
        <argsstring></argsstring>
        <name>m_duradj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1032" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1032" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ac5c4be39d8d712b0b268fd37c246a261" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; vrv::HumdrumInput::m_ignore</definition>
        <argsstring></argsstring>
        <name>m_ignore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1036" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1036" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1af35dd76c8cbe2f7c9596b0aeb84199c2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::tuple&lt; bool, hum::HumNum, <ref refid="classvrv_1_1_clef" kindref="compound">Clef</ref> * &gt; &gt;</type>
        <definition>std::vector&lt;std::tuple&lt;bool, hum::HumNum, Clef *&gt; &gt; vrv::HumdrumInput::m_clef_buffer</definition>
        <argsstring></argsstring>
        <name>m_clef_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1039" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1039" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a7b0ba99ef79933677a5ba29171e36471" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref> * &gt;</type>
        <definition>std::vector&lt;Slur *&gt; vrv::HumdrumInput::m_ftrem_slurs</definition>
        <argsstring></argsstring>
        <name>m_ftrem_slurs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1043" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1043" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a078fd7aeeffdf75c77e71606a32b16f6" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, string &gt;</type>
        <definition>std::map&lt;int, string&gt; vrv::HumdrumInput::m_group_name</definition>
        <argsstring></argsstring>
        <name>m_group_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1046" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1046" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1afbc5864b39c5efa4886472aa1e8eda32" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, hum::HTp &gt;</type>
        <definition>std::map&lt;int, hum::HTp&gt; vrv::HumdrumInput::m_group_name_tok</definition>
        <argsstring></argsstring>
        <name>m_group_name_tok</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1049" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1049" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1aac75af28ae9de181fc2bd44ac1e85a06" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, string &gt;</type>
        <definition>std::map&lt;int, string&gt; vrv::HumdrumInput::m_group_abbr</definition>
        <argsstring></argsstring>
        <name>m_group_abbr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1052" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1052" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a1d9934ee4acbe3a0cd47b197f650164a" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, hum::HTp &gt;</type>
        <definition>std::map&lt;int, hum::HTp&gt; vrv::HumdrumInput::m_group_abbr_tok</definition>
        <argsstring></argsstring>
        <name>m_group_abbr_tok</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1055" column="14" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1055" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ab3e13b06e39dfb56674d67c0ad636bff" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; vrv::HumdrumInput::m_scordatura_marker</definition>
        <argsstring></argsstring>
        <name>m_scordatura_marker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1058" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1058" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1ae90d90f9730e0ff814ae642184b385b1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; hum::HumTransposer * &gt;</type>
        <definition>std::vector&lt;hum::HumTransposer *&gt; vrv::HumdrumInput::m_scordatura_transposition</definition>
        <argsstring></argsstring>
        <name>m_scordatura_transposition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1061" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1061" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_humdrum_input_1a61130cd2f355fa2bd44363afd3168a32" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::HumdrumInput::m_humtype</definition>
        <argsstring></argsstring>
        <name>m_humtype</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="1065" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="1065" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2306faaf6a47b0b5dbb23beadf43df24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::HumdrumInput::HumdrumInput</definition>
        <argsstring>(vrv::Doc *doc)</argsstring>
        <name>HumdrumInput</name>
        <param>
          <type><ref refid="classvrv_1_1_doc" kindref="compound">vrv::Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="391" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1abb67aed16d8d1fe9ba31d0d1987bacf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vrv::HumdrumInput::~HumdrumInput</definition>
        <argsstring>()</argsstring>
        <name>~HumdrumInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="392" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3a67f681e9a3f1da8e5ef0f8c02a9c7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool vrv::HumdrumInput::Import</definition>
        <argsstring>(const std::string &amp;humdrum)</argsstring>
        <name>Import</name>
        <reimplements refid="classvrv_1_1_input_1a7a19750d81786d0a71ab4665a16b78e1">Import</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>humdrum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="394" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a6c2c242677525679b19ba59522fc943b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::parseEmbeddedOptions</definition>
        <argsstring>(vrv::Doc *doc)</argsstring>
        <name>parseEmbeddedOptions</name>
        <param>
          <type><ref refid="classvrv_1_1_doc" kindref="compound">vrv::Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="396" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac49505dccf4447323f739c2137ccf38a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::finalizeDocument</definition>
        <argsstring>(vrv::Doc *doc)</argsstring>
        <name>finalizeDocument</name>
        <param>
          <type><ref refid="classvrv_1_1_doc" kindref="compound">vrv::Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="397" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af18f9af9ee2c087887a3d6b83c3d8b8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::GetHumdrumString</definition>
        <argsstring>()</argsstring>
        <name>GetHumdrumString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="401" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aca3de63522d2e6064e256e5ae1cae4e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::GetMeiString</definition>
        <argsstring>()</argsstring>
        <name>GetMeiString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="402" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aef228f82853ed6c8bee24974609bdcef" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="405" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1adac7f4973c52b08488b1d838f001095b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::convertHumdrum</definition>
        <argsstring>()</argsstring>
        <name>convertHumdrum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="406" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a823c8ec47d1b6f588865efbe992e07be" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setupMeiDocument</definition>
        <argsstring>()</argsstring>
        <name>setupMeiDocument</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="407" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a32fbe2d4d96280c830d725d67b204abb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getMeasureEndLine</definition>
        <argsstring>(int startline)</argsstring>
        <name>getMeasureEndLine</name>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="408" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a8364bd9c4995fe72e0ace785904d6578" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::convertSystemMeasure</definition>
        <argsstring>(int &amp;line)</argsstring>
        <name>convertSystemMeasure</name>
        <param>
          <type>int &amp;</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="409" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a47bc7378a18b649503600b7338ec78b4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::convertMeasureStaves</definition>
        <argsstring>(int startline, int endline)</argsstring>
        <name>convertMeasureStaves</name>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="410" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a60a4b41fc01ceccbc1940df3932dee69" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::convertMeasureStaff</definition>
        <argsstring>(int track, int startline, int endline, int n, int layercount)</argsstring>
        <name>convertMeasureStaff</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>layercount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="411" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a26fc26d482501e693704a95aa6970002" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setupSystemMeasure</definition>
        <argsstring>(int startline, int endline)</argsstring>
        <name>setupSystemMeasure</name>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="412" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5df04820b6d0372e44e1597dc7187945" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::convertStaffLayer</definition>
        <argsstring>(int track, int startline, int endline, int layerindex)</argsstring>
        <name>convertStaffLayer</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>layerindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="413" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a948ce102b004e614967ad72823d1b9c7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getMeasureNumber</definition>
        <argsstring>(int startline, int endline)</argsstring>
        <name>getMeasureNumber</name>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="414" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a169ee617dfb662c29ea33c1eaec5bc64" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::fillContentsOfLayer</definition>
        <argsstring>(int track, int startline, int endline, int layerindex)</argsstring>
        <name>fillContentsOfLayer</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>layerindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="415" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af4eab729123dcbd0bd431991740544fc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::calculateLayout</definition>
        <argsstring>()</argsstring>
        <name>calculateLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="416" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a4abbd6877729c525f67dfd1d66a92bce" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setSystemMeasureStyle</definition>
        <argsstring>(int startline, int endline)</argsstring>
        <name>setSystemMeasureStyle</name>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="417" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae1c5093008ccf4851084106ce8f53d2d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::HumdrumInput::getStaffLayerCounts</definition>
        <argsstring>()</argsstring>
        <name>getStaffLayerCounts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="418" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af7e72dd25311f253c399d86f54d78663" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::prepareStaffGroups</definition>
        <argsstring>(int top, int bot)</argsstring>
        <name>prepareStaffGroups</name>
        <param>
          <type>int</type>
          <declname>top</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="419" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a9a2895bc66273740cb329fd5fd5eb16a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setClef</definition>
        <argsstring>(StaffDef *staff, const std::string &amp;clef, hum::HTp cleftok=NULL, hum::HTp striatok=NULL)</argsstring>
        <name>setClef</name>
        <param>
          <type><ref refid="classvrv_1_1_staff_def" kindref="compound">StaffDef</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>clef</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>cleftok</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>striatok</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="420" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1abb813602a2862c8597a9ca3fa1cc7122" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setDynamicTransposition</definition>
        <argsstring>(int staffindex, StaffDef *staff, const std::string &amp;itranspose)</argsstring>
        <name>setDynamicTransposition</name>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_staff_def" kindref="compound">StaffDef</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>itranspose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="421" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ad4b096b7462fd6ea8dfb79f2d4c67985" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setTransposition</definition>
        <argsstring>(StaffDef *staffDef, const std::string &amp;transpose)</argsstring>
        <name>setTransposition</name>
        <param>
          <type><ref refid="classvrv_1_1_staff_def" kindref="compound">StaffDef</ref> *</type>
          <declname>staffDef</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>transpose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="422" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a1add7b7aa7923a1162b6a875944aa6b2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setTimeSig</definition>
        <argsstring>(StaffDef *part, const std::string &amp;timesig, const std::string &amp;metersig=&quot;&quot;, hum::HTp partstart=NULL, hum::HTp timetok=NULL)</argsstring>
        <name>setTimeSig</name>
        <param>
          <type><ref refid="classvrv_1_1_staff_def" kindref="compound">StaffDef</ref> *</type>
          <declname>part</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>timesig</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metersig</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>partstart</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>timetok</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="423" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac24957f737680b8fa740b76a82ac2a2b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::fillStaffInfo</definition>
        <argsstring>(hum::HTp staffstart, int staffnumber, int staffcount)</argsstring>
        <name>fillStaffInfo</name>
        <param>
          <type>hum::HTp</type>
          <declname>staffstart</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffnumber</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffcount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="425" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ab866f5aef31aa38ff1a58f9401711d9b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::storeStaffLayerTokensForMeasure</definition>
        <argsstring>(int startline, int endline)</argsstring>
        <name>storeStaffLayerTokensForMeasure</name>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="426" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a9fcbbaa5c0f11d22db481c03854ad737" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::calculateReverseKernIndex</definition>
        <argsstring>()</argsstring>
        <name>calculateReverseKernIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="427" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3510f6141b234310c267d638894a24bc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::prepareTimeSigDur</definition>
        <argsstring>(int &amp;top, int &amp;bot)</argsstring>
        <name>prepareTimeSigDur</name>
        <param>
          <type>int &amp;</type>
          <declname>top</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>bot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="428" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa961d3fb71506f1a6b7224fd5e346d09" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::printMeasureTokens</definition>
        <argsstring>()</argsstring>
        <name>printMeasureTokens</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="429" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a598ffc723e10011ced0436156997e405" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::characterCount</definition>
        <argsstring>(const std::string &amp;text, char symbol)</argsstring>
        <name>characterCount</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>char</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="430" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a888b722b002d92208da8bda8729eca90" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::characterCount</definition>
        <argsstring>(hum::HTp token, char symbol)</argsstring>
        <name>characterCount</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>char</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="431" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a879f51397d98a38169b45707da3ca410" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::characterCountInSubtoken</definition>
        <argsstring>(hum::HTp token, char symbol)</argsstring>
        <name>characterCountInSubtoken</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>char</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="432" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2eb4ccdf0e0b7b40195398436aa19fdf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::characterCountInSubtoken</definition>
        <argsstring>(const std::string &amp;text, char symbol)</argsstring>
        <name>characterCountInSubtoken</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>char</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="433" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2f3bc963c9e279b4db7139ad1582eee5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::emptyMeasures</definition>
        <argsstring>()</argsstring>
        <name>emptyMeasures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="434" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a83514e05e714e77817ac90f8856c89f3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::hasFullMeasureRest</definition>
        <argsstring>(std::vector&lt; hum::HTp &gt; &amp;layerdata, hum::HumNum timesigdur, hum::HumNum measuredur)</argsstring>
        <name>hasFullMeasureRest</name>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layerdata</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>timesigdur</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>measuredur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="435" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ace24bcfac2a06bbdcee4564738062f5f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::convertNote</definition>
        <argsstring>(vrv::Note *note, hum::HTp token, int staffadj, int staffindex, int subtoken=-1)</argsstring>
        <name>convertNote</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">vrv::Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffadj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtoken</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="436" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a37acfc6e81605b316f5a2f0ffe593b9e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addCautionaryAccidental</definition>
        <argsstring>(Accid *accid, hum::HTp token, int acount)</argsstring>
        <name>addCautionaryAccidental</name>
        <param>
          <type><ref refid="classvrv_1_1_accid" kindref="compound">Accid</ref> *</type>
          <declname>accid</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>acount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="437" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae2a0c0e934d6ad589717da2236bcde38" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::convertRest</definition>
        <argsstring>(vrv::Rest *rest, hum::HTp token, int subtoken, int staffindex)</argsstring>
        <name>convertRest</name>
        <param>
          <type><ref refid="classvrv_1_1_rest" kindref="compound">vrv::Rest</ref> *</type>
          <declname>rest</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtoken</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="438" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af4296b38f514bb12cc742303ea50cb35" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::convertMRest</definition>
        <argsstring>(MRest *rest, hum::HTp token, int subtoken, int staffindex)</argsstring>
        <name>convertMRest</name>
        <param>
          <type><ref refid="classvrv_1_1_m_rest" kindref="compound">MRest</ref> *</type>
          <declname>rest</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtoken</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="439" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa8a37ba94c89552f82f6258928df00c9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processTieStart</definition>
        <argsstring>(Note *note, hum::HTp token, const std::string &amp;tstring, int subindex)</argsstring>
        <name>processTieStart</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>tstring</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="440" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a148d9a3f20540e1aa649ce7b33051e7c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processTieEnd</definition>
        <argsstring>(Note *note, hum::HTp token, const std::string &amp;tstring, int subindex)</argsstring>
        <name>processTieEnd</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>tstring</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="441" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2f1200a3e9aafe5e787426b4233351b5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addFermata</definition>
        <argsstring>(hum::HTp token, vrv::Object *parent=NULL)</argsstring>
        <name>addFermata</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>parent</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="442" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a35acda4d038a66935620e24c005690e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addBreath</definition>
        <argsstring>(hum::HTp token, vrv::Object *parent=NULL)</argsstring>
        <name>addBreath</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>parent</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="443" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a34378463697a34909000f152e9727423" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addTrill</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>addTrill</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="444" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ad58bf273d8c2dfcb5676c060b1c7fe73" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addTurn</definition>
        <argsstring>(vrv::Object *linked, hum::HTp token)</argsstring>
        <name>addTurn</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>linked</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="445" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af3ffc9b61f1ccb172b48cbc30d435e0e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addMordent</definition>
        <argsstring>(vrv::Object *linked, hum::HTp token)</argsstring>
        <name>addMordent</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>linked</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="446" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ab2685cc18128a8b24c4deb49844cfe8b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addOrnaments</definition>
        <argsstring>(vrv::Object *object, hum::HTp token)</argsstring>
        <name>addOrnaments</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="447" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ab18231c76dd68ab8ceb917d4765fd3d0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addArpeggio</definition>
        <argsstring>(vrv::Object *object, hum::HTp token)</argsstring>
        <name>addArpeggio</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="448" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a8bbc41e9ec0df7c2767e5ca6e8005772" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::getTimingInformation</definition>
        <argsstring>(std::vector&lt; hum::HumNum &gt; &amp;prespace, std::vector&lt; hum::HTp &gt; &amp;layerdata, hum::HumNum layerstarttime, hum::HumNum layerendtime)</argsstring>
        <name>getTimingInformation</name>
        <param>
          <type>std::vector&lt; hum::HumNum &gt; &amp;</type>
          <declname>prespace</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layerdata</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>layerstarttime</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>layerendtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="449" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae1f11978f7e0ff4c392001c5c5e349d5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::convertChord</definition>
        <argsstring>(Chord *chord, hum::HTp token, int staffindex)</argsstring>
        <name>convertChord</name>
        <param>
          <type><ref refid="classvrv_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>chord</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="451" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae567b3aeda313676a69030b38c269405" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::prepareVerses</definition>
        <argsstring>()</argsstring>
        <name>prepareVerses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="452" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0c09cfad5c79b97e9dd3301e4c9925d6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::checkForOmd</definition>
        <argsstring>(int startline, int endline)</argsstring>
        <name>checkForOmd</name>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="453" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3f729ad4e2d9029215830b6a18606145" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::handleOttavaMark</definition>
        <argsstring>(hum::HTp token, Note *note)</argsstring>
        <name>handleOttavaMark</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="454" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac5bc1b4767f4c562e7011ad464acd7dc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::handlePedalMark</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>handlePedalMark</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="455" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a49d0e60edc922bdb06b047572e11f32f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::handleLigature</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>handleLigature</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="456" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1afc541fd96b9b12c19b7b1b0c07e1c9cd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::handleColoration</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>handleColoration</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="457" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1abe339c5ac5198ade96d78ffcbffdd002" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::prepareBeamAndTupletGroups</definition>
        <argsstring>(std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tg, const std::vector&lt; hum::HTp &gt; &amp;layerdata)</argsstring>
        <name>prepareBeamAndTupletGroups</name>
        <param>
          <type>std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tg</declname>
        </param>
        <param>
          <type>const std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layerdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="458" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a6cb77e7b26f83492c0557ec3466f35bf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::assignScalingToTupletGroup</definition>
        <argsstring>(std::vector&lt; humaux::HumdrumBeamAndTuplet * &gt; &amp;tggroup)</argsstring>
        <name>assignScalingToTupletGroup</name>
        <param>
          <type>std::vector&lt; humaux::HumdrumBeamAndTuplet * &gt; &amp;</type>
          <declname>tggroup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="460" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a12982a3dd3f8a9db302f0474a722523f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::printGroupInfo</definition>
        <argsstring>(std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tg)</argsstring>
        <name>printGroupInfo</name>
        <param>
          <type>std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="462" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2785a73ce76149a6a00b087a6b439303" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::insertTuplet</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers, const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tgs, std::vector&lt; hum::HTp &gt; layerdata, int layerindex, bool suppressTupletNumber, bool suppressBracketTuplet)</argsstring>
        <name>insertTuplet</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <param>
          <type>const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tgs</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt;</type>
          <declname>layerdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>layerindex</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>suppressTupletNumber</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>suppressBracketTuplet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="463" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1adb097bfeb13b2640c986f8339efe69f7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_beam" kindref="compound">vrv::Beam</ref> *</type>
        <definition>vrv::Beam* vrv::HumdrumInput::insertBeam</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers, const humaux::HumdrumBeamAndTuplet &amp;tg)</argsstring>
        <name>insertBeam</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <param>
          <type>const humaux::HumdrumBeamAndTuplet &amp;</type>
          <declname>tg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="466" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0a4e01cd2789740bb289a6aec248e910" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_beam" kindref="compound">vrv::Beam</ref> *</type>
        <definition>vrv::Beam* vrv::HumdrumInput::insertGBeam</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers, const humaux::HumdrumBeamAndTuplet &amp;tg)</argsstring>
        <name>insertGBeam</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <param>
          <type>const humaux::HumdrumBeamAndTuplet &amp;</type>
          <declname>tg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="468" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a117d7bab1ef8067ae63d839a47b5dde0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::analyzeLayerBeams</definition>
        <argsstring>(std::vector&lt; int &gt; &amp;beamnum, std::vector&lt; int &gt; &amp;gbeamnum, const std::vector&lt; hum::HTp &gt; &amp;layerdata)</argsstring>
        <name>analyzeLayerBeams</name>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>beamnum</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>gbeamnum</declname>
        </param>
        <param>
          <type>const std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layerdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="470" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3d22d447b8ad02aa627ea75c967f75ca" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::storeBreaksec</definition>
        <argsstring>(std::vector&lt; int &gt; &amp;beamstate, std::vector&lt; int &gt; &amp;gbeamstate, const std::vector&lt; hum::HTp &gt; &amp;layerdata, bool grace=false)</argsstring>
        <name>storeBreaksec</name>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>beamstate</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>gbeamstate</declname>
        </param>
        <param>
          <type>const std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layerdata</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>grace</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="472" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aabd0e2e9f215b6833dfb395f74a17d68" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setBeamDirection</definition>
        <argsstring>(int direction, const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tgs, std::vector&lt; hum::HTp &gt; &amp;layerdata, int layerindex, bool grace)</argsstring>
        <name>setBeamDirection</name>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tgs</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layerdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>layerindex</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>grace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="474" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a66474088f47270ea2b25814c1a00ac97" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::handleGroupStarts</definition>
        <argsstring>(const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tgs, std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers, std::vector&lt; hum::HTp &gt; &amp;layerdata, int layerindex)</argsstring>
        <name>handleGroupStarts</name>
        <param>
          <type>const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tgs</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layerdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>layerindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="476" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1afb11057b74e2ad9d3e32c9838d8a7fe2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::checkForTremolo</definition>
        <argsstring>(std::vector&lt; hum::HTp &gt; &amp;layerdata, const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tgs, int startindex)</argsstring>
        <name>checkForTremolo</name>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layerdata</declname>
        </param>
        <param>
          <type>const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tgs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="478" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa2b27773f2e690c75fb216f6f6622af4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::handleGroupEnds</definition>
        <argsstring>(const humaux::HumdrumBeamAndTuplet &amp;tg, std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers)</argsstring>
        <name>handleGroupEnds</name>
        <param>
          <type>const humaux::HumdrumBeamAndTuplet &amp;</type>
          <declname>tg</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="480" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a77e9abee7e5765851e333acdea1f6e0c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::handleStaffStateVariables</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>handleStaffStateVariables</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="482" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa3ff5bbf284e6e919da0fd1d3f736bde" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::handleStaffDynamStateVariables</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>handleStaffDynamStateVariables</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="483" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1adc84201cd0c8631ec81402673f2521eb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::removeTuplet</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers)</argsstring>
        <name>removeTuplet</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="484" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a9d1f2c358029b65920e58d0eb4a9a876" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::removeGBeam</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers)</argsstring>
        <name>removeGBeam</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="485" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ad9f090b89b3bcb3b3a2539ed1536c113" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::removeBeam</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers)</argsstring>
        <name>removeBeam</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="486" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa3c0ca1300e64769ba2f6825f2a18574" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_clef" kindref="compound">vrv::Clef</ref> *</type>
        <definition>vrv::Clef* vrv::HumdrumInput::insertClefElement</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers, hum::HTp clef, hum::HTp lastnote)</argsstring>
        <name>insertClefElement</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>clef</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>lastnote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="487" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0ffefb70c22d45edc91311d40f6809e2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::insertMeterSigElement</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers, std::vector&lt; hum::HTp &gt; &amp;layeritems, int index)</argsstring>
        <name>insertMeterSigElement</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layeritems</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="489" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae1eaaa65c79ab0b2d01856d4cd55150c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processSlurs</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>processSlurs</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="491" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a986168a5845605393506e0c05e41ddee" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::generateSlurId</definition>
        <argsstring>(hum::HTp token, int count, int number)</argsstring>
        <name>generateSlurId</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="492" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a25dcd9e669eccb1894a8a1b1b1fea766" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processPhrases</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>processPhrases</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="493" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aece690f097d952b70afdb7670d71b51d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getSlurEndNumber</definition>
        <argsstring>(hum::HTp startslur, int slurstartnumber)</argsstring>
        <name>getSlurEndNumber</name>
        <param>
          <type>hum::HTp</type>
          <declname>startslur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slurstartnumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="494" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a8258a8fa6d3bf4ca3b6f98877e0ffd0c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addHarmFloatsForMeasure</definition>
        <argsstring>(int startine, int endline)</argsstring>
        <name>addHarmFloatsForMeasure</name>
        <param>
          <type>int</type>
          <declname>startine</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="495" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a90ffb56498d42fdb7a9097649448612e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addFingeringsForMeasure</definition>
        <argsstring>(int startline, int endline)</argsstring>
        <name>addFingeringsForMeasure</name>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="496" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae173e7ae61777407f1ca6114b60080ea" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::insertFingerNumberInMeasure</definition>
        <argsstring>(const std::string &amp;text, int staffindex, hum::HTp token, int maxstaff, bool aboveQ)</argsstring>
        <name>insertFingerNumberInMeasure</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxstaff</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aboveQ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="497" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a762a62853506ed4922d7ce0cf2627504" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addStringNumbersForMeasure</definition>
        <argsstring>(int startline, int endline)</argsstring>
        <name>addStringNumbersForMeasure</name>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="499" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1adfbe6982aba0497b4a9be8fdcb569a69" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addFiguredBassForMeasure</definition>
        <argsstring>(int startline, int endline)</argsstring>
        <name>addFiguredBassForMeasure</name>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="500" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a53f7aa1d049d3d0f91c2ec69525bd895" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processDynamics</definition>
        <argsstring>(hum::HTp token, int staffindex)</argsstring>
        <name>processDynamics</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="501" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a9d6531b50012817b46d4800eb3a9d6f4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processDirections</definition>
        <argsstring>(hum::HTp token, int staffindex)</argsstring>
        <name>processDirections</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="502" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a105930b1df1629165ea655934d09682e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processLinkedDirection</definition>
        <argsstring>(int index, hum::HTp token, int staffindex)</argsstring>
        <name>processLinkedDirection</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="503" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a1c266bbf7f08e2148ff4e7a06a112c5c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processGlobalDirections</definition>
        <argsstring>(hum::HTp token, int staffindex)</argsstring>
        <name>processGlobalDirections</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="504" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa632f7d58a59656a5e5562c8f88377c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processChordSignifiers</definition>
        <argsstring>(Chord *chord, hum::HTp token, int staffindex)</argsstring>
        <name>processChordSignifiers</name>
        <param>
          <type><ref refid="classvrv_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>chord</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="505" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a4e8f8a268e564f0190e35d9b5a563fe6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HumNum</type>
        <definition>hum::HumNum vrv::HumdrumInput::getMeasureTstamp</definition>
        <argsstring>(hum::HTp token, int staffindex, hum::HumNum frac=0)</argsstring>
        <name>getMeasureTstamp</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>frac</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="506" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ad7fd6cb1e3b707bbfa3b6063e2abf6d0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HumNum</type>
        <definition>hum::HumNum vrv::HumdrumInput::getMeasureTstamp</definition>
        <argsstring>(hum::HTp token, hum::HumNum extraduration, int staffindex, hum::HumNum frac=0)</argsstring>
        <name>getMeasureTstamp</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>extraduration</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>frac</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="507" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1afd1702de2d37725bfdd5d6f3341a63c5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HumNum</type>
        <definition>hum::HumNum vrv::HumdrumInput::getMeasureTstampPlusDur</definition>
        <argsstring>(hum::HTp token, int staffindex, hum::HumNum fract=0)</argsstring>
        <name>getMeasureTstampPlusDur</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>fract</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="508" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a6a9c762f09ac3d9d7a8dd32d3af51a00" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HumNum</type>
        <definition>hum::HumNum vrv::HumdrumInput::getMeasureEndTstamp</definition>
        <argsstring>(int staffindex)</argsstring>
        <name>getMeasureEndTstamp</name>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="509" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3a459374bc6abf82df87b359c00782d4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HumNum</type>
        <definition>hum::HumNum vrv::HumdrumInput::getMeasureFactor</definition>
        <argsstring>(int staffindex)</argsstring>
        <name>getMeasureFactor</name>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="510" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1acd040c1bcd707d3ff31cd58d6e377fd2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HTp</type>
        <definition>hum::HTp vrv::HumdrumInput::getPreviousDataToken</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getPreviousDataToken</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="511" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3fcddb3a72dcbecf1fef0750c30cef26" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HTp</type>
        <definition>hum::HTp vrv::HumdrumInput::getHairpinEnd</definition>
        <argsstring>(hum::HTp token, const std::string &amp;endchar)</argsstring>
        <name>getHairpinEnd</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>endchar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="512" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a73857f02db1e0196b45ea0245dab77ed" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HTp</type>
        <definition>hum::HTp vrv::HumdrumInput::getDecrescendoEnd</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getDecrescendoEnd</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="513" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af617aefdd4b245664b35f756c63a92b9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HTp</type>
        <definition>hum::HTp vrv::HumdrumInput::getCrescendoEnd</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getCrescendoEnd</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="514" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a4768fe9f4c156aec1b00a968f7070b8e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getMeasureDifference</definition>
        <argsstring>(hum::HTp starttok, hum::HTp endtok)</argsstring>
        <name>getMeasureDifference</name>
        <param>
          <type>hum::HTp</type>
          <declname>starttok</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>endtok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="515" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3a2f593b7c5dbcd844d3303810704d51" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::storeOriginalClefMensurationKeyApp</definition>
        <argsstring>()</argsstring>
        <name>storeOriginalClefMensurationKeyApp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="516" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a74728e3c767603cdb637cd8da88bbc59" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addSpace</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers, hum::HumNum duration)</argsstring>
        <name>addSpace</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="517" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a8a7dbfa6242ac066e0a68650d43f9a89" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setLocationId</definition>
        <argsstring>(vrv::Object *object, hum::HTp token, int subtoken=-1)</argsstring>
        <name>setLocationId</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtoken</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="518" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af3a2ee972a66d995a826b5e35e4bcf7d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setLocationId</definition>
        <argsstring>(vrv::Object *object, int lineindex, int fieldindex, int subtokenindex)</argsstring>
        <name>setLocationId</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtokenindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="519" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aad0fcbe0df288456278b9645d483cd61" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getLocationId</definition>
        <argsstring>(vrv::Object *object, hum::HTp token, int subtoken=-1)</argsstring>
        <name>getLocationId</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtoken</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="520" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1adfc44b14f4d8f7d90c85b1b6611c0431" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getLocationId</definition>
        <argsstring>(Object *object, int lineindex, int fieldindex, int subtokenindex)</argsstring>
        <name>getLocationId</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtokenindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="521" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a41aef1246f7a206093b1506a82688523" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getLocationId</definition>
        <argsstring>(const std::string &amp;prefix, hum::HTp token, int subtoken=-1)</argsstring>
        <name>getLocationId</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtoken</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="522" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5e534faafe3757048ee8c95f7984cfb9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getLocationId</definition>
        <argsstring>(const std::string &amp;prefix, int lineindex, int fieldindex, int subtokenindex)</argsstring>
        <name>getLocationId</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtokenindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="523" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5b8df408d5856745cec7044903801288" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setLocationIdNSuffix</definition>
        <argsstring>(vrv::Object *object, hum::HTp token, int number)</argsstring>
        <name>setLocationIdNSuffix</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="524" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5f476df2a2d1017848c26c09fa2866bd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setSlurLocationId</definition>
        <argsstring>(vrv::Object *object, hum::HTp slurstart, hum::HTp slurend, int eindex, const std::string &amp;prefix=&quot;&quot;)</argsstring>
        <name>setSlurLocationId</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>slurstart</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>slurend</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eindex</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="525" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a53566dcae3d9d30c762779928d370b8c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setTieLocationId</definition>
        <argsstring>(vrv::Object *object, hum::HTp tiestart, int sindex, hum::HTp tieend, int eindex)</argsstring>
        <name>setTieLocationId</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>tiestart</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sindex</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>tieend</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="527" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a77e38a7839c1b60f0412309c8a68f64a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setBeamLocationId</definition>
        <argsstring>(vrv::Object *object, const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tgs, std::vector&lt; hum::HTp &gt; &amp;layerdata, int startindex)</argsstring>
        <name>setBeamLocationId</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tgs</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layerdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="528" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a6488501e1551afc9e53f8ee5bf43ac72" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setTupletLocationId</definition>
        <argsstring>(vrv::Object *object, const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tgs, std::vector&lt; hum::HTp &gt; &amp;layerdata, int startindex)</argsstring>
        <name>setTupletLocationId</name>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">vrv::Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tgs</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layerdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="530" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a060c49ff5d8f57b1abd9841dcf754ec6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addMidiTempo</definition>
        <argsstring>(vrv::ScoreDef &amp;m_scoreDef, hum::HTp kernpart, int top, int bot)</argsstring>
        <name>addMidiTempo</name>
        <param>
          <type><ref refid="classvrv_1_1_score_def" kindref="compound">vrv::ScoreDef</ref> &amp;</type>
          <declname>m_scoreDef</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>kernpart</declname>
        </param>
        <param>
          <type>int</type>
          <declname>top</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="532" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a1e14b7af054912c41d97830f0ad66aa0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addInstrumentDefinition</definition>
        <argsstring>(vrv::StaffDef *staffdef, hum::HTp partstart)</argsstring>
        <name>addInstrumentDefinition</name>
        <param>
          <type><ref refid="classvrv_1_1_staff_def" kindref="compound">vrv::StaffDef</ref> *</type>
          <declname>staffdef</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>partstart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="533" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5b5795f5d08ead5b6d1dc6db7816b990" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addOrnamentMarkers</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>addOrnamentMarkers</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="534" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5307b5fd15726f2e133285c225585e43" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setNextLeftBarStyle</definition>
        <argsstring>(data_BARRENDITION style)</argsstring>
        <name>setNextLeftBarStyle</name>
        <param>
          <type>data_BARRENDITION</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="535" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a38db2a3fb63c3046a85fe2c9059dea1d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::parseSignifiers</definition>
        <argsstring>(hum::HumdrumFile &amp;infile)</argsstring>
        <name>parseSignifiers</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="536" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2909d149f78d8a9c39992d5d0f51e7a3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getAutoClef</definition>
        <argsstring>(hum::HTp partstart, int partnumber)</argsstring>
        <name>getAutoClef</name>
        <param>
          <type>hum::HTp</type>
          <declname>partstart</declname>
        </param>
        <param>
          <type>int</type>
          <declname>partnumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="537" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af546f1d9854cec28e0ff0ba7a24b6d85" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::colorNote</definition>
        <argsstring>(vrv::Note *note, hum::HTp token, const std::string &amp;subtoken, int line, int field)</argsstring>
        <name>colorNote</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">vrv::Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>subtoken</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="538" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae41ca44a45f7ffaa2ef007d8e312c550" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::colorRest</definition>
        <argsstring>(vrv::Rest *rest, const std::string &amp;token, int line, int field)</argsstring>
        <name>colorRest</name>
        <param>
          <type><ref refid="classvrv_1_1_rest" kindref="compound">vrv::Rest</ref> *</type>
          <declname>rest</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="539" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a94dbedcd147aed5a6c581c326acaff2f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::colorVerse</definition>
        <argsstring>(Verse *verse, std::string &amp;token)</argsstring>
        <name>colorVerse</name>
        <param>
          <type><ref refid="classvrv_1_1_verse" kindref="compound">Verse</ref> *</type>
          <declname>verse</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="540" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a1c16e0f2ef9a18ccdfb8752d5c10e909" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getSpineColor</definition>
        <argsstring>(int line, int field)</argsstring>
        <name>getSpineColor</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="541" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a95b28af4ba3252b2d00c1d36ec6e56ff" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::checkForColorSpine</definition>
        <argsstring>(hum::HumdrumFile &amp;infile)</argsstring>
        <name>checkForColorSpine</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="542" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a74672d2abfc5eeb6ed1d3ce5d9ac8280" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::HumdrumInput::analyzeMultiRest</definition>
        <argsstring>(hum::HumdrumFile &amp;infile)</argsstring>
        <name>analyzeMultiRest</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="543" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a1c4d6944725ca8c1f5b8bb6428eb84dc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::analyzeBreaks</definition>
        <argsstring>(hum::HumdrumFile &amp;infile)</argsstring>
        <name>analyzeBreaks</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="544" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5811f018d555151696c48ea9c16d10c7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addSystemKeyTimeChange</definition>
        <argsstring>(int startline, int endline)</argsstring>
        <name>addSystemKeyTimeChange</name>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="545" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2761c5d66bc0a9678ef515593aef6c66" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::prepareSections</definition>
        <argsstring>()</argsstring>
        <name>prepareSections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="546" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a380264dd5b882135bd06802887ffa3f8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getDirection</definition>
        <argsstring>(const std::string &amp;token, const std::string &amp;target)</argsstring>
        <name>getDirection</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="547" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1acb0b63c26d6546e970bfdd82a5ca4291" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::resolveTupletBeamTie</definition>
        <argsstring>(std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tg)</argsstring>
        <name>resolveTupletBeamTie</name>
        <param>
          <type>std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="548" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a789990da73831fe3fa775dc306a994b8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::resolveTupletBeamStartTie</definition>
        <argsstring>(std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tg, int index)</argsstring>
        <name>resolveTupletBeamStartTie</name>
        <param>
          <type>std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="549" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a452268629f0f1fafb2998ff089e93d21" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::resolveTupletBeamEndTie</definition>
        <argsstring>(std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tg, int index)</argsstring>
        <name>resolveTupletBeamEndTie</name>
        <param>
          <type>std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="550" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae250e2921d9f4dfeecb3f8229f52f8cc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::mergeTupletsCuttingBeam</definition>
        <argsstring>(std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tg)</argsstring>
        <name>mergeTupletsCuttingBeam</name>
        <param>
          <type>std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="551" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2200ee6ba7bda693f858748dafde3366" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::embedQstampInClass</definition>
        <argsstring>(vrv::Note *note, hum::HTp token, const std::string &amp;tstring)</argsstring>
        <name>embedQstampInClass</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">vrv::Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>tstring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="552" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a636c05f7b7fd78750f91752866532d51" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::embedQstampInClass</definition>
        <argsstring>(vrv::Rest *note, hum::HTp token, const std::string &amp;tstring)</argsstring>
        <name>embedQstampInClass</name>
        <param>
          <type><ref refid="classvrv_1_1_rest" kindref="compound">vrv::Rest</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>tstring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="553" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1adbc9efe78f23baf295abb8b068541a58" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::embedQstampInClass</definition>
        <argsstring>(vrv::MRest *mrest, hum::HTp token, const std::string &amp;tstring)</argsstring>
        <name>embedQstampInClass</name>
        <param>
          <type><ref refid="classvrv_1_1_m_rest" kindref="compound">vrv::MRest</ref> *</type>
          <declname>mrest</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>tstring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="554" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2d6297209d594518d6a6f2a9353aa11a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::embedQstampInClass</definition>
        <argsstring>(vrv::Space *irest, hum::HTp token, const std::string &amp;tstring)</argsstring>
        <name>embedQstampInClass</name>
        <param>
          <type><ref refid="classvrv_1_1_space" kindref="compound">vrv::Space</ref> *</type>
          <declname>irest</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>tstring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="555" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2916e8320b39ad7331344e8c80b9cddc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::embedPitchInformationInClass</definition>
        <argsstring>(vrv::Note *note, const std::string &amp;token)</argsstring>
        <name>embedPitchInformationInClass</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">vrv::Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="556" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae64d830e58b90a0355e389e70a432319" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::embedTieInformation</definition>
        <argsstring>(Note *note, const std::string &amp;token)</argsstring>
        <name>embedTieInformation</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="557" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a102ad00b1c492dbd803a4fdb6252f9ed" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::splitSyllableBySpaces</definition>
        <argsstring>(vector&lt; std::string &gt; &amp;vtext, char spacer=&apos; &apos;)</argsstring>
        <name>splitSyllableBySpaces</name>
        <param>
          <type>vector&lt; std::string &gt; &amp;</type>
          <declname>vtext</declname>
        </param>
        <param>
          <type>char</type>
          <declname>spacer</declname>
          <defval>&apos; &apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="558" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a8a9637a9cdd7ceaf1121a2c020e5f94d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addDefaultTempo</definition>
        <argsstring>(ScoreDef &amp;m_scoreDef)</argsstring>
        <name>addDefaultTempo</name>
        <param>
          <type><ref refid="classvrv_1_1_score_def" kindref="compound">ScoreDef</ref> &amp;</type>
          <declname>m_scoreDef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="559" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a58cc0e8d37e95ee47ec150ecb99a5a51" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getChordNoteCount</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getChordNoteCount</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="560" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a69fe390fae84642c34a1039f2080d332" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::isLowestSystemArpeggio</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>isLowestSystemArpeggio</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="561" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ab2abf76863416114ff9d163527702dbe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::leftmostStaffArpeggio</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>leftmostStaffArpeggio</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="562" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a69f05769b8044d44049c86f44802453f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HTp</type>
        <definition>hum::HTp vrv::HumdrumInput::getHighestSystemArpeggio</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getHighestSystemArpeggio</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="563" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0597ccec31a3951dae90319ec44ec4fb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HTp</type>
        <definition>hum::HTp vrv::HumdrumInput::getRightmostStaffArpeggio</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getRightmostStaffArpeggio</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="564" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a18165af361ac09c52b3ec64ad8f10a80" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addDirection</definition>
        <argsstring>(const std::string &amp;text, const std::string &amp;placement, bool bold, bool italic, hum::HTp token, int staffindex, int justification=0, const std::string &amp;color=&quot;&quot;, int vgroup=-1)</argsstring>
        <name>addDirection</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>placement</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bold</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>italic</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>justification</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>color</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>vgroup</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="565" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa8170eaba6e5f223a2e3ed230f20b803" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::addTempoDirection</definition>
        <argsstring>(const std::string &amp;text, const std::string &amp;placement, bool bold, bool italic, hum::HTp token, int staffindex, int justification, const std::string &amp;color)</argsstring>
        <name>addTempoDirection</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>placement</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bold</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>italic</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>justification</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="567" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae4788bbfcd592ed7c2f7993387affbc6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::setTempoContent</definition>
        <argsstring>(Tempo *tempo, const std::string &amp;text)</argsstring>
        <name>setTempoContent</name>
        <param>
          <type><ref refid="classvrv_1_1_tempo" kindref="compound">Tempo</ref> *</type>
          <declname>tempo</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="569" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3456451e64157ab6c9c7cffa8113d09e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::setLabelContent</definition>
        <argsstring>(Label *label, const std::string &amp;text)</argsstring>
        <name>setLabelContent</name>
        <param>
          <type><ref refid="classvrv_1_1_label" kindref="compound">Label</ref> *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="570" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a59cb5cc3585d97b3abb6fdf1b4f7866e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::convertMusicSymbolNameToSmuflEntity</definition>
        <argsstring>(const std::string &amp;text)</argsstring>
        <name>convertMusicSymbolNameToSmuflEntity</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="571" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a7332593c7955c707aad04da2bb708d03" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processTerminalLong</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>processTerminalLong</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="572" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae4d4abe1edab9b900aad41f8df0b3dd7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::removeCharacter</definition>
        <argsstring>(hum::HTp token, char removechar)</argsstring>
        <name>removeCharacter</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>char</type>
          <declname>removechar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="573" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ad40fa809ce661f1efc16340293215c72" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getSystemDecoration</definition>
        <argsstring>(const std::string &amp;tag)</argsstring>
        <name>getSystemDecoration</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="574" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a9f5f920b6bd75ad87e1af73ef5036173" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::processStaffDecoration</definition>
        <argsstring>(const std::string &amp;decoration)</argsstring>
        <name>processStaffDecoration</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>decoration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="575" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a473f0fc495c06c0650672b371ecc822f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getStaffNumberLabel</definition>
        <argsstring>(hum::HTp spinestart)</argsstring>
        <name>getStaffNumberLabel</name>
        <param>
          <type>hum::HTp</type>
          <declname>spinestart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="576" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a225680295bd3c2bb2d191242be709028" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getGroupNumberLabel</definition>
        <argsstring>(hum::HTp spinestart)</argsstring>
        <name>getGroupNumberLabel</name>
        <param>
          <type>hum::HTp</type>
          <declname>spinestart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="577" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac302a2361bfa6e01b24357ea163e0bf5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getPartNumberLabel</definition>
        <argsstring>(hum::HTp spinestart)</argsstring>
        <name>getPartNumberLabel</name>
        <param>
          <type>hum::HTp</type>
          <declname>spinestart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="578" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ad214ab25fe733033ec281b1c4cdb7066" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::isFirstTokenOnStaff</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>isFirstTokenOnStaff</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="579" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a061f4a03a01b851a2b078495556ce987" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::hasAboveParameter</definition>
        <argsstring>(hum::HTp token, const std::string &amp;category)</argsstring>
        <name>hasAboveParameter</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="580" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ad78a759153f123dd71240b230aac26ef" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::hasAboveParameter</definition>
        <argsstring>(hum::HTp token, const std::string &amp;category, int &amp;output)</argsstring>
        <name>hasAboveParameter</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="581" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af8c52d388f83aaee983ba6fd6a1b44c5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::hasBelowParameter</definition>
        <argsstring>(hum::HTp token, const std::string &amp;category)</argsstring>
        <name>hasBelowParameter</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="582" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a25c9890e39cdecc9219faae7adfdc685" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::hasBelowParameter</definition>
        <argsstring>(hum::HTp token, const std::string &amp;category, int &amp;output)</argsstring>
        <name>hasBelowParameter</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="583" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae65da341b25262590cc5598ed4093f4a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::hasCenterParameter</definition>
        <argsstring>(hum::HTp token, const std::string &amp;category, int &amp;output)</argsstring>
        <name>hasCenterParameter</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="584" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a890da6e8f4b3ea222efb391903715cf2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::prepareHeaderFooter</definition>
        <argsstring>()</argsstring>
        <name>prepareHeaderFooter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="585" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa7a85ce512aa6eda6f1644575ae778da" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::prepareHeader</definition>
        <argsstring>(std::vector&lt; std::pair&lt; std::string, std::string &gt;&gt; &amp;biblist, std::map&lt; std::string, std::string &gt; &amp;refmap)</argsstring>
        <name>prepareHeader</name>
        <param>
          <type>std::vector&lt; std::pair&lt; std::string, std::string &gt;&gt; &amp;</type>
          <declname>biblist</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>refmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="586" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a4f031eb7cea97a8139dbfa2cce315f82" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::prepareFooter</definition>
        <argsstring>(std::vector&lt; std::pair&lt; std::string, std::string &gt;&gt; &amp;biblist, std::map&lt; std::string, std::string &gt; &amp;refmap)</argsstring>
        <name>prepareFooter</name>
        <param>
          <type>std::vector&lt; std::pair&lt; std::string, std::string &gt;&gt; &amp;</type>
          <declname>biblist</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>refmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="588" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a83edf342b36add0dde92684588d032d1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::processReferenceTemplate</definition>
        <argsstring>(const std::string &amp;input, std::vector&lt; std::pair&lt; std::string, std::string &gt;&gt; &amp;biblist, std::map&lt; std::string, std::string &gt; &amp;refmap)</argsstring>
        <name>processReferenceTemplate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>std::vector&lt; std::pair&lt; std::string, std::string &gt;&gt; &amp;</type>
          <declname>biblist</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>refmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="590" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae0f274bfab060bdce0aaa80129b71bbc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::processTemplateOperator</definition>
        <argsstring>(const std::string &amp;value, const std::string &amp;op)</argsstring>
        <name>processTemplateOperator</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="592" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a028d4a91071acd3e03aa430651d7034f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::automaticHeaderLeft</definition>
        <argsstring>(std::vector&lt; std::pair&lt; std::string, std::string &gt;&gt; &amp;biblist, std::map&lt; std::string, std::string &gt; &amp;refmap, int linecount)</argsstring>
        <name>automaticHeaderLeft</name>
        <param>
          <type>std::vector&lt; std::pair&lt; std::string, std::string &gt;&gt; &amp;</type>
          <declname>biblist</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>refmap</declname>
        </param>
        <param>
          <type>int</type>
          <declname>linecount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="593" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a70261418efb68fd075809d287d9907c9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::automaticHeaderCenter</definition>
        <argsstring>(std::vector&lt; std::pair&lt; std::string, std::string &gt;&gt; &amp;biblist, std::map&lt; std::string, std::string &gt; &amp;refmap)</argsstring>
        <name>automaticHeaderCenter</name>
        <param>
          <type>std::vector&lt; std::pair&lt; std::string, std::string &gt;&gt; &amp;</type>
          <declname>biblist</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>refmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="595" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af891a2aadfb74864a9e7267bbe546551" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::automaticHeaderRight</definition>
        <argsstring>(std::vector&lt; std::pair&lt; std::string, std::string &gt;&gt; &amp;biblist, std::map&lt; std::string, std::string &gt; &amp;refmap, int &amp;linecount)</argsstring>
        <name>automaticHeaderRight</name>
        <param>
          <type>std::vector&lt; std::pair&lt; std::string, std::string &gt;&gt; &amp;</type>
          <declname>biblist</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>refmap</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>linecount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="597" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1abe5d63a645ca8dffbede62d5a5d99d21" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::convertMensuralToken</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers, hum::HTp token, int staffindex)</argsstring>
        <name>convertMensuralToken</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="599" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a69f54bc4a7b9dff130605e8761b8397d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::initializeSpineColor</definition>
        <argsstring>(hum::HumdrumFile &amp;infile)</argsstring>
        <name>initializeSpineColor</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="601" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a348944b15737ee69c9bba2b11130b978" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setStemLength</definition>
        <argsstring>(Note *note, hum::HTp token)</argsstring>
        <name>setStemLength</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="602" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a1bc0c7362098eb82371d2f9eb03df1c0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::storeExpansionLists</definition>
        <argsstring>(Section *section, hum::HTp starting)</argsstring>
        <name>storeExpansionLists</name>
        <param>
          <type><ref refid="classvrv_1_1_section" kindref="compound">Section</ref> *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>starting</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="603" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa9e83ec27ff5fea9dcd154a43d69872b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getStaffAdjustment</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getStaffAdjustment</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="604" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a11ad26c806fab7373d2a01a92705cc05" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::calculateNoteIdForSlur</definition>
        <argsstring>(std::string &amp;idstring, std::vector&lt; pair&lt; int, int &gt;&gt; &amp;sortednotes, int index)</argsstring>
        <name>calculateNoteIdForSlur</name>
        <param>
          <type>std::string &amp;</type>
          <declname>idstring</declname>
        </param>
        <param>
          <type>std::vector&lt; pair&lt; int, int &gt;&gt; &amp;</type>
          <declname>sortednotes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="605" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a6b8b68248a413079bb91b59099cfaecc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::promoteInstrumentNamesToGroup</definition>
        <argsstring>()</argsstring>
        <name>promoteInstrumentNamesToGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="606" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ab02a8968e370d126aaa9a05890ff51ca" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::promoteInstrumentsForStaffGroup</definition>
        <argsstring>(StaffGrp *group)</argsstring>
        <name>promoteInstrumentsForStaffGroup</name>
        <param>
          <type><ref refid="classvrv_1_1_staff_grp" kindref="compound">StaffGrp</ref> *</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="607" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa19018afb022addded227c794771cfe9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::promoteInstrumentAbbreviationsToGroup</definition>
        <argsstring>()</argsstring>
        <name>promoteInstrumentAbbreviationsToGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="608" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a431630b2f62593b725127c70018e540e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::promoteInstrumentAbbreviationsForStaffGroup</definition>
        <argsstring>(StaffGrp *group)</argsstring>
        <name>promoteInstrumentAbbreviationsForStaffGroup</name>
        <param>
          <type><ref refid="classvrv_1_1_staff_grp" kindref="compound">StaffGrp</ref> *</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="609" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a11510d4333dcbc12b19fc95ddff514b4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setGroupSymbol</definition>
        <argsstring>(StaffGrp *sg, staffGroupingSym_SYMBOL symbol)</argsstring>
        <name>setGroupSymbol</name>
        <param>
          <type><ref refid="classvrv_1_1_staff_grp" kindref="compound">StaffGrp</ref> *</type>
          <declname>sg</declname>
        </param>
        <param>
          <type>staffGroupingSym_SYMBOL</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="610" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a26c180680e267d85e84656ba69951912" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getInstrumentName</definition>
        <argsstring>(StaffDef *sd)</argsstring>
        <name>getInstrumentName</name>
        <param>
          <type><ref refid="classvrv_1_1_staff_def" kindref="compound">StaffDef</ref> *</type>
          <declname>sd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="611" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a04294141a16cc11a2a69257adc90f7d3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getInstrumentAbbreviation</definition>
        <argsstring>(StaffDef *sd)</argsstring>
        <name>getInstrumentAbbreviation</name>
        <param>
          <type><ref refid="classvrv_1_1_staff_def" kindref="compound">StaffDef</ref> *</type>
          <declname>sd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="612" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ab3e51a018bee8b3e7dd8fcc5203afcfe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getInstrumentClass</definition>
        <argsstring>(hum::HTp start)</argsstring>
        <name>getInstrumentClass</name>
        <param>
          <type>hum::HTp</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="613" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a479fcd69b52de424f4cf126820e24310" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::removeInstrumentName</definition>
        <argsstring>(StaffDef *sd)</argsstring>
        <name>removeInstrumentName</name>
        <param>
          <type><ref refid="classvrv_1_1_staff_def" kindref="compound">StaffDef</ref> *</type>
          <declname>sd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="614" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a1373953a4d6a34f778b56af08147c3eb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::removeInstrumentAbbreviation</definition>
        <argsstring>(StaffDef *sd)</argsstring>
        <name>removeInstrumentAbbreviation</name>
        <param>
          <type><ref refid="classvrv_1_1_staff_def" kindref="compound">StaffDef</ref> *</type>
          <declname>sd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="615" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2a04cc7f697c6f886f455c621ce01b39" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getEndIdForOttava</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getEndIdForOttava</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="616" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a4fb93f7b884d61b464fdff021058d28a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::prepareInitialOttavas</definition>
        <argsstring>(hum::HTp measure)</argsstring>
        <name>prepareInitialOttavas</name>
        <param>
          <type>hum::HTp</type>
          <declname>measure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="617" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ad4316093d9cfdb8fac8129f53cce1c6d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::linkFingeringToNote</definition>
        <argsstring>(Dir *dir, hum::HTp token, int xstaffindex)</argsstring>
        <name>linkFingeringToNote</name>
        <param>
          <type><ref refid="classvrv_1_1_dir" kindref="compound">Dir</ref> *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xstaffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="618" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a4bb74206f9f4fcd9cb77cba2ade3279e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::checkForTupletForcedBreak</definition>
        <argsstring>(const std::vector&lt; hum::HTp &gt; &amp;duritems, int index)</argsstring>
        <name>checkForTupletForcedBreak</name>
        <param>
          <type>const std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>duritems</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="619" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ad74a32b9210d5310ff8eaeca89b25df4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::extractSlurNoteAttachmentInformation</definition>
        <argsstring>(std::vector&lt; std::pair&lt; int, bool &gt;&gt; &amp;data, hum::HTp token, char slurtype)</argsstring>
        <name>extractSlurNoteAttachmentInformation</name>
        <param>
          <type>std::vector&lt; std::pair&lt; int, bool &gt;&gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>char</type>
          <declname>slurtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="620" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac3e97d30d02a65cb490a127b09be29a7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::extractPhraseNoteAttachmentInformation</definition>
        <argsstring>(std::vector&lt; std::pair&lt; int, bool &gt;&gt; &amp;data, hum::HTp token, char phrasetype)</argsstring>
        <name>extractPhraseNoteAttachmentInformation</name>
        <param>
          <type>std::vector&lt; std::pair&lt; int, bool &gt;&gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>char</type>
          <declname>phrasetype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="621" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0cf663f2311623186a6941e85425d075" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::getNoteStateSlur</definition>
        <argsstring>(hum::HTp token, int slurnumber)</argsstring>
        <name>getNoteStateSlur</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slurnumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="623" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af6fe1ae042bbb81100133736d01e1652" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::getNoteStatePhrase</definition>
        <argsstring>(hum::HTp token, int phrasenumber)</argsstring>
        <name>getNoteStatePhrase</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>phrasenumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="624" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aafc3ea84bf453d5d7b17a8cb91cf51a4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::assignVerticalGroup</definition>
        <argsstring>(Pedal *ped, hum::HTp token)</argsstring>
        <name>assignVerticalGroup</name>
        <param>
          <type><ref refid="classvrv_1_1_pedal" kindref="compound">Pedal</ref> *</type>
          <declname>ped</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="625" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1adf61c0c8d84ae50ff1b9733bcea58e7a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::storeAcclev</definition>
        <argsstring>(const std::string value, int staffindex)</argsstring>
        <name>storeAcclev</name>
        <param>
          <type>const std::string</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="626" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ad7e7eb39a72259398e563d5c3c3f7e3e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::storeStemInterpretation</definition>
        <argsstring>(const std::string &amp;value, int staffindex, int layernumber)</argsstring>
        <name>storeStemInterpretation</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>layernumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="627" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af9f6e32190d199a440f28c5194d95e56" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::getBooleanParameter</definition>
        <argsstring>(hum::HTp token, const std::string &amp;category, const std::string &amp;key)</argsstring>
        <name>getBooleanParameter</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="628" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1afb18066b10a1e84c2f277c4d4b92a017" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getStringParameter</definition>
        <argsstring>(hum::HTp token, const std::string &amp;category, const std::string &amp;key)</argsstring>
        <name>getStringParameter</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="629" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa151cc6b490760563b9f52d6fde90cd1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::shouldHideBeamBracket</definition>
        <argsstring>(const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tgs, std::vector&lt; hum::HTp &gt; &amp;layerdata, int layerindex)</argsstring>
        <name>shouldHideBeamBracket</name>
        <param>
          <type>const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tgs</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layerdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>layerindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="630" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a08d6676c654d7680c698d93760171574" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::checkBeamWith</definition>
        <argsstring>(Beam *beam, const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tgs, std::vector&lt; hum::HTp &gt; &amp;layerdata, int startindex)</argsstring>
        <name>checkBeamWith</name>
        <param>
          <type><ref refid="classvrv_1_1_beam" kindref="compound">Beam</ref> *</type>
          <declname>beam</declname>
        </param>
        <param>
          <type>const std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tgs</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>layerdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="632" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a8eb1d1d8d56c71c5d013c513fb610220" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getTrackText</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getTrackText</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="634" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af1516de8f7ed55d226d3e54da88c55f3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::checkForLayoutBreak</definition>
        <argsstring>(int line)</argsstring>
        <name>checkForLayoutBreak</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="635" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a22a730145c26231378865360a4700c19" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::removeCommas</definition>
        <argsstring>(const std::string &amp;input)</argsstring>
        <name>removeCommas</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="636" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1afcb1f93c2f110fa691d1a4b8beaf6468" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::extractNullInformation</definition>
        <argsstring>(vector&lt; bool &gt; &amp;nulls, hum::HumdrumFile &amp;infile)</argsstring>
        <name>extractNullInformation</name>
        <param>
          <type>vector&lt; bool &gt; &amp;</type>
          <declname>nulls</declname>
        </param>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="637" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aafa817cf0f910dfc7e6e48b73c3b7f57" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::initializeIgnoreVector</definition>
        <argsstring>(hum::HumdrumFile &amp;infile)</argsstring>
        <name>initializeIgnoreVector</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="638" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a9e7ed83460801c264643a78009ddfe12" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::hasIndent</definition>
        <argsstring>(hum::HTp tok)</argsstring>
        <name>hasIndent</name>
        <param>
          <type>hum::HTp</type>
          <declname>tok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="639" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa5101e7eb867e7907d3f8bf1d10a0688" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::prepareNonStandardKeySignature</definition>
        <argsstring>(KeySig *vrvkeysig, const std::string &amp;ks, hum::HTp keytok)</argsstring>
        <name>prepareNonStandardKeySignature</name>
        <param>
          <type><ref refid="classvrv_1_1_key_sig" kindref="compound">KeySig</ref> *</type>
          <declname>vrvkeysig</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ks</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>keytok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="640" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3d716bd9917b5f2c13b855417df71a40" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::fixLargeTuplets</definition>
        <argsstring>(std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tg)</argsstring>
        <name>fixLargeTuplets</name>
        <param>
          <type>std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="641" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac5b95c19bc34842417f164989df9a20e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addSlurLineStyle</definition>
        <argsstring>(Slur *element, hum::HTp token, int slurindex)</argsstring>
        <name>addSlurLineStyle</name>
        <param>
          <type><ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref> *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slurindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="642" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a753a2c3f3171d62739375714b3fd6da8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addTieLineStyle</definition>
        <argsstring>(Tie *element, hum::HTp token, int noteindex)</argsstring>
        <name>addTieLineStyle</name>
        <param>
          <type><ref refid="classvrv_1_1_tie" kindref="compound">Tie</ref> *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>noteindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="643" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a1b1d650b52250ca97737d0b53924dcba" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setAccid</definition>
        <argsstring>(Accid *accid, const std::string &amp;loaccid)</argsstring>
        <name>setAccid</name>
        <param>
          <type><ref refid="classvrv_1_1_accid" kindref="compound">Accid</ref> *</type>
          <declname>accid</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>loaccid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="644" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a05a9c35f504a9fa77a59d4e6557b81be" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::phraseIsInvisible</definition>
        <argsstring>(hum::HTp token, int pindex)</argsstring>
        <name>phraseIsInvisible</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="645" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0e429834e3e3a921580a24407054cd38" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HumNum</type>
        <definition>hum::HumNum vrv::HumdrumInput::getLeftNoteDuration</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getLeftNoteDuration</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="646" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a258af3da27f4e3e8531d3837422ee1ff" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::checkClefBufferForSameAs</definition>
        <argsstring>()</argsstring>
        <name>checkClefBufferForSameAs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="647" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a7aab99b94990c6919aa36afd71897ad5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::suppressBufferedClef</definition>
        <argsstring>(int index)</argsstring>
        <name>suppressBufferedClef</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="648" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac5cbe9ff5438a3a577d099cfcdc53200" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addExplicitStemDirection</definition>
        <argsstring>(FTrem *ftrem, hum::HTp start)</argsstring>
        <name>addExplicitStemDirection</name>
        <param>
          <type><ref refid="classvrv_1_1_f_trem" kindref="compound">FTrem</ref> *</type>
          <declname>ftrem</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="649" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0ce1ab7229e992d0f064fcf95209958b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addSlur</definition>
        <argsstring>(FTrem *ftrem, hum::HTp start, hum::HTp ending)</argsstring>
        <name>addSlur</name>
        <param>
          <type><ref refid="classvrv_1_1_f_trem" kindref="compound">FTrem</ref> *</type>
          <declname>ftrem</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>start</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>ending</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="650" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a9674a1835496eed985533d201080a73c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addFTremSlurs</definition>
        <argsstring>()</argsstring>
        <name>addFTremSlurs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="651" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a79def1f5f3a8b3400cd70586995cd14a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; vrv::HumdrumInput::getStaffNumbers</definition>
        <argsstring>(std::string &amp;deco)</argsstring>
        <name>getStaffNumbers</name>
        <param>
          <type>std::string &amp;</type>
          <declname>deco</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="652" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0694f63edc91fc483c192f3e15069762" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::insertRepetitionElement</definition>
        <argsstring>(std::vector&lt; string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers, std::vector&lt; hum::HTp &gt; tokens, int index)</argsstring>
        <name>insertRepetitionElement</name>
        <param>
          <type>std::vector&lt; string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt;</type>
          <declname>tokens</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="653" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a6d7851d8e16b75df04ccc1938eefb41e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setRepeatSlashes</definition>
        <argsstring>(BeatRpt *repeat, std::vector&lt; hum::HTp &gt; &amp;tokens, int index)</argsstring>
        <name>setRepeatSlashes</name>
        <param>
          <type><ref refid="classvrv_1_1_beat_rpt" kindref="compound">BeatRpt</ref> *</type>
          <declname>repeat</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>tokens</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="655" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a1bcffde69dbdd72dfce172df0c8a3dbb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getLabelFromInstrumentCode</definition>
        <argsstring>(hum::HTp icode, const std::string &amp;transpose)</argsstring>
        <name>getLabelFromInstrumentCode</name>
        <param>
          <type>hum::HTp</type>
          <declname>icode</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>transpose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="656" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a48e7adb75ab656bfd3c0555c1f327bfd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::checkForRehearsal</definition>
        <argsstring>(int line)</argsstring>
        <name>checkForRehearsal</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="657" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3553e5c19848fcc71df74142132e3ff7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::isBlackNotation</definition>
        <argsstring>(hum::HTp starting)</argsstring>
        <name>isBlackNotation</name>
        <param>
          <type>hum::HTp</type>
          <declname>starting</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="658" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a961b292611dd684729776880ea4cf758" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::checkNoteForScordatura</definition>
        <argsstring>(const std::string &amp;token)</argsstring>
        <name>checkNoteForScordatura</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="659" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa5e63765c6f56cf0bbc7827da901c108" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::checkForScordatura</definition>
        <argsstring>(hum::HumdrumFile &amp;infile)</argsstring>
        <name>checkForScordatura</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="660" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af5b81dac8504d4130e6dc92c6adbbead" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::adjustMeasureTimings</definition>
        <argsstring>(hum::HumdrumFile &amp;infile)</argsstring>
        <name>adjustMeasureTimings</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="661" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a965806f6ede17912a99be7477d4aef60" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::fillEmptyLayer</definition>
        <argsstring>(int staffindex, int layerindex, std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers)</argsstring>
        <name>fillEmptyLayer</name>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>layerindex</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="662" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2fcb039a76cff438623906f6d98af304" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::processOverfillingNotes</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>processOverfillingNotes</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="664" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a9b87c5a7740c91c1e743ce4a89b0e859" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::isNextBarIgnored</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>isNextBarIgnored</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="665" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aee25692fbac4ef8c4dd21da81e815b98" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::hideTerminalBarlines</definition>
        <argsstring>(hum::HumdrumFile &amp;infile)</argsstring>
        <name>hideTerminalBarlines</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="666" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a921901aaff7c054a7217b90a9a8205de" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::hideBarlinesInTiedGroup</definition>
        <argsstring>(hum::HTp startnote)</argsstring>
        <name>hideBarlinesInTiedGroup</name>
        <param>
          <type>hum::HTp</type>
          <declname>startnote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="667" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a91301574ae53080021b1f300d74a1151" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getMultiEndline</definition>
        <argsstring>(int startindex)</argsstring>
        <name>getMultiEndline</name>
        <param>
          <type>int</type>
          <declname>startindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="668" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a364324c21bdd6a7758e5ecbc8d31e440" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processHangingTieEnd</definition>
        <argsstring>(Note *note, hum::HTp token, const std::string &amp;tstring, int subindex, hum::HumNum meterunit)</argsstring>
        <name>processHangingTieEnd</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>tstring</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subindex</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>meterunit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="669" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a6a97400ed4594b4008bf92e3d1907175" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processHangingTieStarts</definition>
        <argsstring>()</argsstring>
        <name>processHangingTieStarts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="671" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa749fb3aeca421cd27010ef4c8ea6faf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::processHangingTieStart</definition>
        <argsstring>(humaux::HumdrumTie &amp;tieinfo)</argsstring>
        <name>processHangingTieStart</name>
        <param>
          <type>humaux::HumdrumTie &amp;</type>
          <declname>tieinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="672" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa868b102aed06ba36286e321e5e289d9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::atEndingBoundaryStart</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>atEndingBoundaryStart</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="673" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1adb2681b8ce0cbeede32190b8dd81cc7a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::atEndingBoundaryEnd</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>atEndingBoundaryEnd</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="674" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a6970b07153237547476344819568b93e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_tie" kindref="compound">Tie</ref> *</type>
        <definition>Tie* vrv::HumdrumInput::tieToPreviousItem</definition>
        <argsstring>(hum::HTp token, int subindex, hum::HumNum meterunit)</argsstring>
        <name>tieToPreviousItem</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subindex</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>meterunit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="675" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa57b7f24a39bea75e46967d616a4b32a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_tie" kindref="compound">Tie</ref> *</type>
        <definition>Tie* vrv::HumdrumInput::addHangingTieToNextItem</definition>
        <argsstring>(hum::HTp token, int subindex, hum::HumNum meterunit, Measure *measure)</argsstring>
        <name>addHangingTieToNextItem</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subindex</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>meterunit</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>measure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="676" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2994fa04a6a3dbdb6b21085f8bf54443" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::inDifferentEndings</definition>
        <argsstring>(hum::HTp token1, hum::HTp token2)</argsstring>
        <name>inDifferentEndings</name>
        <param>
          <type>hum::HTp</type>
          <declname>token1</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="677" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a613cf467a8f8a1b085d98d7104c141f1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::checkIfSlurIsInvisible</definition>
        <argsstring>(hum::HTp token, int number)</argsstring>
        <name>checkIfSlurIsInvisible</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="678" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aca26cf3e46d532b0368a991174d65810" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::checkForTupletMergesAndSplits</definition>
        <argsstring>(std::vector&lt; int &gt; &amp;tupletgroups, std::vector&lt; hum::HTp &gt; &amp;duritems, std::vector&lt; hum::HumNum &gt; &amp;durations, std::vector&lt; bool &gt; &amp;durforce)</argsstring>
        <name>checkForTupletMergesAndSplits</name>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>tupletgroups</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>duritems</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HumNum &gt; &amp;</type>
          <declname>durations</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; &amp;</type>
          <declname>durforce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="679" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a874fc6baeceb3788419bc34643932510" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::hasLayoutParameter</definition>
        <argsstring>(hum::HTp token, const std::string &amp;category, const std::string &amp;param)</argsstring>
        <name>hasLayoutParameter</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="681" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3184c94f4c70315952822ae5b5431ff5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::assignTupletScalings</definition>
        <argsstring>(std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;tg)</argsstring>
        <name>assignTupletScalings</name>
        <param>
          <type>std::vector&lt; humaux::HumdrumBeamAndTuplet &gt; &amp;</type>
          <declname>tg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="682" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1acf149d6a27456a78418c6d48370497b7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getLayoutParameter</definition>
        <argsstring>(hum::HTp token, const std::string &amp;category, const std::string &amp;catkey, const string &amp;trueString, const string &amp;falseString=&quot;&quot;)</argsstring>
        <name>getLayoutParameter</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>category</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>catkey</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>trueString</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>falseString</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="683" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa2da94e19c92a9082295eb6681081124" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::analyzeClefNulls</definition>
        <argsstring>(hum::HumdrumFile &amp;infile)</argsstring>
        <name>analyzeClefNulls</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="685" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1abc9dcc29bc8d58457678ed8dcd45c918" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::markAdjacentNullsWithClef</definition>
        <argsstring>(hum::HTp clef)</argsstring>
        <name>markAdjacentNullsWithClef</name>
        <param>
          <type>hum::HTp</type>
          <declname>clef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="686" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a41056e20176a384b5a9fe721bdbc3286" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::markOtherClefsAsChange</definition>
        <argsstring>(hum::HTp clef)</argsstring>
        <name>markOtherClefsAsChange</name>
        <param>
          <type>hum::HTp</type>
          <declname>clef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="687" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a44f85b078d7743236d3bf27c47d35032" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getCurrentLayerCount</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getCurrentLayerCount</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="688" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a808bbc6c0962f30e1694f13b4cf33389" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::checkForBreak</definition>
        <argsstring>(hum::HumdrumFile &amp;infile, int line)</argsstring>
        <name>checkForBreak</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="689" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a410d1e287a0ab03001983be4588626ab" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getLowestDiatonicPitch</definition>
        <argsstring>(hum::HTp token, const string &amp;requirement)</argsstring>
        <name>getLowestDiatonicPitch</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>requirement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="690" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac2dce5637ead52fda0bb4ee5097c7872" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getHighestDiatonicPitch</definition>
        <argsstring>(hum::HTp token, const string &amp;requirement)</argsstring>
        <name>getHighestDiatonicPitch</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>requirement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="691" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1acc502298407632be9ce36e7a0a83ee43" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::hasMensuralStaff</definition>
        <argsstring>(hum::HLp line)</argsstring>
        <name>hasMensuralStaff</name>
        <param>
          <type>hum::HLp</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="692" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac09b20d8362f4bdf1355b8fa274b1da8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getNextBarlineIndex</definition>
        <argsstring>(hum::HumdrumFile &amp;infile, int startline)</argsstring>
        <name>getNextBarlineIndex</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="693" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a19061dc00d4c37a4bf7fd7822db90c1d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::escapeFreeAmpersand</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>escapeFreeAmpersand</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="694" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac6d12f33e22d2aa5b197e8de9edc90bd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addHairpinAccent</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>addHairpinAccent</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="695" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a45b914178a46a5c7e865aef94d7e3c13" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::handleCustos</definition>
        <argsstring>(std::vector&lt; string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers, std::vector&lt; hum::HTp &gt; tokens, int index)</argsstring>
        <name>handleCustos</name>
        <param>
          <type>std::vector&lt; string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt;</type>
          <declname>tokens</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="696" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a22816d7105ead30d43e96ff0fcafb01e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HTp</type>
        <definition>hum::HTp vrv::HumdrumInput::getAssociatedDynamSpine</definition>
        <argsstring>(hum::HTp stafftok)</argsstring>
        <name>getAssociatedDynamSpine</name>
        <param>
          <type>hum::HTp</type>
          <declname>stafftok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="698" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a220a6b620ac05f588be87e4c078391ff" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HTp</type>
        <definition>hum::HTp vrv::HumdrumInput::getPreviousStaffToken</definition>
        <argsstring>(hum::HTp parttok)</argsstring>
        <name>getPreviousStaffToken</name>
        <param>
          <type>hum::HTp</type>
          <declname>parttok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="699" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a465ca88419849f859389d9e91d08c881" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::checkForVerseLabels</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>checkForVerseLabels</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="700" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a7309e6fbd84cae4f76ddc420cbcdcbac" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; hum::HTp &gt;</type>
        <definition>std::vector&lt;hum::HTp&gt; vrv::HumdrumInput::getVerseLabels</definition>
        <argsstring>(hum::HTp token, int staff)</argsstring>
        <name>getVerseLabels</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="701" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac1c149b18e2179b1bf9678174dbc5a68" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vrv::HumdrumInput::getVerseLabelText</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getVerseLabelText</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="702" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aaad545361a47f271d3d8cdc7efc1c001" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addPlicaUp</definition>
        <argsstring>(Note *note)</argsstring>
        <name>addPlicaUp</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="703" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a93325959ee6955ab00d15a0897bb2a97" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addPlicaDown</definition>
        <argsstring>(Note *note)</argsstring>
        <name>addPlicaDown</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="704" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aaf2795dec3838fde0de609c32a2a427c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setLayoutSlurDirection</definition>
        <argsstring>(Slur *slur, hum::HTp token)</argsstring>
        <name>setLayoutSlurDirection</name>
        <param>
          <type><ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref> *</type>
          <declname>slur</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="705" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a30d6249737f9d45c26286da7889d3225" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setFontStyle</definition>
        <argsstring>(Rend *rend, const string &amp;fontstyle)</argsstring>
        <name>setFontStyle</name>
        <param>
          <type><ref refid="classvrv_1_1_rend" kindref="compound">Rend</ref> *</type>
          <declname>rend</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>fontstyle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="706" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1adfbe4c999074bcff08acc0fc7d180672" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::importVerovioOptions</definition>
        <argsstring>(Doc *doc)</argsstring>
        <name>importVerovioOptions</name>
        <param>
          <type><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="707" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae387b5e7041a66bcdcaf2418c4c237c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::adjustChordNoteDurations</definition>
        <argsstring>(Chord *chord, std::vector&lt; Note * &gt; &amp;notes, std::vector&lt; string &gt; &amp;tstrings)</argsstring>
        <name>adjustChordNoteDurations</name>
        <param>
          <type><ref refid="classvrv_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>chord</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classvrv_1_1_note" kindref="compound">Note</ref> * &gt; &amp;</type>
          <declname>notes</declname>
        </param>
        <param>
          <type>std::vector&lt; string &gt; &amp;</type>
          <declname>tstrings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="708" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a9bac84194fc403281490d3f3f3c956b5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::adjustChordNoteDuration</definition>
        <argsstring>(Note *note, hum::HumNum hdur, int dur, int dots, hum::HumNum chorddur, const string &amp;tstring, hum::HumNum factor)</argsstring>
        <name>adjustChordNoteDuration</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>hdur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dots</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>chorddur</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>tstring</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="709" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2e95d79107f44b7e25def17e1ab15ea8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::setNoteMeiDur</definition>
        <argsstring>(Note *note, int meidur)</argsstring>
        <name>setNoteMeiDur</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meidur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="711" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3483c4e316bd887e7d02b74424bc2a6a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::storeExpansionListsInChoice</definition>
        <argsstring>(Section *section, std::vector&lt; hum::HTp &gt; &amp;expansions)</argsstring>
        <name>storeExpansionListsInChoice</name>
        <param>
          <type><ref refid="classvrv_1_1_section" kindref="compound">Section</ref> *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>expansions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="712" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3d6dc2f61ebc75912aaed676ed89b04b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::HumdrumInput::getMmTempo</definition>
        <argsstring>(hum::HTp token, bool checklast=false)</argsstring>
        <name>getMmTempo</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checklast</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="713" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a64d54a54698186ec80ee8ed2bf2fb8c5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::HumdrumInput::getMmTempoForward</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>getMmTempoForward</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="714" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1acf39b1413a0f778a858f17a9c3a0e554" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::isNearOmd</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>isNearOmd</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="715" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3414e9dabb210ad8bfa8cfcef4be8072" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::handleTempoChange</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>handleTempoChange</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="716" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a18996f1ca21f49169d3bf01a9973b12b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::hasTempoTextAfter</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>hasTempoTextAfter</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="717" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1afa2a37fbcbc25b87250b0d797c7fe08e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::isTempoishText</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>isTempoishText</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="718" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1accd079f6101b7df1fe5f05426f63da7a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::isLastStaffTempo</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>isLastStaffTempo</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="719" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac41a77f02a8205786b26938724d176cc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addMensuralQuality</definition>
        <argsstring>(Note *note, hum::HTp token)</argsstring>
        <name>addMensuralQuality</name>
        <param>
          <type><ref refid="classvrv_1_1_note" kindref="compound">Note</ref> *</type>
          <declname>note</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="720" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af87343e7d813f4aa449a1b2fdfb97fb5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::checkForMens</definition>
        <argsstring>(hum::HumdrumFile &amp;infile)</argsstring>
        <name>checkForMens</name>
        <param>
          <type>hum::HumdrumFile &amp;</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="721" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a8af863911c302961db286a67471d7829" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::HumdrumInput::layerOnlyContainsNullStuff</definition>
        <argsstring>(std::vector&lt; hum::HTp &gt; &amp;data)</argsstring>
        <name>layerOnlyContainsNullStuff</name>
        <param>
          <type>std::vector&lt; hum::HTp &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="722" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ad9700208ae176666539de8a4a9bc71db" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::HumdrumInput::getNoteStaff</definition>
        <argsstring>(hum::HTp token, int homestaff)</argsstring>
        <name>getNoteStaff</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>homestaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="723" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a83b8312c0e14e9525c5e98a8c0016c2d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addBarLineElement</definition>
        <argsstring>(hum::HTp bartok, std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers)</argsstring>
        <name>addBarLineElement</name>
        <param>
          <type>hum::HTp</type>
          <declname>bartok</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="724" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a966c63e8921aded6ad9d48f54e9a583d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::createHeader</definition>
        <argsstring>()</argsstring>
        <name>createHeader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="727" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a4c0eb71290772178868c723625dffb0d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::insertTitle</definition>
        <argsstring>(pugi::xml_node &amp;titleStmt, const std::vector&lt; hum::HumdrumLine * &gt; &amp;references)</argsstring>
        <name>insertTitle</name>
        <param>
          <type>pugi::xml_node &amp;</type>
          <declname>titleStmt</declname>
        </param>
        <param>
          <type>const std::vector&lt; hum::HumdrumLine * &gt; &amp;</type>
          <declname>references</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="728" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5e7c38dab010fd569f7c7c0b7e778586" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::insertExtMeta</definition>
        <argsstring>(std::vector&lt; hum::HumdrumLine * &gt; &amp;references)</argsstring>
        <name>insertExtMeta</name>
        <param>
          <type>std::vector&lt; hum::HumdrumLine * &gt; &amp;</type>
          <declname>references</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="729" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac1006f37a5ab101e04ba55573b2be580" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::addPerson</definition>
        <argsstring>(std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;respPeople, std::vector&lt; hum::HumdrumLine * &gt; &amp;references, const std::string &amp;key, const std::string &amp;role)</argsstring>
        <name>addPerson</name>
        <param>
          <type>std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;</type>
          <declname>respPeople</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HumdrumLine * &gt; &amp;</type>
          <declname>references</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>role</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="730" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0469aeb1679738887693dcea293fa0cd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::getRespPeople</definition>
        <argsstring>(std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;respPeople, std::vector&lt; hum::HumdrumLine * &gt; &amp;references)</argsstring>
        <name>getRespPeople</name>
        <param>
          <type>std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;</type>
          <declname>respPeople</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HumdrumLine * &gt; &amp;</type>
          <declname>references</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="732" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3c01b8fbb773e6c875abd4ae8d2156f3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::insertRespStmt</definition>
        <argsstring>(pugi::xml_node &amp;titleStmt, std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;respPeople)</argsstring>
        <name>insertRespStmt</name>
        <param>
          <type>pugi::xml_node &amp;</type>
          <declname>titleStmt</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;</type>
          <declname>respPeople</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="733" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a132f555dc6fa7b07e89bde81ab3e2fc7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::insertPeople</definition>
        <argsstring>(pugi::xml_node &amp;work, std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;respPeople)</argsstring>
        <name>insertPeople</name>
        <param>
          <type>pugi::xml_node &amp;</type>
          <declname>work</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;</type>
          <declname>respPeople</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="734" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aeab1fa55b027b749bece352ef47b8ed3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::verticalRest</definition>
        <argsstring>(ELEMENT rest, const std::string &amp;token)</argsstring>
        <name>verticalRest</name>
        <param>
          <type>ELEMENT</type>
          <declname>rest</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
<para>Templates ///////////////////////////////////////////////////////////. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="737" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac98af05229a51a05b1cfc6b6d0842ce5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setKeySig</definition>
        <argsstring>(int partindex, ELEMENT element, const std::string &amp;keysig, hum::HTp keysigtok, hum::HTp keytok, bool secondary)</argsstring>
        <name>setKeySig</name>
        <param>
          <type>int</type>
          <declname>partindex</declname>
        </param>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>keysig</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>keysigtok</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>keytok</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>secondary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="739" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae25fa1e1ea4a2388e40a6b5739cef105" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setKeySig</definition>
        <argsstring>(ELEMENT *element, hum::HTp keysigtok)</argsstring>
        <name>setKeySig</name>
        <param>
          <type>ELEMENT *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>keysigtok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="741" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aebdd0f0aabbcd60b1676a90f718490cd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PARENT</type>
          </param>
          <param>
            <type>class CHILD</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::appendElement</definition>
        <argsstring>(PARENT parent, CHILD child)</argsstring>
        <name>appendElement</name>
        <param>
          <type>PARENT</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>CHILD</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="742" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a902de02f98825c4f59e4b94ad74dae7a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::addArticulations</definition>
        <argsstring>(ELEMENT element, hum::HTp token)</argsstring>
        <name>addArticulations</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="743" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aff101726f730123e7e95db600991229b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>hum::HumNum</type>
        <definition>hum::HumNum vrv::HumdrumInput::convertRhythm</definition>
        <argsstring>(ELEMENT element, hum::HTp token, int subtoken=-1)</argsstring>
        <name>convertRhythm</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtoken</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="744" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a26faaef006b12999313d8aacc4fcfb15" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setRhythmFromDuration</definition>
        <argsstring>(ELEMENT element, hum::HumNum dur)</argsstring>
        <name>setRhythmFromDuration</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>dur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="745" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a496a3d29ed1a5a8dac5fa6ae301d118b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>hum::HumNum</type>
        <definition>hum::HumNum vrv::HumdrumInput::convertMensuralRhythm</definition>
        <argsstring>(ELEMENT element, hum::HTp token, int subtoken=-1)</argsstring>
        <name>convertMensuralRhythm</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtoken</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="746" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0eb57b441ce2c1dcf3b8346a3e8f0ff1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>hum::HumNum</type>
        <definition>hum::HumNum vrv::HumdrumInput::setDuration</definition>
        <argsstring>(ELEMENT element, hum::HumNum duration)</argsstring>
        <name>setDuration</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HumNum</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="747" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af6f30cc5fc0a573613902fc396686ad7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setStaff</definition>
        <argsstring>(ELEMENT element, int staffnum)</argsstring>
        <name>setStaff</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffnum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="748" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a6e7147c80a9147012d4e736dc175ac4d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setStaffBetween</definition>
        <argsstring>(ELEMENT element, int staffnum)</argsstring>
        <name>setStaffBetween</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffnum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="749" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a626bb4c3daf7cb457a105c4a0692484f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setN</definition>
        <argsstring>(ELEMENT element, int nvalue, hum::HTp tok=NULL)</argsstring>
        <name>setN</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nvalue</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>tok</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="750" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0ee49a05b9a33f67365f49707f6c32e8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::assignAutomaticStem</definition>
        <argsstring>(ELEMENT element, hum::HTp tok, int staffindex)</argsstring>
        <name>assignAutomaticStem</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>tok</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="751" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1abf1a66b55b253bd54a2261984f4ea7a0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvrv_1_1_key_sig" kindref="compound">KeySig</ref> *</type>
        <definition>KeySig* vrv::HumdrumInput::getKeySig</definition>
        <argsstring>(ELEMENT element)</argsstring>
        <name>getKeySig</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="752" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a14e6715db660513918fb1796115b9569" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvrv_1_1_meter_sig" kindref="compound">MeterSig</ref> *</type>
        <definition>MeterSig* vrv::HumdrumInput::getMeterSig</definition>
        <argsstring>(ELEMENT element)</argsstring>
        <name>getMeterSig</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="753" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a8b3674236e3b4b21b7eda81021fc5858" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvrv_1_1_clef" kindref="compound">Clef</ref> *</type>
        <definition>Clef* vrv::HumdrumInput::getClef</definition>
        <argsstring>(ELEMENT element)</argsstring>
        <name>getClef</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="754" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae268fc474e28081c9511f96dcfe245c2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvrv_1_1_mensur" kindref="compound">Mensur</ref> *</type>
        <definition>Mensur* vrv::HumdrumInput::getMensur</definition>
        <argsstring>(ELEMENT element, hum::HTp token=NULL)</argsstring>
        <name>getMensur</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="755" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1abe3fb60c7c5f6bc4d1a6457834988682" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::insertPhrase</definition>
        <argsstring>(ELEMENT phrase, hum::HTp phrasestart, hum::HTp phraseend, Measure *startmeasure, std::vector&lt; pair&lt; int, int &gt;&gt; &amp;endchordsorted, std::vector&lt; std::pair&lt; int, int &gt;&gt; &amp;startchordsorted, std::vector&lt; pair&lt; int, bool &gt;&gt; &amp;phrasestartnoteinfo, std::vector&lt; pair&lt; int, bool &gt;&gt; &amp;phraseendnoteinfo, int ndex, std::vector&lt; std::vector&lt; int &gt;&gt; &amp;phraseindex, int i, int j, std::vector&lt; int &gt; &amp;startpitches, std::vector&lt; int &gt; &amp;endpitches, std::vector&lt; bool &gt; &amp;indexused)</argsstring>
        <name>insertPhrase</name>
        <param>
          <type>ELEMENT</type>
          <declname>phrase</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>phrasestart</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>phraseend</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>startmeasure</declname>
        </param>
        <param>
          <type>std::vector&lt; pair&lt; int, int &gt;&gt; &amp;</type>
          <declname>endchordsorted</declname>
        </param>
        <param>
          <type>std::vector&lt; std::pair&lt; int, int &gt;&gt; &amp;</type>
          <declname>startchordsorted</declname>
        </param>
        <param>
          <type>std::vector&lt; pair&lt; int, bool &gt;&gt; &amp;</type>
          <declname>phrasestartnoteinfo</declname>
        </param>
        <param>
          <type>std::vector&lt; pair&lt; int, bool &gt;&gt; &amp;</type>
          <declname>phraseendnoteinfo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndex</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; int &gt;&gt; &amp;</type>
          <declname>phraseindex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>startpitches</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>endpitches</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; &amp;</type>
          <declname>indexused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="757" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a87f162e23c9c4d279dce0933f3034c37" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::convertVerses</definition>
        <argsstring>(ELEMENT element, hum::HTp token)</argsstring>
        <name>convertVerses</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="762" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a93ea91d98108b32da99fab8dc2ec0308" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setTimeSig</definition>
        <argsstring>(ELEMENT element, hum::HTp timesigtok, hum::HTp metersigtok, int staffindex)</argsstring>
        <name>setTimeSig</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>timesigtok</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>metersigtok</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="764" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a7f84e7c8386ec3a054ec5154a8e47f36" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::addChildBackMeasureOrSection</definition>
        <argsstring>(ELEMENT element)</argsstring>
        <name>addChildBackMeasureOrSection</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="765" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3c7e508e5ffc211679d67f87a3a94c80" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::addChildMeasureOrSection</definition>
        <argsstring>(ELEMENT element)</argsstring>
        <name>addChildMeasureOrSection</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="766" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa27ffa3996528c4c0c7371a0eedd9090" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CHILD</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::appendElement</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;name, const std::vector&lt; void * &gt; &amp;pointers, CHILD child)</argsstring>
        <name>appendElement</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <param>
          <type>CHILD</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="768" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3af204a38e86526f3cf0e8ea2a35cfbc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::popElementStack</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;elements, std::vector&lt; void * &gt; &amp;pointers)</argsstring>
        <name>popElementStack</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::vector&lt; void * &gt; &amp;</type>
          <declname>pointers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="769" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a44aea3f1cfebb48e3fe3c37406014c4c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::addTextElement</definition>
        <argsstring>(ELEMENT *element, const std::string &amp;content, const std::string &amp;fontstyle=&quot;&quot;, bool addSpacer=true)</argsstring>
        <name>addTextElement</name>
        <param>
          <type>ELEMENT *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>content</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>fontstyle</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>addSpacer</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="771" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5de615265bd93fec305ecb68d3647668" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::addVerovioTextElement</definition>
        <argsstring>(ELEMENT *element, const std::string &amp;musictext)</argsstring>
        <name>addVerovioTextElement</name>
        <param>
          <type>ELEMENT *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>musictext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="773" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ab4087fab9d159e649c26572c1cf0a43c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::checkForAutoStem</definition>
        <argsstring>(ELEMENT element, hum::HTp token)</argsstring>
        <name>checkForAutoStem</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="774" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a9e98bba026711cad2c7ded378bf91fe1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::appendTypeTag</definition>
        <argsstring>(ELEMENT *element, const std::string &amp;tag)</argsstring>
        <name>appendTypeTag</name>
        <param>
          <type>ELEMENT *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="775" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2377fb20ca202b06f776bf7552cb3eef" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setPlaceRelStaff</definition>
        <argsstring>(ELEMENT *element, const std::string &amp;place, bool showplace)</argsstring>
        <name>setPlaceRelStaff</name>
        <param>
          <type>ELEMENT *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>place</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>showplace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="776" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a8191d8cab90dc91e98bde2c09fd2e97b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setPlaceRelEvent</definition>
        <argsstring>(ELEMENT *element, const std::string &amp;place, bool showplace)</argsstring>
        <name>setPlaceRelEvent</name>
        <param>
          <type>ELEMENT *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>place</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>showplace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="777" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a8b76336b2e864bc1aacd404b19f0c7b8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setMeterSymbol</definition>
        <argsstring>(ELEMENT *element, const std::string &amp;metersig, int staffindex, hum::HTp partstart=NULL, hum::HTp metertok=NULL)</argsstring>
        <name>setMeterSymbol</name>
        <param>
          <type>ELEMENT *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metersig</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>partstart</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>metertok</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="779" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ab55d581149964bdf4f2b6655f0860b51" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setMensurationSymbol</definition>
        <argsstring>(ELEMENT *element, const std::string &amp;metersig, int staffindex, hum::HTp mensurtok=NULL)</argsstring>
        <name>setMensurationSymbol</name>
        <param>
          <type>ELEMENT *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metersig</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffindex</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>mensurtok</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="782" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1acc051a116e1dfd5df9ced05add47c84d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setInstrumentName</definition>
        <argsstring>(ELEMENT *staffdef, const std::string &amp;name, hum::HTp labeltok=NULL)</argsstring>
        <name>setInstrumentName</name>
        <param>
          <type>ELEMENT *</type>
          <declname>staffdef</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>labeltok</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="784" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a2f80ba6d36a41c0e957fd3c1df72c90e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setInstrumentAbbreviation</definition>
        <argsstring>(ELEMENT *staffdef, const std::string &amp;name, hum::HTp abbrtok)</argsstring>
        <name>setInstrumentAbbreviation</name>
        <param>
          <type>ELEMENT *</type>
          <declname>staffdef</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>abbrtok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="786" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a924273ffda75bc3ea30b17e1f9cdff94" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::insertTwoRhythmsAndTextBetween</definition>
        <argsstring>(ELEMENT *element, const std::string &amp;note1, const std::string &amp;text, const std::string &amp;note2)</argsstring>
        <name>insertTwoRhythmsAndTextBetween</name>
        <param>
          <type>ELEMENT *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>note1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>note2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="788" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a1eaea975a983abcbbdab676e618b6c1d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::addDurRecip</definition>
        <argsstring>(ELEMENT element, const std::string &amp;ttoken)</argsstring>
        <name>addDurRecip</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ttoken</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="790" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a6bd1948be13ee150922204427c954373" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::addFermata</definition>
        <argsstring>(ELEMENT *rest, const std::string &amp;tstring)</argsstring>
        <name>addFermata</name>
        <param>
          <type>ELEMENT *</type>
          <declname>rest</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>tstring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="791" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a4ea33f415c99334941e4266cfbc97886" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::storeExpansionList</definition>
        <argsstring>(ELEMENT *parent, hum::HTp etok)</argsstring>
        <name>storeExpansionList</name>
        <param>
          <type>ELEMENT *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>etok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="792" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ad043ee87f582dd0e54c87716b666889e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setWrittenAccidentalUpper</definition>
        <argsstring>(ELEMENT element, const string &amp;value)</argsstring>
        <name>setWrittenAccidentalUpper</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="793" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a9595081c91cf81606c160a4b61e18387" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ELEMENT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void vrv::HumdrumInput::setWrittenAccidentalLower</definition>
        <argsstring>(ELEMENT element, const string &amp;value)</argsstring>
        <name>setWrittenAccidentalLower</name>
        <param>
          <type>ELEMENT</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="794" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af21104975f26cfd02cae3b2cc6bd2a7c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring vrv::HumdrumInput::cleanHarmString</definition>
        <argsstring>(const std::string &amp;content)</argsstring>
        <name>cleanHarmString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="808" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5fd3b6a1b3f5710ed8124936031c6ecc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring vrv::HumdrumInput::cleanHarmString2</definition>
        <argsstring>(const std::string &amp;content)</argsstring>
        <name>cleanHarmString2</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="809" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac09593969ca6336677a47f6ba599ca3c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring vrv::HumdrumInput::cleanHarmString3</definition>
        <argsstring>(const std::string &amp;content)</argsstring>
        <name>cleanHarmString3</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="810" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a9e68d5c9cb23a9e2e7bd5e8366212ae7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring vrv::HumdrumInput::cleanStringString</definition>
        <argsstring>(const std::string &amp;content)</argsstring>
        <name>cleanStringString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="811" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1add117a81b6075c4c00cb0109abf622e3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::wstring &gt;</type>
        <definition>std::vector&lt;std::wstring&gt; vrv::HumdrumInput::cleanFBString</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;pieces, hum::HTp token)</argsstring>
        <name>cleanFBString</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>pieces</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="812" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ae531b65c9e822243c7bb9236c3a10abc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring vrv::HumdrumInput::cleanFBString2</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;pieces, hum::HTp token)</argsstring>
        <name>cleanFBString2</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>pieces</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="813" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5571cebc9e1719cf676693af9082833b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; vrv::HumdrumInput::splitFBString</definition>
        <argsstring>(const std::string &amp;content, const std::string &amp;separator=&quot; &quot;)</argsstring>
        <name>splitFBString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>content</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>separator</declname>
          <defval>&quot; &quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="814" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa14343e4e70cb0a0b35b78a08afba138" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring vrv::HumdrumInput::getVisualFBAccidental</definition>
        <argsstring>(int accidental)</argsstring>
        <name>getVisualFBAccidental</name>
        <param>
          <type>int</type>
          <declname>accidental</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="815" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a135b2d1a7a947dbaa2c7f764f8193b3f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring vrv::HumdrumInput::convertFBNumber</definition>
        <argsstring>(const std::string &amp;input, hum::HTp token)</argsstring>
        <name>convertFBNumber</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="816" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a4e18d3c9d896b773a5a2c154d0f5c693" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::HumdrumInput::checkForLineContinuations</definition>
        <argsstring>(hum::HTp token)</argsstring>
        <name>checkForLineContinuations</name>
        <param>
          <type>hum::HTp</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="817" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1af27eb6d815f4010e5c536a4f804c9a7b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring vrv::HumdrumInput::convertNumberToWstring</definition>
        <argsstring>(int number)</argsstring>
        <name>convertNumberToWstring</name>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="818" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a3a9cb0e5cf601ccbe32c261cd96b5ab0" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string vrv::HumdrumInput::unescapeHtmlEntities</definition>
        <argsstring>(const std::string &amp;input)</argsstring>
        <name>unescapeHtmlEntities</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Static functions ////////////////////////////////////////////////////. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="797" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0acf7e7510ec5e0d78373afa0854aa59" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vrv::HumdrumInput::WriteUTF8</definition>
        <argsstring>(std::ostream &amp;Out, unsigned int Ch)</argsstring>
        <name>WriteUTF8</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>Out</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>Ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="798" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ab63ec2b131f47b4ee96394932eeb25d6" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vrv::HumdrumInput::UnquoteHTML</definition>
        <argsstring>(std::istream &amp;In, std::ostream &amp;Out)</argsstring>
        <name>UnquoteHTML</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>In</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>Out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="799" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a58a2e0f0ef741da2c470e4f55e2531cb" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HumNum</type>
        <definition>static hum::HumNum vrv::HumdrumInput::removeFactorsOfTwo</definition>
        <argsstring>(hum::HumNum value, int &amp;tcount, int &amp;bcount)</argsstring>
        <name>removeFactorsOfTwo</name>
        <param>
          <type>hum::HumNum</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>tcount</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>bcount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="800" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a0bdafd620dcd32342684c5f8d1cf8217" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int vrv::HumdrumInput::getDotPowerOfTwo</definition>
        <argsstring>(hum::HumNum value)</argsstring>
        <name>getDotPowerOfTwo</name>
        <param>
          <type>hum::HumNum</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="801" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a8b3fd7dc7e249a8d699759f3c523a489" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int vrv::HumdrumInput::nextLowerPowerOfTwo</definition>
        <argsstring>(int x)</argsstring>
        <name>nextLowerPowerOfTwo</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="802" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a31bc7d710255b76a4e48459b48cc65b8" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hum::HumNum</type>
        <definition>static hum::HumNum vrv::HumdrumInput::nextHigherPowerOfTwo</definition>
        <argsstring>(hum::HumNum x)</argsstring>
        <name>nextHigherPowerOfTwo</name>
        <param>
          <type>hum::HumNum</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="803" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5c30b424256f9f9f5edb29b9bfd7dc71" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string vrv::HumdrumInput::getDateString</definition>
        <argsstring>()</argsstring>
        <name>getDateString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="804" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1ac2e8d0ae8efede8b33a7c60e271f5bf9" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string vrv::HumdrumInput::getReferenceValue</definition>
        <argsstring>(const std::string &amp;key, std::vector&lt; hum::HumdrumLine * &gt; &amp;references)</argsstring>
        <name>getReferenceValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::vector&lt; hum::HumdrumLine * &gt; &amp;</type>
          <declname>references</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="805" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1aa14fa57db0157b159737661fbeee023f" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool vrv::HumdrumInput::replace</definition>
        <argsstring>(std::string &amp;str, const std::string &amp;oldStr, const std::string &amp;newStr)</argsstring>
        <name>replace</name>
        <param>
          <type>std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>oldStr</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>newStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="806" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_humdrum_input_1a5ecc3f0a44d416dc9f6224ca62061a9e" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool vrv::HumdrumInput::replace</definition>
        <argsstring>(std::wstring &amp;str, const std::wstring &amp;oldStr, const std::wstring &amp;newStr)</argsstring>
        <name>replace</name>
        <param>
          <type>std::wstring &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>oldStr</declname>
        </param>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>newStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="807" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>vrv::Input</label>
        <link refid="classvrv_1_1_input"/>
      </node>
      <node id="1">
        <label>vrv::HumdrumInput</label>
        <link refid="classvrv_1_1_humdrum_input"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>vrv::Doc</label>
        <link refid="classvrv_1_1_doc"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_expansionMap</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_mdivScoreDef</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>AttMultinumMeasures</label>
      </node>
      <node id="8">
        <label>vrv::ScoreDefElement</label>
        <link refid="classvrv_1_1_score_def_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>AttSystems</label>
      </node>
      <node id="2">
        <label>vrv::Input</label>
        <link refid="classvrv_1_1_input"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_doc</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>AttDistances</label>
      </node>
      <node id="17">
        <label>AttTyped</label>
      </node>
      <node id="5">
        <label>vrv::BoundingBox</label>
        <link refid="classvrv_1_1_bounding_box"/>
      </node>
      <node id="9">
        <label>vrv::ScoreDefInterface</label>
        <link refid="classvrv_1_1_score_def_interface"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>vrv::Interface</label>
        <link refid="classvrv_1_1_interface"/>
      </node>
      <node id="1">
        <label>vrv::HumdrumInput</label>
        <link refid="classvrv_1_1_humdrum_input"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>AttMidiTempo</label>
      </node>
      <node id="20">
        <label>AttEndings</label>
      </node>
      <node id="15">
        <label>AttSpacing</label>
      </node>
      <node id="6">
        <label>vrv::ExpansionMap</label>
        <link refid="classvrv_1_1_expansion_map"/>
      </node>
      <node id="11">
        <label>AttLyricStyle</label>
      </node>
      <node id="7">
        <label>vrv::ScoreDef</label>
        <link refid="classvrv_1_1_score_def"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>AttOptimization</label>
      </node>
      <node id="4">
        <label>vrv::Object</label>
        <link refid="classvrv_1_1_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>AttMeasureNumbers</label>
      </node>
      <node id="18">
        <label>vrv::ObjectListInterface</label>
        <link refid="classvrv_1_1_object_list_interface"/>
      </node>
      <node id="22">
        <label>AttTimeBase</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" line="388" column="37" bodyfile="/home/runner/work/verovio/verovio/include/vrv/iohumdrum.h" bodystart="388" bodyend="1068"/>
    <listofallmembers>
      <member refid="classvrv_1_1_humdrum_input_1ab18231c76dd68ab8ceb917d4765fd3d0" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addArpeggio</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a902de02f98825c4f59e4b94ad74dae7a" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addArticulations</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a83b8312c0e14e9525c5e98a8c0016c2d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addBarLineElement</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a35acda4d038a66935620e24c005690e9" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addBreath</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a37acfc6e81605b316f5a2f0ffe593b9e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addCautionaryAccidental</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a7f84e7c8386ec3a054ec5154a8e47f36" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addChildBackMeasureOrSection</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3c7e508e5ffc211679d67f87a3a94c80" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addChildMeasureOrSection</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a8a9637a9cdd7ceaf1121a2c020e5f94d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addDefaultTempo</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a18165af361ac09c52b3ec64ad8f10a80" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addDirection</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1eaea975a983abcbbdab676e618b6c1d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addDurRecip</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac5cbe9ff5438a3a577d099cfcdc53200" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addExplicitStemDirection</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2f1200a3e9aafe5e787426b4233351b5" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addFermata</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a6bd1948be13ee150922204427c954373" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addFermata</name></member>
      <member refid="classvrv_1_1_humdrum_input_1adfbe6982aba0497b4a9be8fdcb569a69" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addFiguredBassForMeasure</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a90ffb56498d42fdb7a9097649448612e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addFingeringsForMeasure</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9674a1835496eed985533d201080a73c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addFTremSlurs</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac6d12f33e22d2aa5b197e8de9edc90bd" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addHairpinAccent</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa57b7f24a39bea75e46967d616a4b32a" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addHangingTieToNextItem</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a8258a8fa6d3bf4ca3b6f98877e0ffd0c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addHarmFloatsForMeasure</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1e14b7af054912c41d97830f0ad66aa0" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addInstrumentDefinition</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac41a77f02a8205786b26938724d176cc" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addMensuralQuality</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a060c49ff5d8f57b1abd9841dcf754ec6" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addMidiTempo</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af3ffc9b61f1ccb172b48cbc30d435e0e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addMordent</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5b5795f5d08ead5b6d1dc6db7816b990" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addOrnamentMarkers</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ab2685cc18128a8b24c4deb49844cfe8b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addOrnaments</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac1006f37a5ab101e04ba55573b2be580" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addPerson</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a93325959ee6955ab00d15a0897bb2a97" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addPlicaDown</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aaad545361a47f271d3d8cdc7efc1c001" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addPlicaUp</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0ce1ab7229e992d0f064fcf95209958b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addSlur</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac5b95c19bc34842417f164989df9a20e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addSlurLineStyle</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a74728e3c767603cdb637cd8da88bbc59" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addSpace</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a762a62853506ed4922d7ce0cf2627504" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addStringNumbersForMeasure</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5811f018d555151696c48ea9c16d10c7" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addSystemKeyTimeChange</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa8170eaba6e5f223a2e3ed230f20b803" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addTempoDirection</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a44aea3f1cfebb48e3fe3c37406014c4c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addTextElement</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a753a2c3f3171d62739375714b3fd6da8" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addTieLineStyle</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a34378463697a34909000f152e9727423" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addTrill</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad58bf273d8c2dfcb5676c060b1c7fe73" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addTurn</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5de615265bd93fec305ecb68d3647668" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>addVerovioTextElement</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9bac84194fc403281490d3f3f3c956b5" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>adjustChordNoteDuration</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae387b5e7041a66bcdcaf2418c4c237c8" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>adjustChordNoteDurations</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af5b81dac8504d4130e6dc92c6adbbead" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>adjustMeasureTimings</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1c4d6944725ca8c1f5b8bb6428eb84dc" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>analyzeBreaks</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa2da94e19c92a9082295eb6681081124" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>analyzeClefNulls</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a117d7bab1ef8067ae63d839a47b5dde0" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>analyzeLayerBeams</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a74672d2abfc5eeb6ed1d3ce5d9ac8280" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>analyzeMultiRest</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aebdd0f0aabbcd60b1676a90f718490cd" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>appendElement</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa27ffa3996528c4c0c7371a0eedd9090" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>appendElement</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9e98bba026711cad2c7ded378bf91fe1" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>appendTypeTag</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0ee49a05b9a33f67365f49707f6c32e8" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>assignAutomaticStem</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a6cb77e7b26f83492c0557ec3466f35bf" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>assignScalingToTupletGroup</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3184c94f4c70315952822ae5b5431ff5" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>assignTupletScalings</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aafc3ea84bf453d5d7b17a8cb91cf51a4" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>assignVerticalGroup</name></member>
      <member refid="classvrv_1_1_humdrum_input_1adb2681b8ce0cbeede32190b8dd81cc7a" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>atEndingBoundaryEnd</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa868b102aed06ba36286e321e5e289d9" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>atEndingBoundaryStart</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a70261418efb68fd075809d287d9907c9" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>automaticHeaderCenter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a028d4a91071acd3e03aa430651d7034f" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>automaticHeaderLeft</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af891a2aadfb74864a9e7267bbe546551" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>automaticHeaderRight</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af4eab729123dcbd0bd431991740544fc" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>calculateLayout</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a11ad26c806fab7373d2a01a92705cc05" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>calculateNoteIdForSlur</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9fcbbaa5c0f11d22db481c03854ad737" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>calculateReverseKernIndex</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a598ffc723e10011ced0436156997e405" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>characterCount</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a888b722b002d92208da8bda8729eca90" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>characterCount</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a879f51397d98a38169b45707da3ca410" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>characterCountInSubtoken</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2eb4ccdf0e0b7b40195398436aa19fdf" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>characterCountInSubtoken</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a08d6676c654d7680c698d93760171574" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkBeamWith</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a258af3da27f4e3e8531d3837422ee1ff" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkClefBufferForSameAs</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ab4087fab9d159e649c26572c1cf0a43c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForAutoStem</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a808bbc6c0962f30e1694f13b4cf33389" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForBreak</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a95b28af4ba3252b2d00c1d36ec6e56ff" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForColorSpine</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af1516de8f7ed55d226d3e54da88c55f3" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForLayoutBreak</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a4e18d3c9d896b773a5a2c154d0f5c693" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForLineContinuations</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af87343e7d813f4aa449a1b2fdfb97fb5" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForMens</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0c09cfad5c79b97e9dd3301e4c9925d6" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForOmd</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a48e7adb75ab656bfd3c0555c1f327bfd" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForRehearsal</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa5e63765c6f56cf0bbc7827da901c108" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForScordatura</name></member>
      <member refid="classvrv_1_1_humdrum_input_1afb11057b74e2ad9d3e32c9838d8a7fe2" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForTremolo</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a4bb74206f9f4fcd9cb77cba2ade3279e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForTupletForcedBreak</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aca26cf3e46d532b0368a991174d65810" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForTupletMergesAndSplits</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a465ca88419849f859389d9e91d08c881" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkForVerseLabels</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a613cf467a8f8a1b085d98d7104c141f1" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkIfSlurIsInvisible</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a961b292611dd684729776880ea4cf758" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>checkNoteForScordatura</name></member>
      <member refid="classvrv_1_1_humdrum_input_1add117a81b6075c4c00cb0109abf622e3" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>cleanFBString</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae531b65c9e822243c7bb9236c3a10abc" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>cleanFBString2</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af21104975f26cfd02cae3b2cc6bd2a7c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>cleanHarmString</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5fd3b6a1b3f5710ed8124936031c6ecc" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>cleanHarmString2</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac09593969ca6336677a47f6ba599ca3c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>cleanHarmString3</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9e68d5c9cb23a9e2e7bd5e8366212ae7" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>cleanStringString</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aef228f82853ed6c8bee24974609bdcef" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>clear</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af546f1d9854cec28e0ff0ba7a24b6d85" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>colorNote</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae41ca44a45f7ffaa2ef007d8e312c550" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>colorRest</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a94dbedcd147aed5a6c581c326acaff2f" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>colorVerse</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae1f11978f7e0ff4c392001c5c5e349d5" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertChord</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a135b2d1a7a947dbaa2c7f764f8193b3f" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertFBNumber</name></member>
      <member refid="classvrv_1_1_humdrum_input_1adac7f4973c52b08488b1d838f001095b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertHumdrum</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a60a4b41fc01ceccbc1940df3932dee69" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertMeasureStaff</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a47bc7378a18b649503600b7338ec78b4" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertMeasureStaves</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a496a3d29ed1a5a8dac5fa6ae301d118b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertMensuralRhythm</name></member>
      <member refid="classvrv_1_1_humdrum_input_1abe5d63a645ca8dffbede62d5a5d99d21" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertMensuralToken</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af4296b38f514bb12cc742303ea50cb35" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertMRest</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a59cb5cc3585d97b3abb6fdf1b4f7866e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertMusicSymbolNameToSmuflEntity</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ace24bcfac2a06bbdcee4564738062f5f" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertNote</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af27eb6d815f4010e5c536a4f804c9a7b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertNumberToWstring</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae2a0c0e934d6ad589717da2236bcde38" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertRest</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aff101726f730123e7e95db600991229b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertRhythm</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5df04820b6d0372e44e1597dc7187945" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertStaffLayer</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a8364bd9c4995fe72e0ace785904d6578" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertSystemMeasure</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a87f162e23c9c4d279dce0933f3034c37" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>convertVerses</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a966c63e8921aded6ad9d48f54e9a583d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>createHeader</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2916e8320b39ad7331344e8c80b9cddc" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>embedPitchInformationInClass</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2200ee6ba7bda693f858748dafde3366" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>embedQstampInClass</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a636c05f7b7fd78750f91752866532d51" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>embedQstampInClass</name></member>
      <member refid="classvrv_1_1_humdrum_input_1adbc9efe78f23baf295abb8b068541a58" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>embedQstampInClass</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2d6297209d594518d6a6f2a9353aa11a" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>embedQstampInClass</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae64d830e58b90a0355e389e70a432319" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>embedTieInformation</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2f3bc963c9e279b4db7139ad1582eee5" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>emptyMeasures</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a19061dc00d4c37a4bf7fd7822db90c1d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>escapeFreeAmpersand</name></member>
      <member refid="classvrv_1_1_humdrum_input_1afcb1f93c2f110fa691d1a4b8beaf6468" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>extractNullInformation</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac3e97d30d02a65cb490a127b09be29a7" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>extractPhraseNoteAttachmentInformation</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad74a32b9210d5310ff8eaeca89b25df4" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>extractSlurNoteAttachmentInformation</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a169ee617dfb662c29ea33c1eaec5bc64" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>fillContentsOfLayer</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a965806f6ede17912a99be7477d4aef60" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>fillEmptyLayer</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac24957f737680b8fa740b76a82ac2a2b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>fillStaffInfo</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac49505dccf4447323f739c2137ccf38a" prot="public" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>finalizeDocument</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3d716bd9917b5f2c13b855417df71a40" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>fixLargeTuplets</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a986168a5845605393506e0c05e41ddee" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>generateSlurId</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a22816d7105ead30d43e96ff0fcafb01e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getAssociatedDynamSpine</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2909d149f78d8a9c39992d5d0f51e7a3" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getAutoClef</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af9f6e32190d199a440f28c5194d95e56" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getBooleanParameter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a58cc0e8d37e95ee47ec150ecb99a5a51" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getChordNoteCount</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a8b3674236e3b4b21b7eda81021fc5858" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getClef</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af617aefdd4b245664b35f756c63a92b9" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getCrescendoEnd</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a44f85b078d7743236d3bf27c47d35032" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getCurrentLayerCount</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5c30b424256f9f9f5edb29b9bfd7dc71" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getDateString</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a73857f02db1e0196b45ea0245dab77ed" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getDecrescendoEnd</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a380264dd5b882135bd06802887ffa3f8" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getDirection</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0bdafd620dcd32342684c5f8d1cf8217" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getDotPowerOfTwo</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2a04cc7f697c6f886f455c621ce01b39" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getEndIdForOttava</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a225680295bd3c2bb2d191242be709028" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getGroupNumberLabel</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3fcddb3a72dcbecf1fef0750c30cef26" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getHairpinEnd</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac2dce5637ead52fda0bb4ee5097c7872" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getHighestDiatonicPitch</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a69f05769b8044d44049c86f44802453f" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getHighestSystemArpeggio</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af18f9af9ee2c087887a3d6b83c3d8b8c" prot="public" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>GetHumdrumString</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a04294141a16cc11a2a69257adc90f7d3" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getInstrumentAbbreviation</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ab3e51a018bee8b3e7dd8fcc5203afcfe" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getInstrumentClass</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a26c180680e267d85e84656ba69951912" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getInstrumentName</name></member>
      <member refid="classvrv_1_1_humdrum_input_1abf1a66b55b253bd54a2261984f4ea7a0" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getKeySig</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1bcffde69dbdd72dfce172df0c8a3dbb" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getLabelFromInstrumentCode</name></member>
      <member refid="classvrv_1_1_humdrum_input_1acf149d6a27456a78418c6d48370497b7" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getLayoutParameter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0e429834e3e3a921580a24407054cd38" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getLeftNoteDuration</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aad0fcbe0df288456278b9645d483cd61" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getLocationId</name></member>
      <member refid="classvrv_1_1_humdrum_input_1adfc44b14f4d8f7d90c85b1b6611c0431" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getLocationId</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a41aef1246f7a206093b1506a82688523" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getLocationId</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5e534faafe3757048ee8c95f7984cfb9" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getLocationId</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a410d1e287a0ab03001983be4588626ab" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getLowestDiatonicPitch</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a4768fe9f4c156aec1b00a968f7070b8e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMeasureDifference</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a32fbe2d4d96280c830d725d67b204abb" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMeasureEndLine</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a6a9c762f09ac3d9d7a8dd32d3af51a00" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMeasureEndTstamp</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3a459374bc6abf82df87b359c00782d4" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMeasureFactor</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a948ce102b004e614967ad72823d1b9c7" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMeasureNumber</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a4e8f8a268e564f0190e35d9b5a563fe6" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMeasureTstamp</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad7fd6cb1e3b707bbfa3b6063e2abf6d0" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMeasureTstamp</name></member>
      <member refid="classvrv_1_1_humdrum_input_1afd1702de2d37725bfdd5d6f3341a63c5" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMeasureTstampPlusDur</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aca3de63522d2e6064e256e5ae1cae4e7" prot="public" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>GetMeiString</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae268fc474e28081c9511f96dcfe245c2" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMensur</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a14e6715db660513918fb1796115b9569" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMeterSig</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3d6dc2f61ebc75912aaed676ed89b04b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMmTempo</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a64d54a54698186ec80ee8ed2bf2fb8c5" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMmTempoForward</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a91301574ae53080021b1f300d74a1151" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getMultiEndline</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac09b20d8362f4bdf1355b8fa274b1da8" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getNextBarlineIndex</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad9700208ae176666539de8a4a9bc71db" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getNoteStaff</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af6fe1ae042bbb81100133736d01e1652" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getNoteStatePhrase</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0cf663f2311623186a6941e85425d075" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getNoteStateSlur</name></member>
      <member refid="classvrv_1_1_input_1a1b05f76bf7cb69133dff8178b0b25b59" prot="public" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>GetOutputFormat</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac302a2361bfa6e01b24357ea163e0bf5" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getPartNumberLabel</name></member>
      <member refid="classvrv_1_1_humdrum_input_1acd040c1bcd707d3ff31cd58d6e377fd2" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getPreviousDataToken</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a220a6b620ac05f588be87e4c078391ff" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getPreviousStaffToken</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac2e8d0ae8efede8b33a7c60e271f5bf9" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getReferenceValue</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0469aeb1679738887693dcea293fa0cd" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getRespPeople</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0597ccec31a3951dae90319ec44ec4fb" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getRightmostStaffArpeggio</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aece690f097d952b70afdb7670d71b51d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getSlurEndNumber</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1c16e0f2ef9a18ccdfb8752d5c10e909" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getSpineColor</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa9e83ec27ff5fea9dcd154a43d69872b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getStaffAdjustment</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae1c5093008ccf4851084106ce8f53d2d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getStaffLayerCounts</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a473f0fc495c06c0650672b371ecc822f" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getStaffNumberLabel</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a79def1f5f3a8b3400cd70586995cd14a" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getStaffNumbers</name></member>
      <member refid="classvrv_1_1_humdrum_input_1afb18066b10a1e84c2f277c4d4b92a017" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getStringParameter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad40fa809ce661f1efc16340293215c72" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getSystemDecoration</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a8bbc41e9ec0df7c2767e5ca6e8005772" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getTimingInformation</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a8eb1d1d8d56c71c5d013c513fb610220" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getTrackText</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a7309e6fbd84cae4f76ddc420cbcdcbac" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getVerseLabels</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac1c149b18e2179b1bf9678174dbc5a68" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getVerseLabelText</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa14343e4e70cb0a0b35b78a08afba138" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>getVisualFBAccidental</name></member>
      <member refid="classvrv_1_1_humdrum_input_1afc541fd96b9b12c19b7b1b0c07e1c9cd" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>handleColoration</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a45b914178a46a5c7e865aef94d7e3c13" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>handleCustos</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa2b27773f2e690c75fb216f6f6622af4" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>handleGroupEnds</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a66474088f47270ea2b25814c1a00ac97" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>handleGroupStarts</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a49d0e60edc922bdb06b047572e11f32f" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>handleLigature</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3f729ad4e2d9029215830b6a18606145" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>handleOttavaMark</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac5bc1b4767f4c562e7011ad464acd7dc" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>handlePedalMark</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa3ff5bbf284e6e919da0fd1d3f736bde" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>handleStaffDynamStateVariables</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a77e9abee7e5765851e333acdea1f6e0c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>handleStaffStateVariables</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3414e9dabb210ad8bfa8cfcef4be8072" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>handleTempoChange</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a061f4a03a01b851a2b078495556ce987" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>hasAboveParameter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad78a759153f123dd71240b230aac26ef" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>hasAboveParameter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af8c52d388f83aaee983ba6fd6a1b44c5" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>hasBelowParameter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a25c9890e39cdecc9219faae7adfdc685" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>hasBelowParameter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae65da341b25262590cc5598ed4093f4a" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>hasCenterParameter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a83514e05e714e77817ac90f8856c89f3" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>hasFullMeasureRest</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9e7ed83460801c264643a78009ddfe12" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>hasIndent</name></member>
      <member refid="classvrv_1_1_input_1ab983f3a606f7a2675d4c002260439123" prot="public" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>HasLayoutInformation</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a874fc6baeceb3788419bc34643932510" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>hasLayoutParameter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1acc502298407632be9ce36e7a0a83ee43" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>hasMensuralStaff</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a18996f1ca21f49169d3bf01a9973b12b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>hasTempoTextAfter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a921901aaff7c054a7217b90a9a8205de" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>hideBarlinesInTiedGroup</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aee25692fbac4ef8c4dd21da81e815b98" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>hideTerminalBarlines</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2306faaf6a47b0b5dbb23beadf43df24" prot="public" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>HumdrumInput</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3a67f681e9a3f1da8e5ef0f8c02a9c7a" prot="public" virt="virtual"><scope>vrv::HumdrumInput</scope><name>Import</name></member>
      <member refid="classvrv_1_1_humdrum_input_1adfbe4c999074bcff08acc0fc7d180672" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>importVerovioOptions</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2994fa04a6a3dbdb6b21085f8bf54443" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>inDifferentEndings</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aafa817cf0f910dfc7e6e48b73c3b7f57" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>initializeIgnoreVector</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a69f54bc4a7b9dff130605e8761b8397d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>initializeSpineColor</name></member>
      <member refid="classvrv_1_1_input_1ae8b21e281d8a92b924c4276b2b89c8b1" prot="public" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>Input</name></member>
      <member refid="classvrv_1_1_humdrum_input_1adb097bfeb13b2640c986f8339efe69f7" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertBeam</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa3c0ca1300e64769ba2f6825f2a18574" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertClefElement</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5e7c38dab010fd569f7c7c0b7e778586" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertExtMeta</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae173e7ae61777407f1ca6114b60080ea" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertFingerNumberInMeasure</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0a4e01cd2789740bb289a6aec248e910" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertGBeam</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0ffefb70c22d45edc91311d40f6809e2" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertMeterSigElement</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a132f555dc6fa7b07e89bde81ab3e2fc7" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertPeople</name></member>
      <member refid="classvrv_1_1_humdrum_input_1abe3fb60c7c5f6bc4d1a6457834988682" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertPhrase</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0694f63edc91fc483c192f3e15069762" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertRepetitionElement</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3c01b8fbb773e6c875abd4ae8d2156f3" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertRespStmt</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a4c0eb71290772178868c723625dffb0d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertTitle</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2785a73ce76149a6a00b087a6b439303" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertTuplet</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a924273ffda75bc3ea30b17e1f9cdff94" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>insertTwoRhythmsAndTextBetween</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3553e5c19848fcc71df74142132e3ff7" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>isBlackNotation</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad214ab25fe733033ec281b1c4cdb7066" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>isFirstTokenOnStaff</name></member>
      <member refid="classvrv_1_1_humdrum_input_1accd079f6101b7df1fe5f05426f63da7a" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>isLastStaffTempo</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a69fe390fae84642c34a1039f2080d332" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>isLowestSystemArpeggio</name></member>
      <member refid="classvrv_1_1_humdrum_input_1acf39b1413a0f778a858f17a9c3a0e554" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>isNearOmd</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9b87c5a7740c91c1e743ce4a89b0e859" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>isNextBarIgnored</name></member>
      <member refid="classvrv_1_1_humdrum_input_1afa2a37fbcbc25b87250b0d797c7fe08e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>isTempoishText</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a8af863911c302961db286a67471d7829" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>layerOnlyContainsNullStuff</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ab2abf76863416114ff9d163527702dbe" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>leftmostStaffArpeggio</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad4316093d9cfdb8fac8129f53cce1c6d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>linkFingeringToNote</name></member>
      <member refid="classvrv_1_1_humdrum_input_1afec5bfbcad7b2a34f337be32fa1009d9" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_absolute</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a470ee06df7cfe179e67c5106b008d789" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_breaks</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af35dd76c8cbe2f7c9596b0aeb84199c2" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_clef_buffer</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad6549b015b840b7629579720509381bb" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_comment</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a64af2db39441c2121b3762838202a27c" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_currentending</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aec1492c53e324cb751d7757884f305c7" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_currentlayer</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac515f713730b24e64934a1e4f5667db0" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_currentsection</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a80560f3556f928a421c52f85bedf57bd" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_currentstaff</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a7fd28b216473ac0e1d153ad723942b6c" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_debug</name></member>
      <member refid="classvrv_1_1_input_1a19dccc7ba8689777b0f2558e8b839305" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_doc</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0762f7724aa7b963489ef2b0eeeff49e" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_duradj</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a717f17e74635ce932c33c1d2f0cc00e1" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_endingnum</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a6d61dfd5085bf419921f83d9f5739106" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_fb</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a61b075ee93003ab05f0d7f7de42d386a" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_fbstaff</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a4ae6f303023eda1ddac452b785ea0694" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_fbstates</name></member>
      <member refid="classvrv_1_1_humdrum_input_1add29b46c744beda8109f7baa5435fd72" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_filename</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa05270d0d717bbfe46c40d7ec8e63272" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_fing</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a7b0ba99ef79933677a5ba29171e36471" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_ftrem_slurs</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aac75af28ae9de181fc2bd44ac1e85a06" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_group_abbr</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1d9934ee4acbe3a0cd47b197f650164a" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_group_abbr_tok</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a078fd7aeeffdf75c77e71606a32b16f6" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_group_name</name></member>
      <member refid="classvrv_1_1_humdrum_input_1afbc5864b39c5efa4886472aa1e8eda32" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_group_name_tok</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a784058f890a31cd0170fb6b4ed185da8" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_harm</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa114f2926683a62fb88bf0aea9241e95" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_has_color_spine</name></member>
      <member refid="classvrv_1_1_input_1ae5b786823e4fef5ca80a48530513919c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_hasLayoutInformation</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5bd3d5e39dc9a78f552792af4b5b10bb" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_hasTremolo</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a61130cd2f355fa2bd44363afd3168a32" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_humtype</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac5c4be39d8d712b0b268fd37c246a261" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_ignore</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a192419f45990a367628e98ea1d1e770e" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_infiles</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a39e79449bf4882fae8b5c07259c15f75" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_lastsection</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a50b9e0452cc107227b6af3cab90f252c" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_layer</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa42f64725eca78e2a0230befdab73200" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_layertokens</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9e770435f3f18bc442a3593b25e46ecc" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_leftbarstyle</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae0b2241e7f21d2dccec7d923d1c43796" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_measure</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0bda86220cc0e8385e0120d415bdb746" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_measureIndex</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af9279e2aaa5b342293fce6fa590567c1" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_measures</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a8d1aae317b9ba3302d9feccb3e8af8d9" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_mens</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1bdd1a29c8b7ec669f86a9303b8d18fc" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_multirest</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a6dfa9a9aa895e3020e5ae5008ece2e81" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_nulls</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad9cf2e6573d6adb087ef792e76f998a7" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_numberlesslabels</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a56213ea199e6516c09eedafee643ffc1" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_oclef</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a71b4c6211e3795acefad6b218e40675e" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_okey</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad10b286d19119a05cc5a1b3bbae8c2a7" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_omd</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3d1cebef75021c6111d45d5146e19ceb" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_omet</name></member>
      <member refid="classvrv_1_1_input_1a12d911b9d747f92ef5b6e57253c06b3d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_outformat</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad8ced3487cded883a2058c10598a9885" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_placement</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a7e58c8e9d360d73166ffccc292b18fee" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_reverse</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a83579466cd48e47193f6c38a0feb1dc7" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_rkern</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ab3e13b06e39dfb56674d67c0ad636bff" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_scordatura_marker</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae90d90f9730e0ff814ae642184b385b1" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_scordatura_transposition</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5e0d3f570ecf75477e3907bbb3408f55" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_score</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac2326f6988b68f3cd1ad7a99038d421f" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_sectionlabels</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae0a3bed35ca97a15f9c610084ea42be1" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_sections</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ab4eb94de989f870eacb76495e0396969" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_setrightstem</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1c7a379ca3532bf3996195a3654861fb" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_show_cautionary_keysig</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0dbc5b50ade689e8d058bb16ead41110" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_signifiers</name></member>
      <member refid="classvrv_1_1_humdrum_input_1afeba4703d65525494b36feed97d66844" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_slash</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa2a00a80e32a14418230307f3da6b85f" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_spine_color</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ab15cd9c2be6568f82918b845c94db257" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_staff</name></member>
      <member refid="classvrv_1_1_humdrum_input_1acb5056622031900fc3a6accccfabf317" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_staffdef</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a411dfd66847c1b1461c0ab51be83ce78" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_staffstarts</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3fa6a763418b2941d221d5a3ec520678" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_staffstates</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0ffbba51a8b75167eaa74778bd664f84" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_string</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2ecaff0ad71725f5ec2b36f235a6c424" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_timesigdurs</name></member>
      <member refid="classvrv_1_1_humdrum_input_1adc0d45a88a91c2d00afd59e0cab5fd0d" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_transpose</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad56ba9f58ba25c9f92983e779ef994f3" prot="private" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>m_tupletscaling</name></member>
      <member refid="classvrv_1_1_humdrum_input_1abc9dcc29bc8d58457678ed8dcd45c918" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>markAdjacentNullsWithClef</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a41056e20176a384b5a9fe721bdbc3286" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>markOtherClefsAsChange</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae250e2921d9f4dfeecb3f8229f52f8cc" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>mergeTupletsCuttingBeam</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a31bc7d710255b76a4e48459b48cc65b8" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>nextHigherPowerOfTwo</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a8b3fd7dc7e249a8d699759f3c523a489" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>nextLowerPowerOfTwo</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a6c2c242677525679b19ba59522fc943b" prot="public" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>parseEmbeddedOptions</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a38db2a3fb63c3046a85fe2c9059dea1d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>parseSignifiers</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a05a9c35f504a9fa77a59d4e6557b81be" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>phraseIsInvisible</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3af204a38e86526f3cf0e8ea2a35cfbc" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>popElementStack</name></member>
      <member refid="classvrv_1_1_humdrum_input_1abe339c5ac5198ade96d78ffcbffdd002" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>prepareBeamAndTupletGroups</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a4f031eb7cea97a8139dbfa2cce315f82" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>prepareFooter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa7a85ce512aa6eda6f1644575ae778da" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>prepareHeader</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a890da6e8f4b3ea222efb391903715cf2" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>prepareHeaderFooter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a4fb93f7b884d61b464fdff021058d28a" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>prepareInitialOttavas</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa5101e7eb867e7907d3f8bf1d10a0688" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>prepareNonStandardKeySignature</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2761c5d66bc0a9678ef515593aef6c66" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>prepareSections</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af7e72dd25311f253c399d86f54d78663" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>prepareStaffGroups</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3510f6141b234310c267d638894a24bc" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>prepareTimeSigDur</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae567b3aeda313676a69030b38c269405" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>prepareVerses</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a12982a3dd3f8a9db302f0474a722523f" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>printGroupInfo</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa961d3fb71506f1a6b7224fd5e346d09" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>printMeasureTokens</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa632f7d58a59656a5e5562c8f88377c8" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processChordSignifiers</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9d6531b50012817b46d4800eb3a9d6f4" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processDirections</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a53f7aa1d049d3d0f91c2ec69525bd895" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processDynamics</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1c266bbf7f08e2148ff4e7a06a112c5c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processGlobalDirections</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a364324c21bdd6a7758e5ecbc8d31e440" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processHangingTieEnd</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa749fb3aeca421cd27010ef4c8ea6faf" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processHangingTieStart</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a6a97400ed4594b4008bf92e3d1907175" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processHangingTieStarts</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a105930b1df1629165ea655934d09682e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processLinkedDirection</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2fcb039a76cff438623906f6d98af304" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processOverfillingNotes</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a25dcd9e669eccb1894a8a1b1b1fea766" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processPhrases</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a83edf342b36add0dde92684588d032d1" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processReferenceTemplate</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae1eaaa65c79ab0b2d01856d4cd55150c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processSlurs</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9f5f920b6bd75ad87e1af73ef5036173" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processStaffDecoration</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae0f274bfab060bdce0aaa80129b71bbc" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processTemplateOperator</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a7332593c7955c707aad04da2bb708d03" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processTerminalLong</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a148d9a3f20540e1aa649ce7b33051e7c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processTieEnd</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa8a37ba94c89552f82f6258928df00c9" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>processTieStart</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a431630b2f62593b725127c70018e540e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>promoteInstrumentAbbreviationsForStaffGroup</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa19018afb022addded227c794771cfe9" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>promoteInstrumentAbbreviationsToGroup</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a6b8b68248a413079bb91b59099cfaecc" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>promoteInstrumentNamesToGroup</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ab02a8968e370d126aaa9a05890ff51ca" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>promoteInstrumentsForStaffGroup</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad9f090b89b3bcb3b3a2539ed1536c113" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>removeBeam</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae4d4abe1edab9b900aad41f8df0b3dd7" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>removeCharacter</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a22a730145c26231378865360a4700c19" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>removeCommas</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a58a2e0f0ef741da2c470e4f55e2531cb" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>removeFactorsOfTwo</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9d1f2c358029b65920e58d0eb4a9a876" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>removeGBeam</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1373953a4d6a34f778b56af08147c3eb" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>removeInstrumentAbbreviation</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a479fcd69b52de424f4cf126820e24310" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>removeInstrumentName</name></member>
      <member refid="classvrv_1_1_humdrum_input_1adc84201cd0c8631ec81402673f2521eb" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>removeTuplet</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa14fa57db0157b159737661fbeee023f" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>replace</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5ecc3f0a44d416dc9f6224ca62061a9e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>replace</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a452268629f0f1fafb2998ff089e93d21" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>resolveTupletBeamEndTie</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a789990da73831fe3fa775dc306a994b8" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>resolveTupletBeamStartTie</name></member>
      <member refid="classvrv_1_1_humdrum_input_1acb0b63c26d6546e970bfdd82a5ca4291" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>resolveTupletBeamTie</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1b1d650b52250ca97737d0b53924dcba" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setAccid</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aabd0e2e9f215b6833dfb395f74a17d68" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setBeamDirection</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a77e38a7839c1b60f0412309c8a68f64a" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setBeamLocationId</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9a2895bc66273740cb329fd5fd5eb16a" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setClef</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0eb57b441ce2c1dcf3b8346a3e8f0ff1" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setDuration</name></member>
      <member refid="classvrv_1_1_humdrum_input_1abb813602a2862c8597a9ca3fa1cc7122" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setDynamicTransposition</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a30d6249737f9d45c26286da7889d3225" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setFontStyle</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a11510d4333dcbc12b19fc95ddff514b4" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setGroupSymbol</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2f80ba6d36a41c0e957fd3c1df72c90e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setInstrumentAbbreviation</name></member>
      <member refid="classvrv_1_1_humdrum_input_1acc051a116e1dfd5df9ced05add47c84d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setInstrumentName</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ac98af05229a51a05b1cfc6b6d0842ce5" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setKeySig</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae25fa1e1ea4a2388e40a6b5739cef105" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setKeySig</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3456451e64157ab6c9c7cffa8113d09e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setLabelContent</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aaf2795dec3838fde0de609c32a2a427c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setLayoutSlurDirection</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a8a7dbfa6242ac066e0a68650d43f9a89" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setLocationId</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af3a2ee972a66d995a826b5e35e4bcf7d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setLocationId</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5b8df408d5856745cec7044903801288" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setLocationIdNSuffix</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ab55d581149964bdf4f2b6655f0860b51" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setMensurationSymbol</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a8b76336b2e864bc1aacd404b19f0c7b8" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setMeterSymbol</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a626bb4c3daf7cb457a105c4a0692484f" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setN</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5307b5fd15726f2e133285c225585e43" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setNextLeftBarStyle</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2e95d79107f44b7e25def17e1ab15ea8" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setNoteMeiDur</name></member>
      <member refid="classvrv_1_1_input_1ad6290a083918bae0c62dac7795a9771d" prot="public" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>SetOutputFormat</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a8191d8cab90dc91e98bde2c09fd2e97b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setPlaceRelEvent</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a2377fb20ca202b06f776bf7552cb3eef" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setPlaceRelStaff</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a6d7851d8e16b75df04ccc1938eefb41e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setRepeatSlashes</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a26faaef006b12999313d8aacc4fcfb15" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setRhythmFromDuration</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5f476df2a2d1017848c26c09fa2866bd" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setSlurLocationId</name></member>
      <member refid="classvrv_1_1_humdrum_input_1af6f30cc5fc0a573613902fc396686ad7" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setStaff</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a6e7147c80a9147012d4e736dc175ac4d" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setStaffBetween</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a348944b15737ee69c9bba2b11130b978" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setStemLength</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a4abbd6877729c525f67dfd1d66a92bce" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setSystemMeasureStyle</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ae4788bbfcd592ed7c2f7993387affbc6" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setTempoContent</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a53566dcae3d9d30c762779928d370b8c" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setTieLocationId</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1add7b7aa7923a1162b6a875944aa6b2" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setTimeSig</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a93ea91d98108b32da99fab8dc2ec0308" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setTimeSig</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad4b096b7462fd6ea8dfb79f2d4c67985" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setTransposition</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a6488501e1551afc9e53f8ee5bf43ac72" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setTupletLocationId</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a823c8ec47d1b6f588865efbe992e07be" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setupMeiDocument</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a26fc26d482501e693704a95aa6970002" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setupSystemMeasure</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a9595081c91cf81606c160a4b61e18387" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setWrittenAccidentalLower</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad043ee87f582dd0e54c87716b666889e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>setWrittenAccidentalUpper</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aa151cc6b490760563b9f52d6fde90cd1" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>shouldHideBeamBracket</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a5571cebc9e1719cf676693af9082833b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>splitFBString</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a102ad00b1c492dbd803a4fdb6252f9ed" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>splitSyllableBySpaces</name></member>
      <member refid="classvrv_1_1_humdrum_input_1adf61c0c8d84ae50ff1b9733bcea58e7a" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>storeAcclev</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3d22d447b8ad02aa627ea75c967f75ca" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>storeBreaksec</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a4ea33f415c99334941e4266cfbc97886" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>storeExpansionList</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a1bc0c7362098eb82371d2f9eb03df1c0" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>storeExpansionLists</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3483c4e316bd887e7d02b74424bc2a6a" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>storeExpansionListsInChoice</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3a2f593b7c5dbcd844d3303810704d51" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>storeOriginalClefMensurationKeyApp</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ab866f5aef31aa38ff1a58f9401711d9b" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>storeStaffLayerTokensForMeasure</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ad7e7eb39a72259398e563d5c3c3f7e3e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>storeStemInterpretation</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a7aab99b94990c6919aa36afd71897ad5" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>suppressBufferedClef</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a6970b07153237547476344819568b93e" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>tieToPreviousItem</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a3a9cb0e5cf601ccbe32c261cd96b5ab0" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>unescapeHtmlEntities</name></member>
      <member refid="classvrv_1_1_humdrum_input_1ab63ec2b131f47b4ee96394932eeb25d6" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>UnquoteHTML</name></member>
      <member refid="classvrv_1_1_humdrum_input_1aeab1fa55b027b749bece352ef47b8ed3" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>verticalRest</name></member>
      <member refid="classvrv_1_1_humdrum_input_1a0acf7e7510ec5e0d78373afa0854aa59" prot="protected" virt="non-virtual"><scope>vrv::HumdrumInput</scope><name>WriteUTF8</name></member>
      <member refid="classvrv_1_1_humdrum_input_1abb67aed16d8d1fe9ba31d0d1987bacf5" prot="public" virt="virtual"><scope>vrv::HumdrumInput</scope><name>~HumdrumInput</name></member>
      <member refid="classvrv_1_1_input_1ad97e045cb680e5d79ffb593da1def219" prot="public" virt="virtual"><scope>vrv::HumdrumInput</scope><name>~Input</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
