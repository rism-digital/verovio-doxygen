<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="slur_8h" kind="file" language="C++">
    <compoundname>slur.h</compoundname>
    <includes refid="controlelement_8h" local="yes">controlelement.h</includes>
    <includes refid="timeinterface_8h" local="yes">timeinterface.h</includes>
    <includedby refid="iohumdrum_8h" local="yes">iohumdrum.h</includedby>
    <includedby refid="phrase_8h" local="yes">phrase.h</includedby>
    <incdepgraph>
      <node id="27">
        <label>list</label>
      </node>
      <node id="24">
        <label>boundingbox.h</label>
        <link refid="boundingbox_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdarg.h</label>
      </node>
      <node id="21">
        <label>functional</label>
      </node>
      <node id="32">
        <label>timeinterface.h</label>
        <link refid="timeinterface_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>iterator</label>
      </node>
      <node id="10">
        <label>atttypes.h</label>
      </node>
      <node id="18">
        <label>floatingobject.h</label>
        <link refid="floatingobject_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="4">
        <label>devicecontextbase.h</label>
        <link refid="devicecontextbase_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>attdef.h</label>
        <link refid="attdef_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>atts_shared.h</label>
      </node>
      <node id="23">
        <label>random</label>
      </node>
      <node id="31">
        <label>linkinginterface.h</label>
        <link refid="linkinginterface_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>tuple</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="7">
        <label>utility</label>
      </node>
      <node id="2">
        <label>controlelement.h</label>
        <link refid="controlelement_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>object.h</label>
        <link refid="object_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>math.h</label>
      </node>
      <node id="20">
        <label>cstdlib</label>
      </node>
      <node id="1">
        <label>slur.h</label>
        <link refid="slur_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>sys/time.h</label>
      </node>
      <node id="16">
        <label>unordered_map</label>
      </node>
      <node id="9">
        <label>attclasses.h</label>
      </node>
      <node id="11">
        <label>vrv.h</label>
        <link refid="vrv_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>set</label>
      </node>
      <node id="26">
        <label>algorithm</label>
      </node>
      <node id="15">
        <label>stdio.h</label>
      </node>
      <node id="12">
        <label>cstring</label>
      </node>
      <node id="25">
        <label>vrvdef.h</label>
        <link refid="vrvdef_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>iohumdrum.h</label>
        <link refid="iohumdrum_8h_source"/>
      </node>
      <node id="1">
        <label>slur.h</label>
        <link refid="slur_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>phrase.h</label>
        <link refid="phrase_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structvrv_1_1_spanned_elements" prot="public">vrv::SpannedElements</innerclass>
    <innerclass refid="structvrv_1_1_near_end_collision" prot="public">vrv::NearEndCollision</innerclass>
    <innerclass refid="structvrv_1_1_control_point_constraint" prot="public">vrv::ControlPointConstraint</innerclass>
    <innerclass refid="structvrv_1_1_control_point_adjustment" prot="public">vrv::ControlPointAdjustment</innerclass>
    <innerclass refid="classvrv_1_1_slur" prot="public">vrv::Slur</innerclass>
    <innernamespace refid="namespacevrv">vrv</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Name:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slur.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Rodolfo<sp/>Zitellini</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>26/06/2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Authors<sp/>and<sp/>others.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__VRV_SLUR_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__VRV_SLUR_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;controlelement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;timeinterface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vrv<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Chord;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Doc;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Layer;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Note;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Staff;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SpannedElements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="28" refid="structvrv_1_1_spanned_elements" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrv_1_1_spanned_elements" kindref="compound">SpannedElements</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>LayerElement<sp/>*&gt;<sp/>elements;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;int&gt;<sp/>layersN;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NearEndCollision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="39" refid="structvrv_1_1_near_end_collision" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrv_1_1_near_end_collision" kindref="compound">NearEndCollision</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>metricAtStart;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>metricAtEnd;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>endPointsAdjusted;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ControlPointConstraint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="52" refid="structvrv_1_1_control_point_constraint" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrv_1_1_control_point_constraint" kindref="compound">ControlPointConstraint</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ControlPointAdjustment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="64" refid="structvrv_1_1_control_point_adjustment" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrv_1_1_control_point_adjustment" kindref="compound">ControlPointAdjustment</ref><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftShift;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rightShift;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>moveUpwards;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>requestedStaffSpace;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>enum<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>SlurCurveDirection<sp/>{<sp/>None,<sp/>Above,<sp/>Below,<sp/>AboveBelow,<sp/>BelowAbove<sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>PortatoSlurType<sp/>{<sp/>None,<sp/>StemSide,<sp/>Centered<sp/>};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Slur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classvrv_1_1_slur" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_control_element" kindref="compound">ControlElement</ref>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_time_spanning_interface" kindref="compound">TimeSpanningInterface</ref>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttColor,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttCurvature,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttCurveRend,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttLayerIdent<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref>(ClassId<sp/>classId);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref>(ClassId<sp/>classId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;classIdStr);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref>();</highlight></codeline>
<codeline lineno="95" refid="classvrv_1_1_slur_1a9e7812ed9bc701150792295d4e277802" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*<ref refid="classvrv_1_1_slur_1a9e7812ed9bc701150792295d4e277802" kindref="member">Clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_slur" kindref="compound">Slur</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_slur_1a44edee9624d0cf10b0e35bd772aca3a5" kindref="member">Reset</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>GetClassName()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Slur&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="99"></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>TimePointInterface<sp/>*GetTimePointInterface()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vrv_cast&lt;TimePointInterface<sp/>*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimePointInterface<sp/>*GetTimePointInterface()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="106"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vrv_cast&lt;const<sp/>TimePointInterface<sp/>*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>TimeSpanningInterface<sp/>*GetTimeSpanningInterface()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vrv_cast&lt;TimeSpanningInterface<sp/>*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimeSpanningInterface<sp/>*GetTimeSpanningInterface()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="111"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vrv_cast&lt;const<sp/>TimeSpanningInterface<sp/>*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>SlurCurveDirection<sp/>GetDrawingCurveDir()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_drawingCurveDir;<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDrawingCurveDir(SlurCurveDirection<sp/>curveDir)<sp/>{<sp/>m_drawingCurveDir<sp/>=<sp/>curveDir;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasDrawingCurveDir()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_drawingCurveDir<sp/>!=<sp/>SlurCurveDirection::None);<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>curvature_CURVEDIR<sp/>CalcDrawingCurveDir(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>spanningType)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasMixedCurveDir()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="131"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_drawingCurveDir<sp/>==<sp/>SlurCurveDirection::AboveBelow)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(m_drawingCurveDir<sp/>==<sp/>SlurCurveDirection::BelowAbove);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasEndpointAboveStart()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="136"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_drawingCurveDir<sp/>==<sp/>SlurCurveDirection::Above)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(m_drawingCurveDir<sp/>==<sp/>SlurCurveDirection::AboveBelow);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasEndpointBelowStart()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="141"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_drawingCurveDir<sp/>==<sp/>SlurCurveDirection::Below)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(m_drawingCurveDir<sp/>==<sp/>SlurCurveDirection::BelowAbove);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasEndpointAboveEnd()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="146"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_drawingCurveDir<sp/>==<sp/>SlurCurveDirection::Above)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(m_drawingCurveDir<sp/>==<sp/>SlurCurveDirection::BelowAbove);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasEndpointBelowEnd()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="151"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_drawingCurveDir<sp/>==<sp/>SlurCurveDirection::Below)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(m_drawingCurveDir<sp/>==<sp/>SlurCurveDirection::AboveBelow);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasInnerSlur(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slur<sp/>*innerSlur)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_slur_1a8e4388d4a78c7ca42d4b0a97dc33c755" kindref="member">CalcInitialCurve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc,<sp/>FloatingCurvePositioner<sp/>*curve,<sp/>NearEndCollision<sp/>*nearEndCollision<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_slur_1ac1b0ad6940cdd79b1d418080cdabaa5f" kindref="member">CalcSpannedElements</ref>(FloatingCurvePositioner<sp/>*curve);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_slur_1a479f96c0f063d497932d474bcd693871" kindref="member">AddPositionerToArticulations</ref>(FloatingCurvePositioner<sp/>*curve);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>Staff<sp/>*<ref refid="classvrv_1_1_slur_1a0b6a473f6cbea7cf14ef2ae593fdadbb" kindref="member">CalculateExtremalStaff</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*staff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMax);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*<ref refid="classvrv_1_1_slur_1a0b6a473f6cbea7cf14ef2ae593fdadbb" kindref="member">CalculateExtremalStaff</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*staff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMax)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_slur_1a48b731aec93e5ea7ba9513fcdcc0f60e" kindref="member">InitBezierControlSides</ref>(BezierCurve<sp/>&amp;bezier,<sp/>curvature_CURVEDIR<sp/>curveDir)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_slur_1a435e30e4f2700e05bf8100ce95451c86" kindref="member">AdjustSlur</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc,<sp/>FloatingCurvePositioner<sp/>*curve,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AdjustOuterSlur(</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc,<sp/>FloatingCurvePositioner<sp/>*curve,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayOfFloatingCurvePositioners<sp/>&amp;innerCurves,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetAdjustedSlurAngle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc,<sp/>Point<sp/>&amp;p1,<sp/>Point<sp/>&amp;p2,<sp/>curvature_CURVEDIR<sp/>curveDir)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functors<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_slur_1ae0ece8ff52f33bb4ab86ce72e05807e4" kindref="member">ResetData</ref>(FunctorParams<sp/>*functorParams)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_slur_1a5bb775a96504e61b844efccbccd8ae78" kindref="member">CalcSlurDirection</ref>(FunctorParams<sp/>*functorParams)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>layer<sp/>by<sp/>only<sp/>considering<sp/>the<sp/>slur<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;const<sp/>Layer<sp/>*,<sp/>const<sp/>LayerElement<sp/>*&gt;<sp/>GetBoundaryLayer()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>cross<sp/>staff<sp/>by<sp/>only<sp/>considering<sp/>the<sp/>slur<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*GetBoundaryCrossStaff()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>curve<sp/>direction<sp/>for<sp/>the<sp/>slurs<sp/>that<sp/>start<sp/>at<sp/>grace<sp/>note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>curvature_CURVEDIR<sp/>GetGraceCurveDirection()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>preferred<sp/>curve<sp/>direction<sp/>based<sp/>on<sp/>various<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>curvature_CURVEDIR<sp/>GetPreferredCurveDirection(</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_STEMDIRECTION<sp/>noteStemDir,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isAboveStaffCenter,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGraceToNoteSlur)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>layer<sp/>elements<sp/>spanned<sp/>by<sp/>the<sp/>slur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>SpannedElements<sp/>CollectSpannedElements(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*staff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMax)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filter<sp/>and<sp/>add<sp/>layer<sp/>elements<sp/>spanned<sp/>by<sp/>the<sp/>slur<sp/>to<sp/>the<sp/>positioner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddSpannedElements(</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingCurvePositioner<sp/>*curve,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpannedElements<sp/>&amp;elements,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*staff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMax);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>whether<sp/>a<sp/>layer<sp/>element<sp/>should<sp/>lie<sp/>above<sp/>or<sp/>below<sp/>the<sp/>slur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsElementBelow(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LayerElement<sp/>*element,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*startStaff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*endStaff)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsElementBelow(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FloatingPositioner<sp/>*positioner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*startStaff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*endStaff)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>endpoint<sp/>coordinates<sp/>depending<sp/>on<sp/>the<sp/>curve<sp/>direction<sp/>and<sp/>spanning<sp/>type<sp/>of<sp/>the<sp/>slur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;Point,<sp/>Point&gt;<sp/>CalcEndPoints(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*staff,<sp/>NearEndCollision<sp/>*nearEndCollision,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x2,<sp/>curvature_CURVEDIR<sp/>drawingCurveDir,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>spanningType)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>start<sp/>and<sp/>end<sp/>note<sp/>locations<sp/>of<sp/>the<sp/>slur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int,<sp/>int&gt;<sp/>GetStartEndLocs(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Note<sp/>*startNote,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Chord<sp/>*startChord,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Note<sp/>*endNote,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Chord<sp/>*endChord)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>break<sp/>location<sp/>at<sp/>system<sp/>start/end<sp/>and<sp/>the<sp/>pitch<sp/>difference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int,<sp/>int&gt;<sp/>CalcBrokenLoc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*staff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startLoc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endLoc)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>slur<sp/>resembles<sp/>portato</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>PortatoSlurType<sp/>IsPortatoSlur(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Note<sp/>*startNote,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Chord<sp/>*startChord)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Discard<sp/>certain<sp/>spanned<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FilterSpannedElements(FloatingCurvePositioner<sp/>*curve,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BezierCurve<sp/>&amp;bezierCurve,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detect<sp/>collisions<sp/>near<sp/>the<sp/>endpoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>NearEndCollision<sp/>DetectCollisionsNearEnd(</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingCurvePositioner<sp/>*curve,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BezierCurve<sp/>&amp;bezierCurve,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>vertical<sp/>shift<sp/>of<sp/>the<sp/>slur<sp/>end<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int,<sp/>int&gt;<sp/>CalcEndPointShift(</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingCurvePositioner<sp/>*curve,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BezierCurve<sp/>&amp;bezierCurve,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>flexibility,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>the<sp/>vertical<sp/>shift<sp/>of<sp/>the<sp/>slur<sp/>end<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyEndPointShift(</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingCurvePositioner<sp/>*curve,<sp/>BezierCurve<sp/>&amp;bezierCurve,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endPointShiftLeft,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endPointShiftRight);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>slur<sp/>from<sp/>bulge<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AdjustSlurFromBulge(FloatingCurvePositioner<sp/>*curve,<sp/>BezierCurve<sp/>&amp;bezierCurve,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>control<sp/>points<sp/>should<sp/>be<sp/>adjusted<sp/>horizontally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AllowControlOffsetAdjustment(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BezierCurve<sp/>&amp;bezierCurve,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>symmetry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>horizontal<sp/>control<sp/>point<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;bool,<sp/>int,<sp/>int&gt;<sp/>CalcControlPointOffset(</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingCurvePositioner<sp/>*curve,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BezierCurve<sp/>&amp;bezierCurve,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>vertical<sp/>control<sp/>point<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>ControlPointAdjustment<sp/>CalcControlPointVerticalShift(</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingCurvePositioner<sp/>*curve,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BezierCurve<sp/>&amp;bezierCurve,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>symmetry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Solve<sp/>the<sp/>constraints<sp/>for<sp/>vertical<sp/>control<sp/>point<sp/>adjustment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int,<sp/>int&gt;<sp/>SolveControlPointConstraints(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::list&lt;ControlPointConstraint&gt;<sp/>&amp;constraints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>symmetry<sp/>=<sp/>0.0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Improve<sp/>the<sp/>slur<sp/>shape<sp/>by<sp/>adjusting<sp/>the<sp/>control<sp/>point<sp/>heights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AdjustSlurShape(BezierCurve<sp/>&amp;bezierCurve,<sp/>curvature_CURVEDIR<sp/>dir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit);</highlight></codeline>
<codeline lineno="302"></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>vertical<sp/>control<sp/>point<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>ControlPointAdjustment<sp/>CalcControlPointShift(FloatingCurvePositioner<sp/>*curve,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BezierCurve<sp/>&amp;bezierCurve,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayOfFloatingCurvePositioners<sp/>&amp;innerCurves,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>symmetry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>vertical<sp/>shift<sp/>of<sp/>the<sp/>slur<sp/>end<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int,<sp/>int&gt;<sp/>CalcEndPointShift(FloatingCurvePositioner<sp/>*curve,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BezierCurve<sp/>&amp;bezierCurve,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayOfFloatingCurvePositioners<sp/>&amp;innerCurves,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>flexibility,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin);</highlight></codeline>
<codeline lineno="315"></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shift<sp/>end<sp/>points<sp/>for<sp/>collisions<sp/>nearby</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ShiftEndPoints(</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;shiftLeft,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;shiftRight,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intersection,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>flexibility,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isBelow)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>a<sp/>quadratic<sp/>interpolation<sp/>function<sp/>between<sp/>zero<sp/>and<sp/>one<sp/>and<sp/>evaluate<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CalcQuadraticInterpolation(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zeroAt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oneAt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arg)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>slope<sp/>by<sp/>a<sp/>given<sp/>number<sp/>of<sp/>degrees,<sp/>but<sp/>choose<sp/>smaller<sp/>angles<sp/>if<sp/>already<sp/>close<sp/>to<sp/>the<sp/>vertical<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>doublingBound<sp/>as<sp/>the<sp/>positive<sp/>slope<sp/>value<sp/>where<sp/>doubling<sp/>has<sp/>the<sp/>same<sp/>effect<sp/>as<sp/>rotating:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tan(atan(doublingBound)<sp/>+<sp/>degrees<sp/>*<sp/>PI<sp/>/<sp/>180.0)<sp/>≈<sp/>2.0<sp/>*<sp/>doublingBound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RotateSlope(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slope,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>degrees,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>doublingBound,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>upwards)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>minimal<sp/>angle<sp/>&lt;)C1P1P2<sp/>or<sp/>&lt;)P1P2C2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetMinControlPointAngle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BezierCurve<sp/>&amp;bezierCurve,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>SlurCurveDirection<sp/>m_drawingCurveDir;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">};</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vrv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/verovio/verovio/include/vrv/slur.h"/>
  </compounddef>
</doxygen>
