<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="measure_8h" kind="file" language="C++">
    <compoundname>measure.h</compoundname>
    <includes local="yes">atts_cmn.h</includes>
    <includes local="yes">atts_shared.h</includes>
    <includes refid="barline_8h" local="yes">barline.h</includes>
    <includes refid="facsimileinterface_8h" local="yes">facsimileinterface.h</includes>
    <includes refid="horizontalaligner_8h" local="yes">horizontalaligner.h</includes>
    <includes refid="object_8h" local="yes">object.h</includes>
    <includedby refid="comparison_8h" local="yes">comparison.h</includedby>
    <includedby refid="editortoolkit__neume_8h" local="yes">editortoolkit_neume.h</includedby>
    <includedby refid="iopae_8cpp" local="yes">iopae.cpp</includedby>
    <incdepgraph>
      <node id="15">
        <label>list</label>
      </node>
      <node id="36">
        <label>boundingbox.h</label>
        <link refid="boundingbox_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>functional</label>
      </node>
      <node id="33">
        <label>iterator</label>
      </node>
      <node id="28">
        <label>atttypes.h</label>
      </node>
      <node id="5">
        <label>atts_visual.h</label>
      </node>
      <node id="6">
        <label>layerelement.h</label>
        <link refid="layerelement_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>toolkitdef.h</label>
        <link refid="toolkitdef_8h_source"/>
      </node>
      <node id="23">
        <label>cstdarg</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="10">
        <label>interface.h</label>
        <link refid="interface_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="35">
        <label>attmodule.h</label>
      </node>
      <node id="2">
        <label>atts_cmn.h</label>
      </node>
      <node id="37">
        <label>horizontalaligner.h</label>
        <link refid="horizontalaligner_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>atts_shared.h</label>
      </node>
      <node id="30">
        <label>linkinginterface.h</label>
        <link refid="linkinginterface_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>cstdio</label>
      </node>
      <node id="4">
        <label>barline.h</label>
        <link refid="barline_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>tuple</label>
      </node>
      <node id="18">
        <label>vector</label>
      </node>
      <node id="19">
        <label>attdef.h</label>
      </node>
      <node id="9">
        <label>atts_facsimile.h</label>
      </node>
      <node id="8">
        <label>facsimileinterface.h</label>
        <link refid="facsimileinterface_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>object.h</label>
        <link refid="object_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>math.h</label>
      </node>
      <node id="32">
        <label>cstdlib</label>
      </node>
      <node id="27">
        <label>sys/time.h</label>
      </node>
      <node id="26">
        <label>unordered_map</label>
      </node>
      <node id="34">
        <label>attclasses.h</label>
      </node>
      <node id="22">
        <label>vrv.h</label>
        <link refid="vrv_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>set</label>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="25">
        <label>cstring</label>
      </node>
      <node id="12">
        <label>vrvdef.h</label>
        <link refid="vrvdef_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>fraction.h</label>
        <link refid="fraction_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="31">
        <label>calcalignmentxposfunctor.h</label>
        <link refid="calcalignmentxposfunctor_8h_source"/>
      </node>
      <node id="19">
        <label>adjusttupletsxfunctor.h</label>
        <link refid="adjusttupletsxfunctor_8h_source"/>
      </node>
      <node id="36">
        <label>calcledgerlinesfunctor.h</label>
        <link refid="calcledgerlinesfunctor_8h_source"/>
      </node>
      <node id="51">
        <label>transposefunctor.h</label>
        <link refid="transposefunctor_8h_source"/>
      </node>
      <node id="3">
        <label>functor.h</label>
        <link refid="functor_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>calcalignmentpitchposfunctor.h</label>
        <link refid="calcalignmentpitchposfunctor_8h_source"/>
      </node>
      <node id="4">
        <label>adjustaccidxfunctor.h</label>
        <link refid="adjustaccidxfunctor_8h_source"/>
      </node>
      <node id="35">
        <label>calcdotsfunctor.h</label>
        <link refid="calcdotsfunctor_8h_source"/>
      </node>
      <node id="9">
        <label>adjustdotsfunctor.h</label>
        <link refid="adjustdotsfunctor_8h_source"/>
      </node>
      <node id="37">
        <label>calcligatureorneumeposfunctor.h</label>
        <link refid="calcligatureorneumeposfunctor_8h_source"/>
      </node>
      <node id="15">
        <label>adjustslursfunctor.h</label>
        <link refid="adjustslursfunctor_8h_source"/>
      </node>
      <node id="32">
        <label>calcarticfunctor.h</label>
        <link refid="calcarticfunctor_8h_source"/>
      </node>
      <node id="2">
        <label>comparison.h</label>
        <link refid="comparison_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>editortoolkit_neume.h</label>
        <link refid="editortoolkit__neume_8h_source"/>
      </node>
      <node id="23">
        <label>adjustxrelfortranscriptionfunctor.h</label>
        <link refid="adjustxrelfortranscriptionfunctor_8h_source"/>
      </node>
      <node id="29">
        <label>cachehorizontallayoutfunctor.h</label>
        <link refid="cachehorizontallayoutfunctor_8h_source"/>
      </node>
      <node id="7">
        <label>adjustbeamsfunctor.h</label>
        <link refid="adjustbeamsfunctor_8h_source"/>
      </node>
      <node id="34">
        <label>calcchordnoteheadsfunctor.h</label>
        <link refid="calcchordnoteheadsfunctor_8h_source"/>
      </node>
      <node id="5">
        <label>adjustarpegfunctor.h</label>
        <link refid="adjustarpegfunctor_8h_source"/>
      </node>
      <node id="42">
        <label>convertfunctor.h</label>
        <link refid="convertfunctor_8h_source"/>
      </node>
      <node id="12">
        <label>adjustharmgrpsspacingfunctor.h</label>
        <link refid="adjustharmgrpsspacingfunctor_8h_source"/>
      </node>
      <node id="10">
        <label>adjustfloatingpositionerfunctor.h</label>
        <link refid="adjustfloatingpositionerfunctor_8h_source"/>
      </node>
      <node id="47">
        <label>preparedatafunctor.h</label>
        <link refid="preparedatafunctor_8h_source"/>
      </node>
      <node id="44">
        <label>findfunctor.h</label>
        <link refid="findfunctor_8h_source"/>
      </node>
      <node id="1">
        <label>measure.h</label>
        <link refid="measure_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>adjusttempofunctor.h</label>
        <link refid="adjusttempofunctor_8h_source"/>
      </node>
      <node id="14">
        <label>adjustneumexfunctor.h</label>
        <link refid="adjustneumexfunctor_8h_source"/>
      </node>
      <node id="17">
        <label>adjustsylspacingfunctor.h</label>
        <link refid="adjustsylspacingfunctor_8h_source"/>
      </node>
      <node id="27">
        <label>findlayerelementsfunctor.h</label>
        <link refid="findlayerelementsfunctor_8h_source"/>
      </node>
      <node id="13">
        <label>adjustlayersfunctor.h</label>
        <link refid="adjustlayersfunctor_8h_source"/>
      </node>
      <node id="40">
        <label>calcstemfunctor.h</label>
        <link refid="calcstemfunctor_8h_source"/>
      </node>
      <node id="8">
        <label>adjustclefchangesfunctor.h</label>
        <link refid="adjustclefchangesfunctor_8h_source"/>
      </node>
      <node id="41">
        <label>castofffunctor.h</label>
        <link refid="castofffunctor_8h_source"/>
      </node>
      <node id="33">
        <label>calcbboxoverflowsfunctor.h</label>
        <link refid="calcbboxoverflowsfunctor_8h_source"/>
      </node>
      <node id="24">
        <label>adjustyposfunctor.h</label>
        <link refid="adjustyposfunctor_8h_source"/>
      </node>
      <node id="48">
        <label>resetfunctor.h</label>
        <link refid="resetfunctor_8h_source"/>
      </node>
      <node id="16">
        <label>adjuststaffoverlapfunctor.h</label>
        <link refid="adjuststaffoverlapfunctor_8h_source"/>
      </node>
      <node id="38">
        <label>calcslurdirectionfunctor.h</label>
        <link refid="calcslurdirectionfunctor_8h_source"/>
      </node>
      <node id="6">
        <label>adjustarticfunctor.h</label>
        <link refid="adjustarticfunctor_8h_source"/>
      </node>
      <node id="43">
        <label>facsimilefunctor.h</label>
        <link refid="facsimilefunctor_8h_source"/>
      </node>
      <node id="26">
        <label>alignfunctor.h</label>
        <link refid="alignfunctor_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>miscfunctor.h</label>
        <link refid="miscfunctor_8h_source"/>
      </node>
      <node id="22">
        <label>adjustxposfunctor.h</label>
        <link refid="adjustxposfunctor_8h_source"/>
      </node>
      <node id="11">
        <label>adjustgracexposfunctor.h</label>
        <link refid="adjustgracexposfunctor_8h_source"/>
      </node>
      <node id="50">
        <label>setscoredeffunctor.h</label>
        <link refid="setscoredeffunctor_8h_source"/>
      </node>
      <node id="49">
        <label>savefunctor.h</label>
        <link refid="savefunctor_8h_source"/>
      </node>
      <node id="28">
        <label>midifunctor.h</label>
        <link refid="midifunctor_8h_source"/>
      </node>
      <node id="39">
        <label>calcspanningbeamspansfunctor.h</label>
        <link refid="calcspanningbeamspansfunctor_8h_source"/>
      </node>
      <node id="45">
        <label>justifyfunctor.h</label>
        <link refid="justifyfunctor_8h_source"/>
      </node>
      <node id="25">
        <label>adjustyrelfortranscriptionfunctor.h</label>
        <link refid="adjustyrelfortranscriptionfunctor_8h_source"/>
      </node>
      <node id="20">
        <label>adjusttupletsyfunctor.h</label>
        <link refid="adjusttupletsyfunctor_8h_source"/>
      </node>
      <node id="21">
        <label>adjustxoverflowfunctor.h</label>
        <link refid="adjustxoverflowfunctor_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classvrv_1_1_measure" prot="public">vrv::Measure</innerclass>
    <innernamespace refid="namespacevrv">vrv</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Name:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>measure.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Laurent<sp/>Pugin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Authors<sp/>and<sp/>others.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__VRV_MEASURE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__VRV_MEASURE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;atts_cmn.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;atts_shared.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;barline.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;facsimileinterface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;horizontalaligner.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vrv<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ControlElement;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Ending;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LayerElement;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ScoreDef;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">System;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TimestampAttr;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Measure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classvrv_1_1_measure" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_object" kindref="compound">Object</ref>,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_facsimile_interface" kindref="compound">FacsimileInterface</ref>,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttBarring,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttCoordX1,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttCoordX2,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttMeasureLog,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttMeterConformanceBar,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttNNumberLike,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttPointing,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AttTyped<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>BarlineRenditionPair<sp/>=<sp/>std::pair&lt;data_BARRENDITION,<sp/>data_BARRENDITION&gt;;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref>(MeasureType<sp/>measuredMusic<sp/>=<sp/>MEASURED,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>logMeasureNb<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref>();</highlight></codeline>
<codeline lineno="58" refid="classvrv_1_1_measure_1a3ded201d3376ae72e58f31caf84f878c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_object" kindref="compound">Object</ref><sp/>*<ref refid="classvrv_1_1_measure_1a3ded201d3376ae72e58f31caf84f878c" kindref="member">Clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1abea90dea35729eb5ce1fd1f1aad9dcda" kindref="member">Reset</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>GetClassName()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Measure&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="62"></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1ae9abced66c97f435851f893963cb5bcb" kindref="member">CloneReset</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>FacsimileInterface<sp/>*GetFacsimileInterface()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vrv_cast&lt;FacsimileInterface<sp/>*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FacsimileInterface<sp/>*GetFacsimileInterface()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vrv_cast&lt;const<sp/>FacsimileInterface<sp/>*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"></codeline>
<codeline lineno="82" refid="classvrv_1_1_measure_1a53fc4fd98146722a9cc4784f1b9a7498" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a53fc4fd98146722a9cc4784f1b9a7498" kindref="member">IsMeasuredMusic</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_measureType<sp/>==<sp/>MEASURED);<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classvrv_1_1_measure_1a6368df68944bc1713602ccba6c3e2341" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a6368df68944bc1713602ccba6c3e2341" kindref="member">IsNeumeLine</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_measureType<sp/>==<sp/>NEUMELINE);<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a3bf495c89cefc76c00bb002facefdf54" kindref="member">GetIndex</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_index;<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetIndex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{<sp/>m_index<sp/>=<sp/>index;<sp/>}</highlight></codeline>
<codeline lineno="96"></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a9757eaa14e314e66fc650836870a7fc3" kindref="member">IsSupportedChild</ref>(Object<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1afbaab874c0a2b37b3f2bbd175756f4aa" kindref="member">AddChildBack</ref>(Object<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classvrv_1_1_measure_1a5a45b03920fff1323cfca86c78f58db6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a5a45b03920fff1323cfca86c78f58db6" kindref="member">HasCachedHorizontalLayout</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_cachedWidth<sp/>!=<sp/>VRV_UNSET);<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a2d8b2d4baeea0f3c888a25804d8145ba" kindref="member">GetDrawingX</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1abb732e601d47f3dfe7f409d303e0bb8a" kindref="member">ResetCachedDrawingX</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetDrawingXRel()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a0f66f8a9a11ea45c967fbb796b21d91f" kindref="member">m_drawingXRel</ref>;<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDrawingXRel(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>drawingXRel);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CacheXRel(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>restore<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetCachedXRel()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a665f3d9783f81d741ffa3a140bd61485" kindref="member">m_cachedXRel</ref>;<sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResetCachedXRel()<sp/>{<sp/><ref refid="classvrv_1_1_measure_1a665f3d9783f81d741ffa3a140bd61485" kindref="member">m_cachedXRel</ref><sp/>=<sp/>VRV_UNSET;<sp/>}</highlight></codeline>
<codeline lineno="132"></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsFirstInSystem()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsLastInSystem()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"></codeline>
<codeline lineno="144" refid="classvrv_1_1_measure_1a576172291cab812579e24126e5151526" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a576172291cab812579e24126e5151526" kindref="member">GetMeasureIdx</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_object_1a2bfb8ee92dbd7e805de0aae51d07d534" kindref="member">Object::GetIdx</ref>();<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>data_BARRENDITION<sp/>GetDrawingLeftBarLine()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_leftBarLine.GetForm();<sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDrawingLeftBarLine(data_BARRENDITION<sp/>type)<sp/>{<sp/>m_leftBarLine.SetForm(type);<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>data_BARRENDITION<sp/>GetDrawingRightBarLine()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_rightBarLine.GetForm();<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDrawingRightBarLine(data_BARRENDITION<sp/>type)<sp/>{<sp/>m_rightBarLine.SetForm(type);<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>data_BARRENDITION<sp/>GetDrawingLeftBarLineByStaffN(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>staffN)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>data_BARRENDITION<sp/>GetDrawingRightBarLineByStaffN(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>staffN)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"></codeline>
<codeline lineno="167" refid="classvrv_1_1_measure_1ad58b70aabbd1ea6dcfa17e11c3b8ae13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1ad58b70aabbd1ea6dcfa17e11c3b8ae13" kindref="member">HasInvisibleStaffBarlines</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!m_invisibleStaffBarlines.empty();<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>BarlineRenditionPair<sp/><ref refid="classvrv_1_1_measure_1afa31de9cad0b7b2b382207d79e86162d" kindref="member">SelectDrawingBarLines</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref><sp/>*previous)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1aca48f477de36086120f4db67a428f1b2" kindref="member">SetDrawingBarLines</ref>(<ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref><sp/>*previous,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>barlineDrawingFlags);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a8bfef6d513052a832d80e15494f998f3" kindref="member">SetInvisibleStaffBarlines</ref>(</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref><sp/>*previous,<sp/>ListOfObjects<sp/>&amp;currentInvisible,<sp/>ListOfObjects<sp/>&amp;previousInvisible,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>barlineDrawingFlags);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_bar_line" kindref="compound">BarLine</ref><sp/>*GetLeftBarLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_leftBarLine;<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BarLine<sp/>*GetLeftBarLine()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_leftBarLine;<sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>BarLine<sp/>*GetRightBarLine()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_rightBarLine;<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BarLine<sp/>*GetRightBarLine()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_rightBarLine;<sp/>}</highlight></codeline>
<codeline lineno="200"></codeline>
<codeline lineno="204" refid="classvrv_1_1_measure_1a4f4172e322a4283c0357b60369469d2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a4f4172e322a4283c0357b60369469d2a" kindref="member">GetNonJustifiableLeftMargin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a39f4319275584a57b898dcbfcbed760e" kindref="member">m_measureAligner</ref>.GetNonJustifiableMargin();<sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLeftBarLineXRel()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLeftBarLineLeft()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLeftBarLineRight()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetRightBarLineXRel()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetRightBarLineLeft()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetRightBarLineRight()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a84bcb7a7885e9fb83e85498f43ee36c2" kindref="member">CalculateRightBarLineWidth</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref><sp/>*doc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>staffSize)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1aaea9b1238acf043b2ea503ce946080a3" kindref="member">GetWidth</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a5402e44aa3fde09beb9251c738a0ae8c" kindref="member">GetInnerWidth</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a0fefb48a87e3b9ccd5b5f2539cdebee1" kindref="member">GetInnerCenterX</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a4ed46e8d87d6dbfc43b7fdc6d933c80a" kindref="member">GetCachedWidth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedWidth;<sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetCachedOverflow()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedOverflow;<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResetCachedWidth()<sp/>{<sp/>m_cachedWidth<sp/>=<sp/>VRV_UNSET;<sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResetCachedOverflow()<sp/>{<sp/>m_cachedOverflow<sp/>=<sp/>VRV_UNSET;<sp/>}</highlight></codeline>
<codeline lineno="247"></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a97daa859320700155a05dc52c400e007" kindref="member">GetDrawingOverflow</ref>();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a48fc03935905d04e3280bf3bf9812dda" kindref="member">GetSectionRestartShift</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Doc<sp/>*doc)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>ScoreDef<sp/>*GetDrawingScoreDef()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_drawingScoreDef;<sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScoreDef<sp/>*GetDrawingScoreDef()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_drawingScoreDef;<sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDrawingScoreDef(ScoreDef<sp/>*drawingScoreDef);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResetDrawingScoreDef();</highlight></codeline>
<codeline lineno="268"></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>Ending<sp/>*GetDrawingEnding()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_drawingEnding;<sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ending<sp/>*GetDrawingEnding()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_drawingEnding;<sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDrawingEnding(Ending<sp/>*ending)<sp/>{<sp/>m_drawingEnding<sp/>=<sp/>ending;<sp/>}</highlight></codeline>
<codeline lineno="277"></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasAlignmentRefWithMultipleLayers()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_hasAlignmentRefWithMultipleLayers;<sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HasAlignmentRefWithMultipleLayers(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasRef)<sp/>{<sp/>m_hasAlignmentRefWithMultipleLayers<sp/>=<sp/>hasRef;<sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Return<sp/>the<sp/>first<sp/>staff<sp/>of<sp/>each<sp/>staffGrp<sp/>according<sp/>to<sp/>the<sp/>scoreDef</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Staff<sp/>*&gt;<sp/>GetFirstStaffGrpStaves(ScoreDef<sp/>*scoreDef);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>Staff<sp/>*<ref refid="classvrv_1_1_measure_1a763effb0962a66b89e7b083f1e2a10f2" kindref="member">GetTopVisibleStaff</ref>();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*<ref refid="classvrv_1_1_measure_1a763effb0962a66b89e7b083f1e2a10f2" kindref="member">GetTopVisibleStaff</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>Staff<sp/>*<ref refid="classvrv_1_1_measure_1aebb30d801973e472dade538e89a1ee93" kindref="member">GetBottomVisibleStaff</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Staff<sp/>*<ref refid="classvrv_1_1_measure_1aebb30d801973e472dade538e89a1ee93" kindref="member">GetBottomVisibleStaff</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a7fe08d9e1f4a7ee4f783b2b389553b83" kindref="member">EnclosesTime</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="classvrv_1_1_measure_1a1c70302412ed284b0e6ecc22798c5042" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_fraction" kindref="compound">Fraction</ref><sp/><ref refid="classvrv_1_1_measure_1a1c70302412ed284b0e6ecc22798c5042" kindref="member">GetLastTimeOffset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_scoreTimeOffset.back();<sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a9b90727de26e10838237f2a13ae3e018" kindref="member">GetLastRealTimeOffset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_realTimeOffsetMilliseconds.back();<sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetRealTimeOffsetMilliseconds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>repeat)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1afd716189fcf5661a30ee0db3513610b9" kindref="member">ClearScoreTimeOffset</ref>()<sp/>{<sp/>m_scoreTimeOffset.clear();<sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddScoreTimeOffset(Fraction<sp/>offset)<sp/>{<sp/>m_scoreTimeOffset.push_back(offset);<sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearRealTimeOffset()<sp/>{<sp/>m_realTimeOffsetMilliseconds.clear();<sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddRealTimeOffset(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>milliseconds)<sp/>{<sp/>m_realTimeOffsetMilliseconds.push_back(milliseconds);<sp/>}</highlight></codeline>
<codeline lineno="338"></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a4201006dc4785bd7b9219648737d9b3c" kindref="member">SetCurrentTempo</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tempo)<sp/>{<sp/>m_currentTempo<sp/>=<sp/>tempo;<sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetCurrentTempo()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_currentTempo;<sp/>}</highlight></codeline>
<codeline lineno="346"></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;LayerElement<sp/>*,<sp/>LayerElement<sp/>*&gt;&gt;<sp/><ref refid="classvrv_1_1_measure_1a21e59c0fc21d2b1500d84fa527b7d0d1" kindref="member">GetInternalTieEndpoints</ref>();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functors<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctorCode<sp/><ref refid="classvrv_1_1_measure_1af0fba6d5327bf0080eaf281efbc36566" kindref="member">Accept</ref>(Functor<sp/>&amp;functor)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctorCode<sp/><ref refid="classvrv_1_1_measure_1af0fba6d5327bf0080eaf281efbc36566" kindref="member">Accept</ref>(ConstFunctor<sp/>&amp;functor)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctorCode<sp/>AcceptEnd(Functor<sp/>&amp;functor)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>FunctorCode<sp/>AcceptEnd(ConstFunctor<sp/>&amp;functor)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags<sp/>for<sp/>drawing<sp/>measure<sp/>barline<sp/>based<sp/>on<sp/>visibility<sp/>or<sp/>other<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>BarlineDrawingFlags<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SYSTEM_BREAK<sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCORE_DEF_INSERT<sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INVISIBLE_MEASURE_CURRENT<sp/>=<sp/>0x4,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INVISIBLE_MEASURE_PREVIOUS<sp/>=<sp/>0x8</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a74bf7ce62a9f5f49985336483516d8a8" kindref="member">m_drawingFacsX1</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_drawingFacsX2;</highlight></codeline>
<codeline lineno="382"></codeline>
<codeline lineno="386" refid="classvrv_1_1_measure_1a39f4319275584a57b898dcbfcbed760e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_aligner" kindref="compound">MeasureAligner</ref><sp/><ref refid="classvrv_1_1_measure_1a39f4319275584a57b898dcbfcbed760e" kindref="member">m_measureAligner</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_timestamp_aligner" kindref="compound">TimestampAligner</ref><sp/>m_timestampAligner;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="395" refid="classvrv_1_1_measure_1a0f66f8a9a11ea45c967fbb796b21d91f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a0f66f8a9a11ea45c967fbb796b21d91f" kindref="member">m_drawingXRel</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="classvrv_1_1_measure_1a665f3d9783f81d741ffa3a140bd61485" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvrv_1_1_measure_1a665f3d9783f81d741ffa3a140bd61485" kindref="member">m_cachedXRel</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_cachedOverflow;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_cachedWidth;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>MeasureType<sp/>m_measureType;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_index;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_bar_line" kindref="compound">BarLine</ref><sp/>m_leftBarLine;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_bar_line" kindref="compound">BarLine</ref><sp/>m_rightBarLine;</highlight></codeline>
<codeline lineno="429"></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_score_def" kindref="compound">ScoreDef</ref><sp/>*m_drawingScoreDef;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvrv_1_1_ending" kindref="compound">Ending</ref><sp/>*m_drawingEnding;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_hasAlignmentRefWithMultipleLayers;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Fraction&gt;<sp/>m_scoreTimeOffset;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>m_realTimeOffsetMilliseconds;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_currentTempo;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>BarlineRenditionPair&gt;<sp/>m_invisibleStaffBarlines;</highlight></codeline>
<codeline lineno="456"><highlight class="normal">};</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vrv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/verovio/verovio/include/vrv/measure.h"/>
  </compounddef>
</doxygen>
