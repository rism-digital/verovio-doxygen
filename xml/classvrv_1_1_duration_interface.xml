<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvrv_1_1_duration_interface" kind="class" language="C++" prot="public">
    <compoundname>vrv::DurationInterface</compoundname>
    <basecompoundref refid="classvrv_1_1_interface" prot="public" virt="non-virtual">vrv::Interface</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttAugmentDots</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttBeamSecondary</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttDurationGestural</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttDurationLogical</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttDurationQuality</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttDurationRatio</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttFermataPresent</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">AttStaffIdent</basecompoundref>
    <derivedcompoundref refid="classvrv_1_1_chord" prot="public" virt="non-virtual">vrv::Chord</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_nc" prot="public" virt="non-virtual">vrv::Nc</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_note" prot="public" virt="non-virtual">vrv::Note</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_rest" prot="public" virt="non-virtual">vrv::Rest</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_space" prot="public" virt="non-virtual">vrv::Space</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_tab_grp" prot="public" virt="non-virtual">vrv::TabGrp</derivedcompoundref>
    <includes refid="durationinterface_8h" local="no">durationinterface.h</includes>
      <sectiondef kind="user-defined">
      <header>Constructors, destructors, reset methods</header>
      <description><para>Reset method resets all attribute classes </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1abcb2f792eeb999beb3a5f247c812d274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::DurationInterface::DurationInterface</definition>
        <argsstring>()</argsstring>
        <name>DurationInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="45" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a2010593a7681cd4a3e34c3a9098ed9aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vrv::DurationInterface::~DurationInterface</definition>
        <argsstring>()</argsstring>
        <name>~DurationInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="46" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1ab614c92b0802cbba7b41d89def33e9a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void vrv::DurationInterface::Reset</definition>
        <argsstring>() override</argsstring>
        <name>Reset</name>
        <reimplements refid="classvrv_1_1_interface_1a5dac3707db3650101729ff5610bb6200">Reset</reimplements>
        <reimplementedby refid="classvrv_1_1_tab_grp_1a9b2fd5cbad6e65977c31711ff82c70e0">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_space_1a6d0c11896962bfd3fb7bc07cbd7af6f6">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_nc_1ad21af130a5d0b2f41ab0c69ecff02b10">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_rest_1a5ecc39383af3006f31d2bcb0d7b09fac">Reset</reimplementedby>
        <reimplementedby refid="classvrv_1_1_note_1abca9669b833294866e46d310a4ce1ec0">Reset</reimplementedby>
        <briefdescription>
<para>Virtual reset method. </para>
        </briefdescription>
        <detaileddescription>
<para>Needs to be overridden in child classes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="47" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1aa95bb6fba812c2b05620c3b862e0f6e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>InterfaceId</type>
        <definition>InterfaceId vrv::DurationInterface::IsInterface</definition>
        <argsstring>() const override</argsstring>
        <name>IsInterface</name>
        <reimplements refid="classvrv_1_1_interface_1a00a809d1924fd17cfdb6327179148f4d">IsInterface</reimplements>
        <briefdescription>
<para>Virtual method returning the InterfaceId of the interface. </para>
        </briefdescription>
        <detaileddescription>
<para>Needs to be overridden in child classes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="48" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" bodystart="48" bodyend="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Set and get the default duration</header>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1abacec4efd7744748f4c0d40a87fd2784" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::DurationInterface::SetDurDefault</definition>
        <argsstring>(data_DURATION dur)</argsstring>
        <name>SetDurDefault</name>
        <param>
          <type>data_DURATION</type>
          <declname>dur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="55" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1afd39c3b41049378b5a4baa86faf68cae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>data_DURATION</type>
        <definition>data_DURATION vrv::DurationInterface::GetDurDefault</definition>
        <argsstring>() const</argsstring>
        <name>GetDurDefault</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="56" column="19" bodyfile="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" bodystart="56" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Return the actual (gestural) duration of the note, for both CMN and mensural durations</header>
      <description><para>See data_DURATION For CMN, it is the same (DURATION_1 == DUR_1) For mensural, we need to apply the DUR_MENSURAL_MASK </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a74149eeb70f90f1f6414a10720fb328a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::DurationInterface::GetActualDur</definition>
        <argsstring>() const</argsstring>
        <name>GetActualDur</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="91" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a633cc6377cbb770438eacc87fdb1622f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::DurationInterface::GetActualDurGes</definition>
        <argsstring>() const</argsstring>
        <name>GetActualDurGes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="92" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a0bee1f64b04b02e1126446701a6532aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::DurationInterface::SetScoreTimeOnset</definition>
        <argsstring>(double scoreTime)</argsstring>
        <name>SetScoreTimeOnset</name>
        <param>
          <type>double</type>
          <declname>scoreTime</declname>
        </param>
        <briefdescription>
<para>MIDI timing information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="116" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a328faf68d235b814c5a8226d2575368b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::DurationInterface::SetRealTimeOnsetSeconds</definition>
        <argsstring>(double timeInSeconds)</argsstring>
        <name>SetRealTimeOnsetSeconds</name>
        <param>
          <type>double</type>
          <declname>timeInSeconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="117" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a80945c2f53c212b5e0ae6cf53180330a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::DurationInterface::SetScoreTimeOffset</definition>
        <argsstring>(double scoreTime)</argsstring>
        <name>SetScoreTimeOffset</name>
        <param>
          <type>double</type>
          <declname>scoreTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="118" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1abfc9967983eae285202ba238c7b6e018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::DurationInterface::SetRealTimeOffsetSeconds</definition>
        <argsstring>(double timeInSeconds)</argsstring>
        <name>SetRealTimeOffsetSeconds</name>
        <param>
          <type>double</type>
          <declname>timeInSeconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="119" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1af7cbe3eb3255d7bdd5361e77d027f999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::DurationInterface::SetScoreTimeTiedDuration</definition>
        <argsstring>(double timeInSeconds)</argsstring>
        <name>SetScoreTimeTiedDuration</name>
        <param>
          <type>double</type>
          <declname>timeInSeconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="120" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a50766852c90c7f220f1e719583238408" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::DurationInterface::GetScoreTimeOnset</definition>
        <argsstring>() const</argsstring>
        <name>GetScoreTimeOnset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="121" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1aec4ff1cc30f1f5e7729489f2ed76b12f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::DurationInterface::GetRealTimeOnsetMilliseconds</definition>
        <argsstring>() const</argsstring>
        <name>GetRealTimeOnsetMilliseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="122" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a6c9cfd95823772f9956300ab0b7cfd19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::DurationInterface::GetScoreTimeOffset</definition>
        <argsstring>() const</argsstring>
        <name>GetScoreTimeOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="123" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a754f593d0bd16d06fdff151a2da33a3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::DurationInterface::GetScoreTimeTiedDuration</definition>
        <argsstring>() const</argsstring>
        <name>GetScoreTimeTiedDuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="124" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1ae37688db2032d291d2b673343775c8e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::DurationInterface::GetRealTimeOffsetMilliseconds</definition>
        <argsstring>() const</argsstring>
        <name>GetRealTimeOffsetMilliseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="125" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1adc39d50da7f0a0dea1369a1aec1ecfbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::DurationInterface::GetScoreTimeDuration</definition>
        <argsstring>() const</argsstring>
        <name>GetScoreTimeDuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="126" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvrv_1_1_duration_interface_1a26f356ee4fcdb9e48c860d8fac8d4090" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vrv::DurationInterface::m_scoreTimeOnset</definition>
        <argsstring></argsstring>
        <name>m_scoreTimeOnset</name>
        <briefdescription>
<para>The score-time onset of the note in the measure (duration from the start of measure in quarter notes). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="153" column="12" bodyfile="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_duration_interface_1a5c99d2a0fa1d3cb354bb34b055575e9c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vrv::DurationInterface::m_scoreTimeOffset</definition>
        <argsstring></argsstring>
        <name>m_scoreTimeOffset</name>
        <briefdescription>
<para>The score-time off-time of the note in the measure (duration from the start of the measure in quarter notes). </para>
        </briefdescription>
        <detaileddescription>
<para>This is the duration of the printed note. If the note is the start of a tied group, the score time of the tied group is this variable plus m_scoreTimeTiedDuration. If this note is a secondary note in a tied group, then this value is the score time end of the printed note, and the m_scoreTimeTiedDuration is -1.0 to indicate that it should not be exported when creating a MIDI file. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="163" column="12" bodyfile="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_duration_interface_1a01e90f9b6bcffccd07bc7f4ad2b2f745" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vrv::DurationInterface::m_realTimeOnsetMilliseconds</definition>
        <argsstring></argsstring>
        <name>m_realTimeOnsetMilliseconds</name>
        <briefdescription>
<para>The time in milliseconds since the start of the measure element that contains the note. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="168" column="12" bodyfile="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_duration_interface_1a01b006181c60c9cc295d070bee7e09dc" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vrv::DurationInterface::m_realTimeOffsetMilliseconds</definition>
        <argsstring></argsstring>
        <name>m_realTimeOffsetMilliseconds</name>
        <briefdescription>
<para>The time in milliseconds since the start of the measure element to end of printed note. </para>
        </briefdescription>
        <detaileddescription>
<para>The real-time duration of a tied group is not currently tracked (this gets complicated if there is a tempo change during a note sustain, which is currently not supported). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="175" column="12" bodyfile="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_duration_interface_1a27ed1d79807aed8975704c1b518b678a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vrv::DurationInterface::m_scoreTimeTiedDuration</definition>
        <argsstring></argsstring>
        <name>m_scoreTimeTiedDuration</name>
        <briefdescription>
<para>If the note is the first in a tied group, then m_scoreTimeTiedDuration contains the score-time duration (in quarter notes) of all tied notes in the group after this note. </para>
        </briefdescription>
        <detaileddescription>
<para>If the note is a secondary note in a tied group, then this variable is set to -1.0 to indicate that it should not be written to MIDI output. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="183" column="12" bodyfile="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_duration_interface_1abde0dcbc837ae74f91551819a1978db9" prot="private" static="no" mutable="no">
        <type>data_DURATION</type>
        <definition>data_DURATION vrv::DurationInterface::m_durDefault</definition>
        <argsstring></argsstring>
        <name>m_durDefault</name>
        <briefdescription>
<para>The default duration: extracted from scoreDef/staffDef and used when no duration attribute is given. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="188" column="19" bodyfile="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1ab2a1d68a148ae1f515e711fff40941c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::DurationInterface::GetInterfaceAlignmentDuration</definition>
        <argsstring>(int num, int numBase) const</argsstring>
        <name>GetInterfaceAlignmentDuration</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numBase</declname>
        </param>
        <briefdescription>
<para>Returns the duration (in double) for the element. </para>
        </briefdescription>
        <detaileddescription>
<para>It returns 0.0 for grace notes. Careful: this method is not overriding <ref refid="classvrv_1_1_layer_element_1a21200c6f95f9bac5ef98b7cd4c5d7e26" kindref="member">LayerElement::GetAlignmentDuration</ref> since <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> and <ref refid="classvrv_1_1_duration_interface" kindref="compound">DurationInterface</ref> have no inheritance link. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="65" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a1220b22b42b63e3632fe49149d3a17f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::DurationInterface::GetInterfaceAlignmentMensuralDuration</definition>
        <argsstring>(int num, int numBase, const Mensur *currentMensur) const</argsstring>
        <name>GetInterfaceAlignmentMensuralDuration</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numBase</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_mensur" kindref="compound">Mensur</ref> *</type>
          <declname>currentMensur</declname>
        </param>
        <briefdescription>
<para>Returns the duration (in double) for the element for mensural notation Currently this assume brevis equality (through DUR_MENSURAL_REF) and would need to be modified for shorter equality in later repertoire. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="72" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1ad14ac28eed0c0fbc93bf4b104abb1c2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::DurationInterface::IsFirstInBeam</definition>
        <argsstring>(const LayerElement *noteOrRest) const</argsstring>
        <name>IsFirstInBeam</name>
        <param>
          <type>const <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> *</type>
          <declname>noteOrRest</declname>
        </param>
        <briefdescription>
<para>Return true if the note or rest is the first of a beam. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="77" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1ab7a23457945d43056b01fde4cc1d8b46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::DurationInterface::IsLastInBeam</definition>
        <argsstring>(const LayerElement *noteOrRest) const</argsstring>
        <name>IsLastInBeam</name>
        <param>
          <type>const <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> *</type>
          <declname>noteOrRest</declname>
        </param>
        <briefdescription>
<para>Return true if the note or rest is the last of a beam. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="82" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1aa6d43066a4932c02ecdde2ade384257d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::DurationInterface::GetNoteOrChordDur</definition>
        <argsstring>(const LayerElement *element) const</argsstring>
        <name>GetNoteOrChordDur</name>
        <param>
          <type>const <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>If the element is part of a chord, return the chord actual duration, otherwise the note actual duration. </para>
        </briefdescription>
        <detaileddescription>
<para>Since we need to check what the element is, we need to pass it as parameter. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="99" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a66a8195b6236d862a2234af1fb5256c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::DurationInterface::IsMensuralDur</definition>
        <argsstring>() const</argsstring>
        <name>IsMensuralDur</name>
        <briefdescription>
<para>Return true if the value is a mensural (DURATION_longa, brevis, etc.) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="104" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a550d47c959ecccc53c488685fea3177c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::DurationInterface::HasIdenticalDurationInterface</definition>
        <argsstring>(const DurationInterface *otherDurationInterface) const</argsstring>
        <name>HasIdenticalDurationInterface</name>
        <param>
          <type>const <ref refid="classvrv_1_1_duration_interface" kindref="compound">DurationInterface</ref> *</type>
          <declname>otherDurationInterface</declname>
        </param>
        <briefdescription>
<para><ref refid="classvrv_1_1_interface" kindref="compound">Interface</ref> comparison operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if the <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> has a <ref refid="classvrv_1_1_duration_interface" kindref="compound">DurationInterface</ref> and compare attributes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="110" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvrv_1_1_duration_interface_1a775a54a0fc09850d2ef13a7cecd0022a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::DurationInterface::CalcActualDur</definition>
        <argsstring>(data_DURATION dur) const</argsstring>
        <name>CalcActualDur</name>
        <param>
          <type>data_DURATION</type>
          <declname>dur</declname>
        </param>
        <briefdescription>
<para>We have functors in the interface for avoiding code duplication in each implementation class. </para>
        </briefdescription>
        <detaileddescription>
<para>Since we are in an interface, we need to pass the <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> (implementation) to the functor methods. These are not called by the Process/Call loop but by the implementation classes explicitely. See <ref refid="classvrv_1_1_floating_object_1ae538ce4c774260f2e1a5bbb302e26fc3" kindref="member">FloatingObject::PrepareStaffCurrentTimeSpanning</ref> for an example. Calculate the actual duration =&gt; translate mensural values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="144" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is an interface for elements with duration, such as notes and rests. </para>
    </briefdescription>
    <detaileddescription>
<para>It is not an abstract class but should not be instanciated directly. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="8">
        <label>AttDurationRatio</label>
      </node>
      <node id="6">
        <label>AttDurationLogical</label>
      </node>
      <node id="4">
        <label>AttBeamSecondary</label>
      </node>
      <node id="2">
        <label>vrv::Interface</label>
        <link refid="classvrv_1_1_interface"/>
      </node>
      <node id="15">
        <label>vrv::Space</label>
        <link refid="classvrv_1_1_space"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>vrv::Note</label>
        <link refid="classvrv_1_1_note"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>AttFermataPresent</label>
      </node>
      <node id="14">
        <label>vrv::Rest</label>
        <link refid="classvrv_1_1_rest"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>vrv::DurationInterface</label>
        <link refid="classvrv_1_1_duration_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>vrv::Nc</label>
        <link refid="classvrv_1_1_nc"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>AttAugmentDots</label>
      </node>
      <node id="16">
        <label>vrv::TabGrp</label>
        <link refid="classvrv_1_1_tab_grp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>AttStaffIdent</label>
      </node>
      <node id="11">
        <label>vrv::Chord</label>
        <link refid="classvrv_1_1_chord"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>AttDurationQuality</label>
      </node>
      <node id="5">
        <label>AttDurationGestural</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>AttDurationRatio</label>
      </node>
      <node id="6">
        <label>AttDurationLogical</label>
      </node>
      <node id="4">
        <label>AttBeamSecondary</label>
      </node>
      <node id="2">
        <label>vrv::Interface</label>
        <link refid="classvrv_1_1_interface"/>
      </node>
      <node id="9">
        <label>AttFermataPresent</label>
      </node>
      <node id="1">
        <label>vrv::DurationInterface</label>
        <link refid="classvrv_1_1_duration_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>AttAugmentDots</label>
      </node>
      <node id="10">
        <label>AttStaffIdent</label>
      </node>
      <node id="7">
        <label>AttDurationQuality</label>
      </node>
      <node id="5">
        <label>AttDurationGestural</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" line="38" column="47" bodyfile="/home/runner/work/verovio/verovio/include/vrv/durationinterface.h" bodystart="30" bodyend="189"/>
    <listofallmembers>
      <member refid="classvrv_1_1_duration_interface_1a775a54a0fc09850d2ef13a7cecd0022a" prot="private" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>CalcActualDur</name></member>
      <member refid="classvrv_1_1_duration_interface_1abcb2f792eeb999beb3a5f247c812d274" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>DurationInterface</name></member>
      <member refid="classvrv_1_1_duration_interface_1a74149eeb70f90f1f6414a10720fb328a" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetActualDur</name></member>
      <member refid="classvrv_1_1_duration_interface_1a633cc6377cbb770438eacc87fdb1622f" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetActualDurGes</name></member>
      <member refid="classvrv_1_1_interface_1aa0b1e2570e8f6c9d0c7f9edd28fc344c" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetAttClasses</name></member>
      <member refid="classvrv_1_1_duration_interface_1afd39c3b41049378b5a4baa86faf68cae" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetDurDefault</name></member>
      <member refid="classvrv_1_1_duration_interface_1ab2a1d68a148ae1f515e711fff40941c9" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetInterfaceAlignmentDuration</name></member>
      <member refid="classvrv_1_1_duration_interface_1a1220b22b42b63e3632fe49149d3a17f5" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetInterfaceAlignmentMensuralDuration</name></member>
      <member refid="classvrv_1_1_duration_interface_1aa6d43066a4932c02ecdde2ade384257d" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetNoteOrChordDur</name></member>
      <member refid="classvrv_1_1_duration_interface_1ae37688db2032d291d2b673343775c8e4" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetRealTimeOffsetMilliseconds</name></member>
      <member refid="classvrv_1_1_duration_interface_1aec4ff1cc30f1f5e7729489f2ed76b12f" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetRealTimeOnsetMilliseconds</name></member>
      <member refid="classvrv_1_1_duration_interface_1adc39d50da7f0a0dea1369a1aec1ecfbc" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetScoreTimeDuration</name></member>
      <member refid="classvrv_1_1_duration_interface_1a6c9cfd95823772f9956300ab0b7cfd19" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetScoreTimeOffset</name></member>
      <member refid="classvrv_1_1_duration_interface_1a50766852c90c7f220f1e719583238408" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetScoreTimeOnset</name></member>
      <member refid="classvrv_1_1_duration_interface_1a754f593d0bd16d06fdff151a2da33a3f" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>GetScoreTimeTiedDuration</name></member>
      <member refid="classvrv_1_1_duration_interface_1a550d47c959ecccc53c488685fea3177c" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>HasIdenticalDurationInterface</name></member>
      <member refid="classvrv_1_1_interface_1adaf168ce6b150aef8967391bf4f20e5f" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>Interface</name></member>
      <member refid="classvrv_1_1_duration_interface_1ad14ac28eed0c0fbc93bf4b104abb1c2e" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>IsFirstInBeam</name></member>
      <member refid="classvrv_1_1_duration_interface_1aa95bb6fba812c2b05620c3b862e0f6e5" prot="public" virt="virtual"><scope>vrv::DurationInterface</scope><name>IsInterface</name></member>
      <member refid="classvrv_1_1_duration_interface_1ab7a23457945d43056b01fde4cc1d8b46" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>IsLastInBeam</name></member>
      <member refid="classvrv_1_1_duration_interface_1a66a8195b6236d862a2234af1fb5256c1" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>IsMensuralDur</name></member>
      <member refid="classvrv_1_1_duration_interface_1abde0dcbc837ae74f91551819a1978db9" prot="private" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>m_durDefault</name></member>
      <member refid="classvrv_1_1_duration_interface_1a01b006181c60c9cc295d070bee7e09dc" prot="private" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>m_realTimeOffsetMilliseconds</name></member>
      <member refid="classvrv_1_1_duration_interface_1a01e90f9b6bcffccd07bc7f4ad2b2f745" prot="private" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>m_realTimeOnsetMilliseconds</name></member>
      <member refid="classvrv_1_1_duration_interface_1a5c99d2a0fa1d3cb354bb34b055575e9c" prot="private" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>m_scoreTimeOffset</name></member>
      <member refid="classvrv_1_1_duration_interface_1a26f356ee4fcdb9e48c860d8fac8d4090" prot="private" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>m_scoreTimeOnset</name></member>
      <member refid="classvrv_1_1_duration_interface_1a27ed1d79807aed8975704c1b518b678a" prot="private" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>m_scoreTimeTiedDuration</name></member>
      <member refid="classvrv_1_1_interface_1a57c9a4f18b81a07ef0d14dc040f84257" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>RegisterInterfaceAttClass</name></member>
      <member refid="classvrv_1_1_duration_interface_1ab614c92b0802cbba7b41d89def33e9a2" prot="public" virt="virtual"><scope>vrv::DurationInterface</scope><name>Reset</name></member>
      <member refid="classvrv_1_1_duration_interface_1abacec4efd7744748f4c0d40a87fd2784" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>SetDurDefault</name></member>
      <member refid="classvrv_1_1_duration_interface_1abfc9967983eae285202ba238c7b6e018" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>SetRealTimeOffsetSeconds</name></member>
      <member refid="classvrv_1_1_duration_interface_1a328faf68d235b814c5a8226d2575368b" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>SetRealTimeOnsetSeconds</name></member>
      <member refid="classvrv_1_1_duration_interface_1a80945c2f53c212b5e0ae6cf53180330a" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>SetScoreTimeOffset</name></member>
      <member refid="classvrv_1_1_duration_interface_1a0bee1f64b04b02e1126446701a6532aa" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>SetScoreTimeOnset</name></member>
      <member refid="classvrv_1_1_duration_interface_1af7cbe3eb3255d7bdd5361e77d027f999" prot="public" virt="non-virtual"><scope>vrv::DurationInterface</scope><name>SetScoreTimeTiedDuration</name></member>
      <member refid="classvrv_1_1_duration_interface_1a2010593a7681cd4a3e34c3a9098ed9aa" prot="public" virt="virtual"><scope>vrv::DurationInterface</scope><name>~DurationInterface</name></member>
      <member refid="classvrv_1_1_interface_1a1fbabd3b506190dc2f1b4584a49a85ea" prot="public" virt="virtual"><scope>vrv::DurationInterface</scope><name>~Interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
