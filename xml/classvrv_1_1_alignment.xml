<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvrv_1_1_alignment" kind="class" language="C++" prot="public">
    <compoundname>vrv::Alignment</compoundname>
    <basecompoundref refid="classvrv_1_1_object" prot="public" virt="non-virtual">vrv::Object</basecompoundref>
    <includes refid="horizontalaligner_8h" local="no">horizontalaligner.h</includes>
      <sectiondef kind="user-defined">
      <header>Constructors, destructors, reset methods</header>
      <description><para>Reset method reset all attribute classes </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a4c02b09d436d667982a8c50dcb03c6b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::Alignment::Alignment</definition>
        <argsstring>()</argsstring>
        <name>Alignment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="75" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a7a64c1f1a0c13505f4150192da2a4115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::Alignment::Alignment</definition>
        <argsstring>(double time, AlignmentType type=ALIGNMENT_DEFAULT)</argsstring>
        <name>Alignment</name>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>AlignmentType</type>
          <declname>type</declname>
          <defval>ALIGNMENT_DEFAULT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="76" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1ac34d76c9e71df51687df4400b32a9da3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vrv::Alignment::~Alignment</definition>
        <argsstring>()</argsstring>
        <name>~Alignment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="77" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a0287d653bbc3253df179dfcaaab2f343" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::Alignment::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <reimplements refid="classvrv_1_1_object_1acdbfa3602b2a05ed4c7ba41c77f92b7e">Reset</reimplements>
        <briefdescription>
<para>Reset the object, that is 1) removing all childs and 2) resetting all attributes. </para>
        </briefdescription>
        <detaileddescription>
<para>The method is virtual, so <emphasis>always</emphasis> call the parent in the method overriding it. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="78" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a83dd2c33e9c6d89bc21a2d91c0f7a972" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ClassId</type>
        <definition>virtual ClassId vrv::Alignment::GetClassId</definition>
        <argsstring>() const</argsstring>
        <name>GetClassId</name>
        <reimplements refid="classvrv_1_1_object_1a21d8756c0c921f9fa7bac0e210eb5e00">GetClassId</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="79" column="21" bodyfile="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" bodystart="79" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Set and get the xRel value of the alignment</header>
      <memberdef kind="function" id="classvrv_1_1_alignment_1ace45fe11ad8e9befcdaea18ecc2cf5ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Alignment::SetXRel</definition>
        <argsstring>(int xRel)</argsstring>
        <name>SetXRel</name>
        <param>
          <type>int</type>
          <declname>xRel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="96" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a7c472c8d3a8acf0a5dbf48aca473655e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::Alignment::GetXRel</definition>
        <argsstring>() const</argsstring>
        <name>GetXRel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="97" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" bodystart="97" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Set and get the time value of the alignment</header>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a51972727e9ef02059b5d6aa4718de290" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Alignment::SetTime</definition>
        <argsstring>(double time)</argsstring>
        <name>SetTime</name>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="104" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1aa23ca5d6feda8b0c8d61d6d74c4d39f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double vrv::Alignment::GetTime</definition>
        <argsstring>() const</argsstring>
        <name>GetTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="105" column="12" bodyfile="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" bodystart="105" bodyend="105"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Set and get the type of the alignment</header>
      <memberdef kind="function" id="classvrv_1_1_alignment_1aa5ca7ecc63865e44151b4331faf43a05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Alignment::SetType</definition>
        <argsstring>(AlignmentType type)</argsstring>
        <name>SetType</name>
        <param>
          <type>AlignmentType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="119" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1ace5b196a887793320b1461e32d721bb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>AlignmentType</type>
        <definition>AlignmentType vrv::Alignment::GetType</definition>
        <argsstring>() const</argsstring>
        <name>GetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="120" column="19" bodyfile="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" bodystart="120" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_alignment_1ab9c27a19a896037763c272763344e650" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Alignment::AdjustGraceXPos</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>AdjustGraceXPos</name>
        <reimplements refid="classvrv_1_1_object_1a7f4019d68ac2206469e1ed0de22610a3">AdjustGraceXPos</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>See Object::AdjustGraceXPos. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="223" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1abce9fcb87cebbb71ef1549bc56d15198" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Alignment::AdjustGraceXPosEnd</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>AdjustGraceXPosEnd</name>
        <reimplements refid="classvrv_1_1_object_1a935fdcf665ba277d9a7879a91b8b6f57">AdjustGraceXPosEnd</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="224" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_alignment_1a93b9611a56a39c342f74ab87ddb703fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Alignment::AdjustXPos</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>AdjustXPos</name>
        <reimplements refid="classvrv_1_1_object_1adacbf7e25c213d82303c739fec53828a">AdjustXPos</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classvrv_1_1_object_1adacbf7e25c213d82303c739fec53828a" kindref="member">Object::AdjustXPos</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="231" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1aa69589c917373da6dd82120b819063c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Alignment::AdjustXPosEnd</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>AdjustXPosEnd</name>
        <reimplements refid="classvrv_1_1_object_1aa328ebfcfc62471e4fb0ed19523bcc1c">AdjustXPosEnd</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="232" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvrv_1_1_alignment_1a2344f0b20a9591cbe9c0f47a3ff6c4d3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::Alignment::m_xRel</definition>
        <argsstring></argsstring>
        <name>m_xRel</name>
        <briefdescription>
<para>Stores the position relative to the measure. </para>
        </briefdescription>
        <detaileddescription>
<para>This is instanciated by the <ref refid="classvrv_1_1_object_1a3a00186419e955ee211440092e955f14" kindref="member">Object::SetAlignmentXPos</ref> functor. It takes into account a non-linear according to the time interval with the previous Alignement </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="261" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_alignment_1a0e2ec3f6e2514aa8975cee09bd7c1308" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double vrv::Alignment::m_time</definition>
        <argsstring></argsstring>
        <name>m_time</name>
        <briefdescription>
<para>Stores the time at which the alignment occur. </para>
        </briefdescription>
        <detaileddescription>
<para>It is set by <ref refid="classvrv_1_1_object_1ac3beb8d8246e880f20c92c4e3725545a" kindref="member">Object::AlignHorizontally</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="266" column="12" bodyfile="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_alignment_1ac2f9262b11c83affdb26ac9d4b3303f7" prot="private" static="no" mutable="no">
        <type>AlignmentType</type>
        <definition>AlignmentType vrv::Alignment::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <briefdescription>
<para>Defines the type of alignment (see the AlignmentType enum). </para>
        </briefdescription>
        <detaileddescription>
<para>We have different types because we want some events occuring at the same time to be aligned separately. Examples: the clefs needs to be aligned together, key signatures together, and then the notes, even if all of them occur at time 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="274" column="19" bodyfile="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_alignment_1a1071b7911f0f71654d0ab6ca37cbc60a" prot="private" static="no" mutable="no">
        <type>MapOfIntGraceAligners</type>
        <definition>MapOfIntGraceAligners vrv::Alignment::m_graceAligners</definition>
        <argsstring></argsstring>
        <name>m_graceAligners</name>
        <briefdescription>
<para>A map of GraceAligners if any. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classvrv_1_1_alignment" kindref="compound">Alignment</ref> owns them. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="279" column="27" bodyfile="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvrv_1_1_alignment_1a69dbbfa23611f87db7df6c03a26e52a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Alignment::ClearGraceAligners</definition>
        <argsstring>()</argsstring>
        <name>ClearGraceAligners</name>
        <briefdescription>
<para>Delete the grace aligners in the map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="85" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1adc9b6237ee57e0c98b3b93d8d1edb44e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool vrv::Alignment::IsSupportedChild</definition>
        <argsstring>(Object *object)</argsstring>
        <name>IsSupportedChild</name>
        <reimplements refid="classvrv_1_1_object_1a06ffb8f7f251aeea862abe1f76b5599d">IsSupportedChild</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_object" kindref="compound">Object</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Override the method of adding <ref refid="classvrv_1_1_alignment_reference" kindref="compound">AlignmentReference</ref> children. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="90" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1ab52c03819037b643b89612716dc4629a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Alignment::AddLayerElementRef</definition>
        <argsstring>(LayerElement *element)</argsstring>
        <name>AddLayerElementRef</name>
        <param>
          <type><ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para><ref refid="classvrv_1_1_add" kindref="compound">Add</ref> the <ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> to the appropriate <ref refid="classvrv_1_1_alignment_reference" kindref="compound">AlignmentReference</ref> child. </para>
        </briefdescription>
        <detaileddescription>
<para>Looks at the cross-staff situation (@staff or parent @staff). Return true if the <ref refid="classvrv_1_1_alignment_reference" kindref="compound">AlignmentReference</ref> holds more than one layer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="113" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1abea5738c5b4b494dbda993185dfd0e92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Alignment::IsOfType</definition>
        <argsstring>(const std::vector&lt; AlignmentType &gt; &amp;types) const</argsstring>
        <name>IsOfType</name>
        <param>
          <type>const std::vector&lt; AlignmentType &gt; &amp;</type>
          <declname>types</declname>
        </param>
        <briefdescription>
<para>Check if the element is of on of the types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="126" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1aed80b800a911661778307d8103dc2b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Alignment::GetLeftRight</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;staffNs, int &amp;minLeft, int &amp;maxRight, const std::vector&lt; ClassId &gt; &amp;m_excludes={})</argsstring>
        <name>GetLeftRight</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>staffNs</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>minLeft</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>maxRight</declname>
        </param>
        <param>
          <type>const std::vector&lt; ClassId &gt; &amp;</type>
          <declname>m_excludes</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Retrive the minimum left and maximum right position for the objects in an alignment. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns (-)VRV_UNSET in nothing for the staff specified. Uses <ref refid="classvrv_1_1_object_1a3eb3c52e16525ed1a559a825fa85e00e" kindref="member">Object::GetAlignmentLeftRight</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="133" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a928eb024f3d003643fe0870c16567c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Alignment::GetLeftRight</definition>
        <argsstring>(int staffN, int &amp;minLeft, int &amp;maxRight, const std::vector&lt; ClassId &gt; &amp;m_excludes={})</argsstring>
        <name>GetLeftRight</name>
        <param>
          <type>int</type>
          <declname>staffN</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>minLeft</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>maxRight</declname>
        </param>
        <param>
          <type>const std::vector&lt; ClassId &gt; &amp;</type>
          <declname>m_excludes</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="135" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1ae806f6c44d2251c5adf385d21d22e2be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_grace_aligner" kindref="compound">GraceAligner</ref> *</type>
        <definition>GraceAligner* vrv::Alignment::GetGraceAligner</definition>
        <argsstring>(int id)</argsstring>
        <name>GetGraceAligner</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the <ref refid="classvrv_1_1_grace_aligner" kindref="compound">GraceAligner</ref> for the <ref refid="classvrv_1_1_alignment" kindref="compound">Alignment</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Create it if necessary. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="141" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1ae694154976e041cf41059ba6274b3d79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Alignment::HasGraceAligner</definition>
        <argsstring>(int id) const</argsstring>
        <name>HasGraceAligner</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns true if the aligner has a <ref refid="classvrv_1_1_grace_aligner" kindref="compound">GraceAligner</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="146" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a6d405618a4cb9f522b09db348437230f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Alignment::PerfomBoundingBoxAlignment</definition>
        <argsstring>() const</argsstring>
        <name>PerfomBoundingBoxAlignment</name>
        <briefdescription>
<para>Returns true for <ref refid="classvrv_1_1_alignment" kindref="compound">Alignment</ref> for which we want to do bounding box alignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="151" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a4b5535808594d25a33fc7c1315144870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_alignment_reference" kindref="compound">AlignmentReference</ref> *</type>
        <definition>AlignmentReference* vrv::Alignment::GetReferenceWithElement</definition>
        <argsstring>(LayerElement *element, int staffN=VRV_UNSET)</argsstring>
        <name>GetReferenceWithElement</name>
        <param>
          <type><ref refid="classvrv_1_1_layer_element" kindref="compound">LayerElement</ref> *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffN</declname>
          <defval>VRV_UNSET</defval>
        </param>
        <briefdescription>
<para>Return the <ref refid="classvrv_1_1_alignment_reference" kindref="compound">AlignmentReference</ref> holding the element. </para>
        </briefdescription>
        <detaileddescription>
<para>If staffN is provided, uses the AlignmentReference-&gt;GetN() to accelerate the search. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="157" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a05ceb4703d37ae859db62c634e31f86a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>std::pair&lt;int, int&gt; vrv::Alignment::GetAlignmentTopBottom</definition>
        <argsstring>()</argsstring>
        <name>GetAlignmentTopBottom</name>
        <briefdescription>
<para>Return pair of max and min Y value within alignment. </para>
        </briefdescription>
        <detaileddescription>
<para>Elements will be counted by alignment references. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="162" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a54d97c1551306ae4def0e8ceb7be0152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::Alignment::AddToAccidSpace</definition>
        <argsstring>(Accid *accid)</argsstring>
        <name>AddToAccidSpace</name>
        <param>
          <type><ref refid="classvrv_1_1_accid" kindref="compound">Accid</ref> *</type>
          <declname>accid</declname>
        </param>
        <briefdescription>
<para><ref refid="classvrv_1_1_add" kindref="compound">Add</ref> an accidental to the accidSpace of the <ref refid="classvrv_1_1_alignment_reference" kindref="compound">AlignmentReference</ref> holding it. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classvrv_1_1_alignment" kindref="compound">Alignment</ref> has to have a <ref refid="classvrv_1_1_alignment_reference" kindref="compound">AlignmentReference</ref> holding it. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="168" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1ab5c500772a484c14f0ee2e0d835c75a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Alignment::HorizontalSpaceForDuration</definition>
        <argsstring>(double intervalTime, int maxActualDur, double spacingLinear, double spacingNonLinear)</argsstring>
        <name>HorizontalSpaceForDuration</name>
        <param>
          <type>double</type>
          <declname>intervalTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxActualDur</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spacingLinear</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spacingNonLinear</declname>
        </param>
        <briefdescription>
<para>Compute &quot;ideal&quot; horizontal space to allow for a given time interval, ignoring the need to keep consecutive symbols from overlapping or nearly overlapping: we assume spacing will be increased as necessary later to avoid that. </para>
        </briefdescription>
        <detaileddescription>
<para>For modern notation (CMN), ideal space is a function of time interval.</para>
<para>For a discussion of the way engravers determine spacing, see Elaine Gould, <emphasis>Behind Bars</emphasis>, p. 39. But we need something more flexible, because, for example: (1) We&apos;re interested in music with notes of very long duration: say, music in mensural notation containing longas or maximas; such music is usually not spaced by duration, but we support spacing by duration if the user wishes, and standard engravers&apos; rules would waste a lot of space. (2) For some purposes, spacing strictly proportional to duration is desirable. The most flexible solution might be to get ideal spacing from a user-definable table, but using a formula with parameters can come close and has other advantages. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="185" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1ad28501c0afe0c8d567fcead6c756eb3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Alignment::HasAlignmentReference</definition>
        <argsstring>(int staffN)</argsstring>
        <name>HasAlignmentReference</name>
        <param>
          <type>int</type>
          <declname>staffN</declname>
        </param>
        <briefdescription>
<para>Return true if the alignment contains at least one reference with staffN. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="191" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1ac3940d3320063bc8c8190c396bf766db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::Alignment::HasTimestampOnly</definition>
        <argsstring>()</argsstring>
        <name>HasTimestampOnly</name>
        <briefdescription>
<para>Return true if the alignment contains only references to timestamp attributes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="196" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a28b3741b1abb5e4eb9bba5d6172c5210" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Alignment::SetAlignmentXPos</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>SetAlignmentXPos</name>
        <reimplements refid="classvrv_1_1_object_1a3a00186419e955ee211440092e955f14">SetAlignmentXPos</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Set the position of the <ref refid="classvrv_1_1_alignment" kindref="compound">Alignment</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Looks at the time different with the previous <ref refid="classvrv_1_1_alignment" kindref="compound">Alignment</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="206" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a1b1e214293bf75dfacc6e6dbfc561913" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Alignment::JustifyX</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>JustifyX</name>
        <reimplements refid="classvrv_1_1_object_1af644f5ed4600bb29ca03ded3f95b3467">JustifyX</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>Justify the X positions Special case of functor redirected from <ref refid="classvrv_1_1_measure" kindref="compound">Measure</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="212" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1a7a0dad8192abed90b8eedc6b5b224dd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Alignment::AdjustArpeg</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>AdjustArpeg</name>
        <reimplements refid="classvrv_1_1_object_1a9a7ac871bbd388bc57ad3efbcd5523e4">AdjustArpeg</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>See Object::AdjustArpeg. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="217" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1adaeb0f47b3019237561fcc908d565830" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Alignment::AdjustAccidX</definition>
        <argsstring>(FunctorParams *functorParams)</argsstring>
        <name>AdjustAccidX</name>
        <reimplements refid="classvrv_1_1_object_1a08855458e45646f3831f2edf7c8a77e0">AdjustAccidX</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
          <declname>functorParams</declname>
        </param>
        <briefdescription>
<para>See Object::AjustAccidX. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="238" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_alignment_1accd249535f98c56e371409a7c964730f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int vrv::Alignment::AdjustDotsEnd</definition>
        <argsstring>(FunctorParams *)</argsstring>
        <name>AdjustDotsEnd</name>
        <reimplements refid="classvrv_1_1_object_1ae0790c79940de6c0bd58e9022043b493">AdjustDotsEnd</reimplements>
        <param>
          <type><ref refid="classvrv_1_1_functor_params" kindref="compound">FunctorParams</ref> *</type>
        </param>
        <briefdescription>
<para>See Object::AdjustDotsEnd. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="243" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvrv_1_1_alignment_1a729bf605a4b3566175a47a087b591f42" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_alignment_reference" kindref="compound">AlignmentReference</ref> *</type>
        <definition>AlignmentReference* vrv::Alignment::GetAlignmentReference</definition>
        <argsstring>(int staffN)</argsstring>
        <name>GetAlignmentReference</name>
        <param>
          <type>int</type>
          <declname>staffN</declname>
        </param>
        <briefdescription>
<para>Retrieve the <ref refid="classvrv_1_1_alignment_reference" kindref="compound">AlignmentReference</ref> with staffN. </para>
        </briefdescription>
        <detaileddescription>
<para>Create and add it as child if not found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="250" column="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class stores an alignment position elements will point to. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>vrv::BoundingBox</label>
        <link refid="classvrv_1_1_bounding_box"/>
      </node>
      <node id="1">
        <label>vrv::Alignment</label>
        <link refid="classvrv_1_1_alignment"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vrv::Object</label>
        <link refid="classvrv_1_1_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>vrv::BoundingBox</label>
        <link refid="classvrv_1_1_bounding_box"/>
      </node>
      <node id="1">
        <label>vrv::Alignment</label>
        <link refid="classvrv_1_1_alignment"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vrv::Object</label>
        <link refid="classvrv_1_1_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" line="68" column="30" bodyfile="/home/runner/work/verovio/verovio/include/vrv/horizontalaligner.h" bodystart="68" bodyend="280"/>
    <listofallmembers>
      <member refid="classvrv_1_1_object_1a2ab113f1faf62ee0332687ff981c0948" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AddChild</name></member>
      <member refid="classvrv_1_1_alignment_1ab52c03819037b643b89612716dc4629a" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>AddLayerElementRef</name></member>
      <member refid="classvrv_1_1_object_1a1af968d5140f79fd056aa5a46d7cad11" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AddLayerElementToFlatList</name></member>
      <member refid="classvrv_1_1_alignment_1a54d97c1551306ae4def0e8ceb7be0152" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>AddToAccidSpace</name></member>
      <member refid="classvrv_1_1_alignment_1adaeb0f47b3019237561fcc908d565830" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustAccidX</name></member>
      <member refid="classvrv_1_1_alignment_1a7a0dad8192abed90b8eedc6b5b224dd5" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustArpeg</name></member>
      <member refid="classvrv_1_1_object_1adbd52d9a86b0a97174b734269a690048" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustArpegEnd</name></member>
      <member refid="classvrv_1_1_object_1a6b400f3d27479c0a45865bb97d21a879" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustArtic</name></member>
      <member refid="classvrv_1_1_object_1a0f7c68b80209c30180004962bff3c8f0" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustArticWithSlurs</name></member>
      <member refid="classvrv_1_1_object_1a0d2579fea0aea8b317a490c1654be52b" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustBeams</name></member>
      <member refid="classvrv_1_1_object_1a1373589b997e00e6dc811eb3139194e8" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustBeamsEnd</name></member>
      <member refid="classvrv_1_1_object_1a6c19b533f485fd10e5649bb5c441c884" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustClefChanges</name></member>
      <member refid="classvrv_1_1_object_1abeee6db6564ff37f1fd686033751d51f" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustCrossStaffYPos</name></member>
      <member refid="classvrv_1_1_object_1a91e929fac940d876aa172b0b6c160c26" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustCrossStaffYPosEnd</name></member>
      <member refid="classvrv_1_1_object_1a1745790d27bcd5c9b11754ea44fdc376" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustDots</name></member>
      <member refid="classvrv_1_1_alignment_1accd249535f98c56e371409a7c964730f" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustDotsEnd</name></member>
      <member refid="classvrv_1_1_object_1a757300b40f61c72a86c66fe9df7f8b5d" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustFloatingPositionerGrps</name></member>
      <member refid="classvrv_1_1_object_1a3b246662209d352732e6f3018efe7748" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustFloatingPositioners</name></member>
      <member refid="classvrv_1_1_object_1aa7b805cd96f7dc63c47c640d01dd9954" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustFloatingPositionersBetween</name></member>
      <member refid="classvrv_1_1_alignment_1ab9c27a19a896037763c272763344e650" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustGraceXPos</name></member>
      <member refid="classvrv_1_1_alignment_1abce9fcb87cebbb71ef1549bc56d15198" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustGraceXPosEnd</name></member>
      <member refid="classvrv_1_1_object_1a905f84521c7583c3f1cdaf806ceecdaf" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustHarmGrpsSpacing</name></member>
      <member refid="classvrv_1_1_object_1a3feb79622f62f2a9282f3dd1201c3a0c" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustHarmGrpsSpacingEnd</name></member>
      <member refid="classvrv_1_1_object_1acd47b579ea43282b32c8c585308d9857" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustLayers</name></member>
      <member refid="classvrv_1_1_object_1adfa29f3f97c5463c0c0de270636c5e4b" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustSlurs</name></member>
      <member refid="classvrv_1_1_object_1a56434ce48d536c537485260bec7ef6c2" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustStaffOverlap</name></member>
      <member refid="classvrv_1_1_object_1af1cfac1b1885dea453542d8fccdc4461" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustSylSpacing</name></member>
      <member refid="classvrv_1_1_object_1ada977235c88371e047043642cb5ff3bb" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustSylSpacingEnd</name></member>
      <member refid="classvrv_1_1_object_1ae04a8386531bae9a2facddc7d293a0ed" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustTempo</name></member>
      <member refid="classvrv_1_1_object_1a8aaf88c9ab32e7cc92a6d39189031caa" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustTupletNumOverlap</name></member>
      <member refid="classvrv_1_1_object_1a59773566ac731e75fa34166fa1d78aa3" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustTupletsX</name></member>
      <member refid="classvrv_1_1_object_1a80bc658bb972eabcee2d0aa536386cfc" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustTupletsY</name></member>
      <member refid="classvrv_1_1_object_1af18e010dd5e84c10b4c10cfa0636db08" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustXOverflow</name></member>
      <member refid="classvrv_1_1_object_1ae373581b24540ce6c308bd86ccca6e93" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustXOverflowEnd</name></member>
      <member refid="classvrv_1_1_alignment_1a93b9611a56a39c342f74ab87ddb703fc" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustXPos</name></member>
      <member refid="classvrv_1_1_alignment_1aa69589c917373da6dd82120b819063c9" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustXPosEnd</name></member>
      <member refid="classvrv_1_1_object_1a6bdcb61d424d48a52281eec119128ceb" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustXRelForTranscription</name></member>
      <member refid="classvrv_1_1_object_1a8cc3cee5e4463a0434de0fa42ab1d1cb" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AdjustYPos</name></member>
      <member refid="classvrv_1_1_object_1ac3beb8d8246e880f20c92c4e3725545a" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AlignHorizontally</name></member>
      <member refid="classvrv_1_1_object_1a475456da50e7eeb1320dcd93134c2b1e" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AlignHorizontallyEnd</name></member>
      <member refid="classvrv_1_1_object_1a4360c3bd5d8f241c0b0dc1624d7402cf" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AlignMeasures</name></member>
      <member refid="classvrv_1_1_object_1ae8638bfdf6291004aa08e84311b6e33d" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AlignMeasuresEnd</name></member>
      <member refid="classvrv_1_1_alignment_1a4c02b09d436d667982a8c50dcb03c6b0" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>Alignment</name></member>
      <member refid="classvrv_1_1_alignment_1a7a64c1f1a0c13505f4150192da2a4115" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>Alignment</name></member>
      <member refid="classvrv_1_1_object_1ab07299113bca877d821a79246e887bd2" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AlignSystems</name></member>
      <member refid="classvrv_1_1_object_1a5e3a70072c31ed3ddf96fca1d40b4241" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AlignSystemsEnd</name></member>
      <member refid="classvrv_1_1_object_1a318b62923fa869781ad0effd2ff40648" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AlignVertically</name></member>
      <member refid="classvrv_1_1_object_1a7456561dbdda3f5d7f47e520c3819cd3" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>AlignVerticallyEnd</name></member>
      <member refid="classvrv_1_1_object_1a1579484058fb14c4c8cdf4ad58249db6" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ApplyPPUFactor</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae9a22cf5d306abb22ff5f557e81bd9af" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>ApproximateBezierBoundingBox</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3901a5e4a728b8f3450cce0e30f4bd29" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>ApproximateBezierExtrema</name></member>
      <member refid="classvrv_1_1_object_1aa63ca849b67044acc38f89a6030b03c2" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>binaryComp</name></member>
      <member refid="classvrv_1_1_bounding_box_1a5601855899250709d9fa94f3c280aa72" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>BoundingBox</name></member>
      <member refid="classvrv_1_1_object_1aeafa32ecabeffb9ce6d3e8372ab7160b" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CalcArtic</name></member>
      <member refid="classvrv_1_1_bounding_box_1a91eb3e2ee9b00bc764283fe1710e199b" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>CalcBezierAtPosition</name></member>
      <member refid="classvrv_1_1_object_1a277607c9a525f437a721e8c526963d44" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CalcChordNoteHeads</name></member>
      <member refid="classvrv_1_1_bounding_box_1ac09f7239af89a7e19ca235761589e150" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>CalcDeCasteljau</name></member>
      <member refid="classvrv_1_1_object_1a30538b76016036369786f42be54482c2" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CalcDots</name></member>
      <member refid="classvrv_1_1_object_1aa102c1e31b16c63319763a5fc1c8351c" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CalcLedgerLines</name></member>
      <member refid="classvrv_1_1_object_1a56b580832eec7871b18371835a61e136" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CalcLedgerLinesEnd</name></member>
      <member refid="classvrv_1_1_object_1a5bd96aae8a25cedd2c63ce09b92388a3" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CalcLigatureNotePos</name></member>
      <member refid="classvrv_1_1_bounding_box_1af5401bb6040fe859bf6b7dc09c3c35b8" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>CalcLinearInterpolation</name></member>
      <member refid="classvrv_1_1_object_1ade83951cbefb443049938380b46df228" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CalcMaxMeasureDuration</name></member>
      <member refid="classvrv_1_1_object_1a1e1336770fd1b687628ef53b207d29f2" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CalcOnsetOffset</name></member>
      <member refid="classvrv_1_1_object_1ae8d2bbd8c168fd6904c864f297b3deeb" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CalcOnsetOffsetEnd</name></member>
      <member refid="classvrv_1_1_bounding_box_1acf2951ebea74c27b024916a4c96480a5" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>CalcPointAtBezier</name></member>
      <member refid="classvrv_1_1_bounding_box_1a80465f84c7190f8cb0a9765693376be2" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>CalcPositionAfterRotation</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2658cb5ed914d5c435de4a3740bff2e7" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>CalcSlope</name></member>
      <member refid="classvrv_1_1_object_1a0b93f8b6e02c8ba98a03db67fe5d5d10" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CalcStem</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae087d56d7ff270c908e3a723be01f6e7" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>CalcThickBezier</name></member>
      <member refid="classvrv_1_1_object_1ae1320bf0b5a56f033dcc561147225ba7" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CastOffEncoding</name></member>
      <member refid="classvrv_1_1_object_1af4bdf6d63a5fbf43a21a5c18d3c49a10" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CastOffPages</name></member>
      <member refid="classvrv_1_1_object_1a15c5f866aed95ea5c5b051c5c7e47137" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CastOffSystems</name></member>
      <member refid="classvrv_1_1_object_1aee6f8abfde8d2fe26b067f97b6ba9f0b" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CastOffSystemsEnd</name></member>
      <member refid="classvrv_1_1_object_1a0af864d1b64a70d4ec8b62a520114bde" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>ClearChildren</name></member>
      <member refid="classvrv_1_1_alignment_1a69dbbfa23611f87db7df6c03a26e52a9" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>ClearGraceAligners</name></member>
      <member refid="classvrv_1_1_object_1a667b4432b8f9d9e92bfd34fe5c885099" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>ClearRelinquishedChildren</name></member>
      <member refid="classvrv_1_1_object_1ab2d363effa62d58a65f8aba1330c1379" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>Clone</name></member>
      <member refid="classvrv_1_1_object_1a2a1c4d0ed1a15f33637b03670c9aa98f" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CloneReset</name></member>
      <member refid="classvrv_1_1_object_1ad471da0d7ec33b8a818cc94c9630314b" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ConvertMarkupAnalytical</name></member>
      <member refid="classvrv_1_1_object_1a677194130b19ebd382b4868f9284985b" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ConvertMarkupAnalyticalEnd</name></member>
      <member refid="classvrv_1_1_object_1a7262b554ba150b54b434fc7c0c93001d" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ConvertMarkupArtic</name></member>
      <member refid="classvrv_1_1_object_1adeeaf95b17b15194260884d306a72214" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ConvertMarkupArticEnd</name></member>
      <member refid="classvrv_1_1_object_1ada935f44326f0c4ecfc068694461718b" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ConvertToCastOffMensural</name></member>
      <member refid="classvrv_1_1_object_1ae930432f04c711ac22a14c66a92feb5e" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ConvertToPageBased</name></member>
      <member refid="classvrv_1_1_object_1ada7452f72d022232966a2d5822b8bbc8" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ConvertToPageBasedEnd</name></member>
      <member refid="classvrv_1_1_object_1a4dc4ba189667de40dfbb15b88adb5b0e" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ConvertToUnCastOffMensural</name></member>
      <member refid="classvrv_1_1_object_1a4bf38f527d70161c92062a2347b7c11e" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>CopyChildren</name></member>
      <member refid="classvrv_1_1_object_1aa24fba8bae1f0876567f564f98020966" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>DeleteChild</name></member>
      <member refid="classvrv_1_1_object_1ac846569894fc8b08083e5a8526ba5834" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>DetachChild</name></member>
      <member refid="classvrv_1_1_bounding_box_1a52ac837dc797c5f292c98ddb3f43a098" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>Encloses</name></member>
      <member refid="classvrv_1_1_object_1a3749f83f36adfc8748438ca17b1e5f91" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>FillFlatList</name></member>
      <member refid="classvrv_1_1_object_1a75266bd3b8cdd0db529367a5f9f16450" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>FillStaffCurrentTimeSpanning</name></member>
      <member refid="classvrv_1_1_object_1aa35be27cc82fd95f7a353a705721778b" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>FillStaffCurrentTimeSpanningEnd</name></member>
      <member refid="classvrv_1_1_object_1afe64fa5f9df4e735ed7f1e9a5935a339" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>FindAllBetween</name></member>
      <member refid="classvrv_1_1_object_1aa5fd51861abce2d3237ef9d115d32ba6" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>FindAllByComparison</name></member>
      <member refid="classvrv_1_1_object_1a7ba7ae169a7258a16d3ff24cd2620420" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>FindAllDescendantBetween</name></member>
      <member refid="classvrv_1_1_object_1af3c1aa93cec13297b8535cccc01ff719" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>FindAllDescendantByComparison</name></member>
      <member refid="classvrv_1_1_object_1acd19a93751c317da1c6a0873e606f882" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>FindAllReferencedObjects</name></member>
      <member refid="classvrv_1_1_object_1a7cfaeb87486d72cd79c8aec19f8b8108" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>FindByComparison</name></member>
      <member refid="classvrv_1_1_object_1a3a8ac50b3a292c42c0b24d7c7a6cd3b1" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>FindByUuid</name></member>
      <member refid="classvrv_1_1_object_1a75077fdacaa928e36fe20b90eaca7a7a" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>FindDescendantByComparison</name></member>
      <member refid="classvrv_1_1_object_1a2c65f3e559db5add1055a45e60d44536" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>FindDescendantByType</name></member>
      <member refid="classvrv_1_1_object_1af7647ce739175bbba03428b59969727c" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>FindDescendantByUuid</name></member>
      <member refid="classvrv_1_1_object_1a95acdd9f46d55cf067b567ef11526b68" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>FindDescendantExtremeByComparison</name></member>
      <member refid="classvrv_1_1_object_1ae21b1881fd8e810d784efd2b3327ce9d" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>FindExtremeByComparison</name></member>
      <member refid="classvrv_1_1_object_1a5783461a8f5bee6d95391b86e0004ff4" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>FindNextChild</name></member>
      <member refid="classvrv_1_1_object_1ae1a47a27a677aa68ba14e324b0a17e00" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>FindNextChildByComparison</name></member>
      <member refid="classvrv_1_1_object_1a4750585ae6b8737aba3408fcc863dfeb" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>FindPreviousChild</name></member>
      <member refid="classvrv_1_1_object_1a7c792936ed7e04d00172c7b0017b85a1" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>FindPreviousChildByComparison</name></member>
      <member refid="classvrv_1_1_object_1adf698716d3820efeb5d1af9bfd24a187" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>FindSpannedLayerElements</name></member>
      <member refid="classvrv_1_1_object_1a426081ffba31e4251a2c36ceeb2a43ba" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GenerateMIDI</name></member>
      <member refid="classvrv_1_1_object_1a2ea4b50e70a3a0d43293df7607a6901b" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GenerateRandUuid</name></member>
      <member refid="classvrv_1_1_object_1abe889073301d6e1dfe55e725b6532948" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GenerateTimemap</name></member>
      <member refid="classvrv_1_1_object_1a3eb3c52e16525ed1a559a825fa85e00e" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetAlignmentLeftRight</name></member>
      <member refid="classvrv_1_1_alignment_1a729bf605a4b3566175a47a087b591f42" prot="private" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetAlignmentReference</name></member>
      <member refid="classvrv_1_1_alignment_1a05ceb4703d37ae859db62c634e31f86a" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetAlignmentTopBottom</name></member>
      <member refid="classvrv_1_1_object_1aeb7e152a62704071901972bbfa06062c" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetAttributes</name></member>
      <member refid="classvrv_1_1_bounding_box_1ab7d4cb3332c6a35ec86462b37c300279" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetBezierThicknessCoeficient</name></member>
      <member refid="classvrv_1_1_bounding_box_1a91a7bb36d11f909e84caab997fb49c0c" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetBottomBy</name></member>
      <member refid="classvrv_1_1_bounding_box_1aa3fc5bcc7d25b6e975fad50b11edd781" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetBoundingBoxGlyph</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2b025880f04cefa1cb37b7e6f8bfb8f1" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetBoundingBoxGlyphFontSize</name></member>
      <member refid="classvrv_1_1_object_1a6bd78730c9d5f0302710213488708adb" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetChild</name></member>
      <member refid="classvrv_1_1_object_1a889936363e6eb4b03172c86219c275fc" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetChild</name></member>
      <member refid="classvrv_1_1_object_1a96ae60d000961398754d5b22de89cc4e" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetChildCount</name></member>
      <member refid="classvrv_1_1_object_1a21704672a51a54150db818e2e14af2da" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetChildCount</name></member>
      <member refid="classvrv_1_1_object_1a88129489683bd7a5ec580f87e43e3360" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetChildCount</name></member>
      <member refid="classvrv_1_1_object_1aa187432e90c784c80ac11e25ba92161c" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetChildIndex</name></member>
      <member refid="classvrv_1_1_object_1a35273845b5714fd8e78ce82e18a60f3c" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetChildren</name></member>
      <member refid="classvrv_1_1_object_1a36a7f108361c29dae9b92078359ca105" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetChildrenForModification</name></member>
      <member refid="classvrv_1_1_alignment_1a83dd2c33e9c6d89bc21a2d91c0f7a972" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetClassId</name></member>
      <member refid="classvrv_1_1_object_1a85f5f4c2c61b31f3e0cfafccf6893dd3" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetClassName</name></member>
      <member refid="classvrv_1_1_object_1a65066ae5b40a4dc3aab9bf76abc57d36" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetClosingComment</name></member>
      <member refid="classvrv_1_1_object_1aa8a0722010e05e1e2cb04d90a9535cc4" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetComment</name></member>
      <member refid="classvrv_1_1_bounding_box_1a74fec7caf937bc6892cd0de8c1f29355" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetContentBottom</name></member>
      <member refid="classvrv_1_1_bounding_box_1a9a33f5750af51cfb292ff2a553744e2d" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetContentLeft</name></member>
      <member refid="classvrv_1_1_bounding_box_1a755302fda960358f076a3175783a5d78" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetContentRight</name></member>
      <member refid="classvrv_1_1_bounding_box_1a8343f2b84e7bb194cb9377c304703bba" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetContentTop</name></member>
      <member refid="classvrv_1_1_bounding_box_1ac2b3dff1054fee47d8d22c2183c4c346" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetContentX1</name></member>
      <member refid="classvrv_1_1_bounding_box_1aca490fbb8d4d5c0179e05f790e0e2951" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetContentX2</name></member>
      <member refid="classvrv_1_1_bounding_box_1afb681918250b5eceeab06a8752c794a0" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetContentY1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7d8f116f3c72430801e43fc9f1fb1e95" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetContentY2</name></member>
      <member refid="classvrv_1_1_object_1a318be52d7897d2a16d699374a4b702ed" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetDescendantIndex</name></member>
      <member refid="classvrv_1_1_object_1af17afdb1b9eba2df2d2f9b14bf98a8b0" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetDrawingX</name></member>
      <member refid="classvrv_1_1_object_1a93703095a714be5684eb0968475a87c9" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetDrawingY</name></member>
      <member refid="classvrv_1_1_object_1a60120fd33bf1f7227c4dc2f6a9b265c7" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetDurationInterface</name></member>
      <member refid="classvrv_1_1_object_1a12c0e976636a155de9c58ead6cd743f8" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetFacsimileInterface</name></member>
      <member refid="classvrv_1_1_object_1a4f539160a7684d67d0c4e01e5dd06c36" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetFirst</name></member>
      <member refid="classvrv_1_1_object_1a214d80f16352cda785bdbf1ba3423b68" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetFirstAncestor</name></member>
      <member refid="classvrv_1_1_object_1ad12836ab87743384cac90b940a454585" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetFirstAncestorInRange</name></member>
      <member refid="classvrv_1_1_object_1a10fe05578ee7f669ca3591c5a2a3a428" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetFirstChildNot</name></member>
      <member refid="classvrv_1_1_alignment_1ae806f6c44d2251c5adf385d21d22e2be" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetGraceAligner</name></member>
      <member refid="classvrv_1_1_object_1a2bfb8ee92dbd7e805de0aae51d07d534" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetIdx</name></member>
      <member refid="classvrv_1_1_object_1a16cba5d613527c43c79025065f82be93" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetLast</name></member>
      <member refid="classvrv_1_1_object_1a908d56fef5a5dd9b9808555ab4ea4daf" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetLastAncestorNot</name></member>
      <member refid="classvrv_1_1_bounding_box_1af329372204a34520779e6b0d0596e8b9" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetLeftBy</name></member>
      <member refid="classvrv_1_1_alignment_1aed80b800a911661778307d8103dc2b68" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetLeftRight</name></member>
      <member refid="classvrv_1_1_alignment_1a928eb024f3d003643fe0870c16567c2f" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetLeftRight</name></member>
      <member refid="classvrv_1_1_object_1a817a55b73b4356214fecf01d9da87d26" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetLinkingInterface</name></member>
      <member refid="classvrv_1_1_object_1ab2e351247e616a3f30eaf2e3d125f054" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetNext</name></member>
      <member refid="classvrv_1_1_object_1a3fda6549b288e139959f2e50355792e7" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetNext</name></member>
      <member refid="classvrv_1_1_object_1a96ca869c3849c0f108655ad5d900a2c7" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetParent</name></member>
      <member refid="classvrv_1_1_object_1aace2a15227fa3db1f20b5acbb7f2b4d2" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetPitchInterface</name></member>
      <member refid="classvrv_1_1_object_1a32a7bc21b1323f31cb9d9e68686ce345" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetPlistInterface</name></member>
      <member refid="classvrv_1_1_object_1a68eb08599ac194e3dfc2c149e96db67a" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetPositionInterface</name></member>
      <member refid="classvrv_1_1_object_1a26a7c60cdf50a4072927aa671112f1f3" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetPrevious</name></member>
      <member refid="classvrv_1_1_alignment_1a4b5535808594d25a33fc7c1315144870" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetReferenceWithElement</name></member>
      <member refid="classvrv_1_1_object_1a3d26e4876ee5a38e4c01fae4af747c23" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetRelativeLayerElement</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2fe9d4e0cef41c270fe6683e5fbd8223" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetRightBy</name></member>
      <member refid="classvrv_1_1_object_1a36ae3be40fa20c6255a6003e5d56133f" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetScoreDefInterface</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7e55bc05f8dc9b3ff7768fe48c791d83" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetSelfBottom</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2fb7e4b83e390c3cd436e3a73ddfa269" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetSelfLeft</name></member>
      <member refid="classvrv_1_1_bounding_box_1aaae2c8d3d80e7203585052862288f2d5" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetSelfRight</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2e094936f23e6b9c044ccd28a3aa0681" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetSelfTop</name></member>
      <member refid="classvrv_1_1_bounding_box_1a588e6d63bc9e9d149dc6fdd784886a78" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetSelfX1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a025b101dd81de0a3802ba5ac2a86f9c5" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetSelfX2</name></member>
      <member refid="classvrv_1_1_bounding_box_1ad958652328dd6762612727f064f56b3c" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetSelfY1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7ba0ddf13040f3747a7421232c9bc21d" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetSelfY2</name></member>
      <member refid="classvrv_1_1_object_1a8f790811faa78e214ba76d2a728fa8e5" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetStemmedDrawingInterface</name></member>
      <member refid="classvrv_1_1_object_1ac2308546f247b47d6fdaaf0e90490fa5" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetTextDirInterface</name></member>
      <member refid="classvrv_1_1_alignment_1aa23ca5d6feda8b0c8d61d6d74c4d39f4" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetTime</name></member>
      <member refid="classvrv_1_1_object_1a738ca662cfaa09bb0122966cb29b43c6" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetTimePointInterface</name></member>
      <member refid="classvrv_1_1_object_1a2ac1817c7492a51e6bb550f3002b32de" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>GetTimeSpanningInterface</name></member>
      <member refid="classvrv_1_1_bounding_box_1a9dae1c4940695c403ba67841512f94f3" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetTopBy</name></member>
      <member refid="classvrv_1_1_alignment_1ace5b196a887793320b1461e32d721bb9" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetType</name></member>
      <member refid="classvrv_1_1_object_1a7bcc3062c90aa6f927f8c51f180b585b" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetUuid</name></member>
      <member refid="classvrv_1_1_bounding_box_1a6f1d1de5ac01ce1fe4cf43ed16b47e11" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetX1By</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3a9666c33d5a4a7d01f4b159c128d6c5" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetX2By</name></member>
      <member refid="classvrv_1_1_alignment_1a7c472c8d3a8acf0a5dbf48aca473655e" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetXRel</name></member>
      <member refid="classvrv_1_1_bounding_box_1ad906e8632b28b1be81fa374ad2b5292e" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetY1By</name></member>
      <member refid="classvrv_1_1_bounding_box_1a242e2a41a61fb347b526a08fef162cdf" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>GetY2By</name></member>
      <member refid="classvrv_1_1_alignment_1ad28501c0afe0c8d567fcead6c756eb3f" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasAlignmentReference</name></member>
      <member refid="classvrv_1_1_object_1a9020ecbd4da7cb50ed8ffa686eeae8e5" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasAttClass</name></member>
      <member refid="classvrv_1_1_object_1a07880f4ad709e37ca6b5483110905383" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasAttribute</name></member>
      <member refid="classvrv_1_1_object_1ad52c48d64fdb14dbc0a4dcf40aa87295" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasClosingComment</name></member>
      <member refid="classvrv_1_1_object_1a5d95d6ed5231e12c17d17868d337b218" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasComment</name></member>
      <member refid="classvrv_1_1_bounding_box_1a6cac2a9e7c863969d8e856807936574f" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasContentBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3bde41712d93b9badf88b35ac1974503" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasContentHorizontalBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1abe8bb676a5c670242888d9034daa5a22" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasContentVerticalBB</name></member>
      <member refid="classvrv_1_1_object_1a32d88cd25d424a5c15b014efe736ee20" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasDescendant</name></member>
      <member refid="classvrv_1_1_object_1ac9dd387934b8960b47b96a0c05bb1b84" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasEditorialContent</name></member>
      <member refid="classvrv_1_1_bounding_box_1a1dfd7207c5f8431bcb56c88b5c469992" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasEmptyBB</name></member>
      <member refid="classvrv_1_1_alignment_1ae694154976e041cf41059ba6274b3d79" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasGraceAligner</name></member>
      <member refid="classvrv_1_1_object_1a1639642ba9433617ec04608f2d2570bb" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasInterface</name></member>
      <member refid="classvrv_1_1_object_1ae0d0368a66d1c4b590b311a1a94eb717" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasNonEditorialContent</name></member>
      <member refid="classvrv_1_1_bounding_box_1a72744aa255a0d861577275366e711729" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasSelfBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a33e2d9c410be02f476ca19e0f063284c" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasSelfHorizontalBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a20afc38171ff613053a28a3530a66a05" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasSelfVerticalBB</name></member>
      <member refid="classvrv_1_1_alignment_1ac3940d3320063bc8c8190c396bf766db" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HasTimestampOnly</name></member>
      <member refid="classvrv_1_1_bounding_box_1aee28c8f38335a02d395f132eac3174a2" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HorizontalContentOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a505bfcdcaff3d551fdbd3a74ed3375f0" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HorizontalLeftOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1ac4af18c7aeda842527a70954b409f54b" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HorizontalRightOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a363e14e29dcb72d6539a832921c538f9" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>HorizontalSelfOverlap</name></member>
      <member refid="classvrv_1_1_alignment_1ab5c500772a484c14f0ee2e0d835c75a1" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>HorizontalSpaceForDuration</name></member>
      <member refid="classvrv_1_1_object_1aaf1ba626f7c0d6be44373b6cfe29855f" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>InsertAfter</name></member>
      <member refid="classvrv_1_1_object_1a26dd6389f8b6ce5ff1cf9f0b779a0d14" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>InsertBefore</name></member>
      <member refid="classvrv_1_1_object_1ac14929dac6e5b5e699d16ba7fc258d9d" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>InsertChild</name></member>
      <member refid="classvrv_1_1_bounding_box_1aa2283d42759c18ce84fe53f2e1684849" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>Intersects</name></member>
      <member refid="classvrv_1_1_bounding_box_1af366b55a8e449a12d689acd9d35ae782" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>Is</name></member>
      <member refid="classvrv_1_1_bounding_box_1aaeb23e9d3064f863ef3857efef570a8f" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>Is</name></member>
      <member refid="classvrv_1_1_object_1af8ee73eca8e0a08ae535318c4462fad1" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsAttribute</name></member>
      <member refid="classvrv_1_1_object_1a24ff4e053bb15d8d893c9a1a6b2f9639" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsAttribute</name></member>
      <member refid="classvrv_1_1_object_1a5b1d528341ef806d382cdd1c27911021" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsBoundaryElement</name></member>
      <member refid="classvrv_1_1_object_1aab9a49af1e67891dcfd1b929a6d64aa9" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsControlElement</name></member>
      <member refid="classvrv_1_1_object_1a46776dd312ff3631580f9e0ff293d52e" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsEditorialElement</name></member>
      <member refid="classvrv_1_1_object_1a76f4663d1b09c5fe2b0c771eeb3f7d0e" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsExpansion</name></member>
      <member refid="classvrv_1_1_object_1a07dfe3de52f16cff12eefabe11c6cd96" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsExpansion</name></member>
      <member refid="classvrv_1_1_object_1a3b131f39c868a8a1e9b768bdc0eae811" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsFloatingObject</name></member>
      <member refid="classvrv_1_1_object_1a311186b3525f994471394fcc38bbcda8" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsLayerElement</name></member>
      <member refid="classvrv_1_1_object_1a4eec6780edc930e49d9874c1036735a4" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsModified</name></member>
      <member refid="classvrv_1_1_alignment_1abea5738c5b4b494dbda993185dfd0e92" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsOfType</name></member>
      <member refid="classvrv_1_1_object_1ad507cfd401ea330cca65a4891b90da80" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsReferenceObject</name></member>
      <member refid="classvrv_1_1_object_1a5b19179d87ef32147c3d513fa735c07f" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsRunningElement</name></member>
      <member refid="classvrv_1_1_object_1a774acf3d4a93bd2e94451eeb1b883273" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsScoreDefElement</name></member>
      <member refid="classvrv_1_1_alignment_1adc9b6237ee57e0c98b3b93d8d1edb44e" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>IsSupportedChild</name></member>
      <member refid="classvrv_1_1_object_1a334a7956ff32ade0704f4afdd74f37a6" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsSystemElement</name></member>
      <member refid="classvrv_1_1_object_1a958bf53eb4117b0438aa5ddb9264c1c8" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>IsTextElement</name></member>
      <member refid="classvrv_1_1_alignment_1a1b1e214293bf75dfacc6e6dbfc561913" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>JustifyX</name></member>
      <member refid="classvrv_1_1_object_1afc5a347cc3aa0a158036cdabc32157da" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>JustifyY</name></member>
      <member refid="classvrv_1_1_object_1a9af0cce7b5db85a68ed87c274176aa66" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>LayerCountInTimeSpan</name></member>
      <member refid="classvrv_1_1_object_1add866a8144bcb528808a3e9d6a8f9d45" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>LayerElementsInTimeSpan</name></member>
      <member refid="classvrv_1_1_bounding_box_1a4961ebaf8f99abe31ee894345cd84a16" prot="protected" virt="non-virtual"><scope>vrv::Alignment</scope><name>m_cachedDrawingX</name></member>
      <member refid="classvrv_1_1_bounding_box_1a548baf7b854ef877313302670da5d0b8" prot="protected" virt="non-virtual"><scope>vrv::Alignment</scope><name>m_cachedDrawingY</name></member>
      <member refid="classvrv_1_1_alignment_1a1071b7911f0f71654d0ab6ca37cbc60a" prot="private" virt="non-virtual"><scope>vrv::Alignment</scope><name>m_graceAligners</name></member>
      <member refid="classvrv_1_1_alignment_1a0e2ec3f6e2514aa8975cee09bd7c1308" prot="private" virt="non-virtual"><scope>vrv::Alignment</scope><name>m_time</name></member>
      <member refid="classvrv_1_1_alignment_1ac2f9262b11c83affdb26ac9d4b3303f7" prot="private" virt="non-virtual"><scope>vrv::Alignment</scope><name>m_type</name></member>
      <member refid="classvrv_1_1_object_1a74ae0995caefb72a71445ba43fce0652" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>m_unsupported</name></member>
      <member refid="classvrv_1_1_alignment_1a2344f0b20a9591cbe9c0f47a3ff6c4d3" prot="private" virt="non-virtual"><scope>vrv::Alignment</scope><name>m_xRel</name></member>
      <member refid="classvrv_1_1_object_1a985728e489aed60707c313327bf7c464" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>Modify</name></member>
      <member refid="classvrv_1_1_object_1aa846e8099e10d6cf427e8255e4a62dd4" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>MoveChildrenFrom</name></member>
      <member refid="classvrv_1_1_object_1ac7063ea155c08f4e39e5c59b735f1d9e" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>MoveItselfTo</name></member>
      <member refid="classvrv_1_1_object_1ae10fe4f6d8a8b450b680f10cfe39a9cc" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>Object</name></member>
      <member refid="classvrv_1_1_object_1aa3351c670d6ea28be99e411ac6a667d3" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>Object</name></member>
      <member refid="classvrv_1_1_object_1a8be4ecf7908559751e728551718a8bfc" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>Object</name></member>
      <member refid="classvrv_1_1_object_1a6ad51ecc97faf69c8fa8432a780aed44" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>operator=</name></member>
      <member refid="classvrv_1_1_alignment_1a6d405618a4cb9f522b09db348437230f" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>PerfomBoundingBoxAlignment</name></member>
      <member refid="classvrv_1_1_object_1a5608529769df462c68433b5f50680969" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareBoundaries</name></member>
      <member refid="classvrv_1_1_object_1a873d7c2f7805530e06ebd07885c399b6" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareCrossStaff</name></member>
      <member refid="classvrv_1_1_object_1a79600c0f5d0d0c68a2501f60ef077126" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareCrossStaffEnd</name></member>
      <member refid="classvrv_1_1_object_1a392d061080fee243ac4beb6f7e77434d" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareDrawingCueSize</name></member>
      <member refid="classvrv_1_1_object_1ac75af86dda467af7ae8d928c83b1a7c8" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareFacsimile</name></member>
      <member refid="classvrv_1_1_object_1af6ece837a732f054019b9230c59d8701" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareFloatingGrps</name></member>
      <member refid="classvrv_1_1_object_1ac9850da37f019eae12da8c42776e67b8" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareFloatingGrpsEnd</name></member>
      <member refid="classvrv_1_1_object_1a211bdcbc97d6e6eb1b39266d38fea6ef" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareLayerElementParts</name></member>
      <member refid="classvrv_1_1_object_1a506499857fa99ad918b7c236670acaf2" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareLinking</name></member>
      <member refid="classvrv_1_1_object_1a1bda4d7b151d3ceb49e8dcf2a6b4474e" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareLyrics</name></member>
      <member refid="classvrv_1_1_object_1a93eb8a93ec7ea199f54a59b8139e1a38" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareLyricsEnd</name></member>
      <member refid="classvrv_1_1_object_1af10db2b195d5667b53c982409ecb9500" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PreparePlist</name></member>
      <member refid="classvrv_1_1_object_1a72def6c07065fa48ad7cd844dd4b2ed5" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PreparePointersByLayer</name></member>
      <member refid="classvrv_1_1_object_1a4d2903e69118df1b627cb99ecd036948" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareProcessingLists</name></member>
      <member refid="classvrv_1_1_object_1a1512dc40ee5cbcefd3dd463776e24c0c" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareRpt</name></member>
      <member refid="classvrv_1_1_object_1a70fc6206cd0d6608724d91d03e64d767" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareTimePointing</name></member>
      <member refid="classvrv_1_1_object_1a5ea18a2c77fc31c9a0eee2a948660d5b" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareTimePointingEnd</name></member>
      <member refid="classvrv_1_1_object_1ac052d42c0d724ca5f16192d7398193d3" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareTimeSpanning</name></member>
      <member refid="classvrv_1_1_object_1a8049b8c19d504912d3eb535b8aba95e0" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareTimeSpanningEnd</name></member>
      <member refid="classvrv_1_1_object_1a52209d31a076ecb09fa2081bddea0311" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareTimestamps</name></member>
      <member refid="classvrv_1_1_object_1a9cf511bc173faafb24b5a87149acb897" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>PrepareTimestampsEnd</name></member>
      <member refid="classvrv_1_1_object_1ae803b6e421519fabaa32413719cf6ac0" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>Process</name></member>
      <member refid="classvrv_1_1_bounding_box_1a74c28d831f2e14aec44a848a961f8b42" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>RectBottomOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a414f972e6f1e4231d61acdd7329eb414" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>RectLeftOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a4802cf9706608398b887afd2ad3e1188" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>RectRightOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae7003f6708e916b7640d4dda5a8a18ef" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>RectTopOverlap</name></member>
      <member refid="classvrv_1_1_object_1aa5bcd61a747583c6ed2b97039129df68" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>RegisterAttClass</name></member>
      <member refid="classvrv_1_1_object_1a172109ee605efdf2c2b23440adef333c" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>RegisterInterface</name></member>
      <member refid="classvrv_1_1_object_1a48ea7a78dfbdf0195235b56679924c76" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>Relinquish</name></member>
      <member refid="classvrv_1_1_object_1a6865cdd4b0cc47a90e1cdf4a2aaa2c2e" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ReorderByXPos</name></member>
      <member refid="classvrv_1_1_object_1a4a7cd0786cfd3119a6dd128c25b67a33" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ReorderByXPos</name></member>
      <member refid="classvrv_1_1_object_1aba32b01b87b8f31455e68c77a3d8ee40" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>ReplaceChild</name></member>
      <member refid="classvrv_1_1_object_1aa1c070a008b1db58a5036c27c2fb8307" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ReplaceDrawingValuesInStaffDef</name></member>
      <member refid="classvrv_1_1_alignment_1a0287d653bbc3253df179dfcaaab2f343" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>Reset</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae79b9324168608f36cb71c8ca4174220" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ResetBoundingBox</name></member>
      <member refid="classvrv_1_1_object_1a7cd2ff14f4324ac8fdb54739fac93532" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ResetCachedDrawingX</name></member>
      <member refid="classvrv_1_1_object_1acdcf2a3a18e5b0451d902720ef1408ac" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ResetCachedDrawingY</name></member>
      <member refid="classvrv_1_1_object_1a69ad18810d5249e8bb56be54884d2b50" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ResetDrawing</name></member>
      <member refid="classvrv_1_1_object_1acea387d6c12925339a10f94312d9a82f" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ResetHorizontalAlignment</name></member>
      <member refid="classvrv_1_1_object_1a5d22ebda01e0b254c13d558f5ffdb098" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>ResetParent</name></member>
      <member refid="classvrv_1_1_object_1aadeb99ea27241a64bf942e469a04445e" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>ResetUuid</name></member>
      <member refid="classvrv_1_1_object_1ab5f42b79ff1721982121a8a9c493a8c1" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ResetVerticalAlignment</name></member>
      <member refid="classvrv_1_1_object_1a93b5fe054b2d26fe91ff50a5861fe08c" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ResolveMIDITies</name></member>
      <member refid="classvrv_1_1_object_1a74097c855ed070b02fd06810207d0ac0" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>Save</name></member>
      <member refid="classvrv_1_1_object_1a8ec6663670b4b6522cb4892babf36742" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>Save</name></member>
      <member refid="classvrv_1_1_object_1ad628dce30da1167aa84313ea7a4f5612" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>SaveEnd</name></member>
      <member refid="classvrv_1_1_object_1ac45facd18e6a4ac0b8ea7483e228aa0f" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ScoreDefOptimize</name></member>
      <member refid="classvrv_1_1_object_1a286c8a894a3743271f63924da2f610e7" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ScoreDefOptimizeEnd</name></member>
      <member refid="classvrv_1_1_object_1a0b4cf8509ee8d9876d163b309e7da1a1" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ScoreDefSetCurrent</name></member>
      <member refid="classvrv_1_1_object_1a71c3367e232d634a71c2d346dfd9f3d1" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ScoreDefSetGrpSym</name></member>
      <member refid="classvrv_1_1_object_1ac063e5c113b30453f094ba3589a534ca" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>ScoreDefUnsetCurrent</name></member>
      <member refid="classvrv_1_1_object_1a8c269609416ebdb3b948df8aac3134e1" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SeedUuid</name></member>
      <member refid="classvrv_1_1_object_1a1009aeee85e83052adcbcd8dc2af050d" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>SetAlignmentPitchPos</name></member>
      <member refid="classvrv_1_1_alignment_1a28b3741b1abb5e4eb9bba5d6172c5210" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>SetAlignmentXPos</name></member>
      <member refid="classvrv_1_1_object_1a9bc335e3bc5405f5dbaae757b5629996" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SetAsReferenceObject</name></member>
      <member refid="classvrv_1_1_bounding_box_1abc4feb5675ff672b2e3a94b4a65403b5" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SetBoundingBoxGlyph</name></member>
      <member refid="classvrv_1_1_object_1a3a95154b135f78a323dafdfec2a76e2d" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>SetCautionaryScoreDef</name></member>
      <member refid="classvrv_1_1_object_1af0db1dd88b7d2f6c9068934312ce86c8" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SetClosingComment</name></member>
      <member refid="classvrv_1_1_object_1a3b47aa3445a48e681db41607cedcd4b4" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SetComment</name></member>
      <member refid="classvrv_1_1_bounding_box_1ade8f7ad2283b156a2c7934c4055bd8bf" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SetEmptyBB</name></member>
      <member refid="classvrv_1_1_object_1a45993175bb6a94cbbd0a5b69251e25eb" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>SetOverflowBBoxes</name></member>
      <member refid="classvrv_1_1_object_1a70161897776b5acbaf0dddaa1ddd9def" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>SetOverflowBBoxesEnd</name></member>
      <member refid="classvrv_1_1_object_1a9f30aa6a8185b260943003a08980d376" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SetParent</name></member>
      <member refid="classvrv_1_1_object_1a28b81f899cf3c244799da6f49ae3dd34" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>SetStaffDefRedrawFlags</name></member>
      <member refid="classvrv_1_1_alignment_1a51972727e9ef02059b5d6aa4718de290" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SetTime</name></member>
      <member refid="classvrv_1_1_alignment_1aa5ca7ecc63865e44151b4331faf43a05" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SetType</name></member>
      <member refid="classvrv_1_1_object_1a190abc310da990f676c931d272bbb434" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SetUuid</name></member>
      <member refid="classvrv_1_1_alignment_1ace45fe11ad8e9befcdaea18ecc2cf5ca" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SetXRel</name></member>
      <member refid="classvrv_1_1_object_1a6c529b9574392b6c2baeaf8470e2a989" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>sortByUlx</name></member>
      <member refid="classvrv_1_1_object_1aa8caf0942b1ff1c02f6f8e879397ca21" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SortChildren</name></member>
      <member refid="classvrv_1_1_object_1ac97807a0dabfdf0d1d483f7f3e9427f9" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>StableSort</name></member>
      <member refid="classvrv_1_1_bounding_box_1a6a5b0a558c2799d3216a62a352eec938" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>Swap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a316a3efda8b19590914f3c4e736d2323" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SwapPoints</name></member>
      <member refid="classvrv_1_1_object_1af4f98c391b356cf51597e4777bf31185" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>SwapUuid</name></member>
      <member refid="classvrv_1_1_object_1a0ee02f42628df9898a57349899c1ba3e" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>Transpose</name></member>
      <member refid="classvrv_1_1_object_1a84120019fd68f6d7015f6765d7114a7b" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>UnCastOff</name></member>
      <member refid="classvrv_1_1_bounding_box_1a8cc083afb0d6f3a68d60fae9569645b8" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>UpdateContentBBoxX</name></member>
      <member refid="classvrv_1_1_bounding_box_1af90ec4f1a3393d9c89473f5a2b146b5b" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>UpdateContentBBoxY</name></member>
      <member refid="classvrv_1_1_bounding_box_1a5b5db30b70a0c954d37ae58e523dbead" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>UpdateSelfBBoxX</name></member>
      <member refid="classvrv_1_1_bounding_box_1a029f007d1150f88d906b318b17ecdccc" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>UpdateSelfBBoxY</name></member>
      <member refid="classvrv_1_1_bounding_box_1aa10dbbf04b3707900490d1ced0ea0418" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>VerticalBottomOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1acdb36f4007fc88d79a81eed3b440c536" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>VerticalContentOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1ab9bbe1447c1e512c9154825086f34aef" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>VerticalSelfOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a85b3cd46765c07b3d16ed7933feaddff" prot="public" virt="non-virtual"><scope>vrv::Alignment</scope><name>VerticalTopOverlap</name></member>
      <member refid="classvrv_1_1_alignment_1ac34d76c9e71df51687df4400b32a9da3" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>~Alignment</name></member>
      <member refid="classvrv_1_1_bounding_box_1a9f87f4407c2c8d88ab5e4eacfe1ac1f0" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>~BoundingBox</name></member>
      <member refid="classvrv_1_1_object_1a350424e9cf31d3b7d1bb5f5754944401" prot="public" virt="virtual"><scope>vrv::Alignment</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
