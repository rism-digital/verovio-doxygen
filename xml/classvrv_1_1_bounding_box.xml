<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvrv_1_1_bounding_box" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>vrv::BoundingBox</compoundname>
    <derivedcompoundref refid="classvrv_1_1_floating_positioner" prot="public" virt="non-virtual">vrv::FloatingPositioner</derivedcompoundref>
    <derivedcompoundref refid="classvrv_1_1_object" prot="public" virt="non-virtual">vrv::Object</derivedcompoundref>
    <includes refid="boundingbox_8h" local="no">boundingbox.h</includes>
      <sectiondef kind="user-defined">
      <header>Constructors, destructors, reset methods</header>
      <description><para>Reset method resets all attribute classes </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a5601855899250709d9fa94f3c280aa72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vrv::BoundingBox::BoundingBox</definition>
        <argsstring>()</argsstring>
        <name>BoundingBox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="39" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a9f87f4407c2c8d88ab5e4eacfe1ac1f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vrv::BoundingBox::~BoundingBox</definition>
        <argsstring>()</argsstring>
        <name>~BoundingBox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="40" column="13" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1ad8f7fed05b5a690cbcce0c3929503eb0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>ClassId</type>
        <definition>virtual ClassId vrv::BoundingBox::GetClassId</definition>
        <argsstring>() const =0</argsstring>
        <name>GetClassId</name>
        <reimplementedby refid="classvrv_1_1_object_1aab95929358aad8730f586319a3417264">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_positioner_1a08ebe8e8f9adc406db0a07d2964dc7f9">GetClassId</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_curve_positioner_1a87d564dc3efc0f9525ae4e6dcbad1a76">GetClassId</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="41" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1af366b55a8e449a12d689acd9d35ae782" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::Is</definition>
        <argsstring>(ClassId classId) const</argsstring>
        <name>Is</name>
        <param>
          <type>ClassId</type>
          <declname>classId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="42" column="10" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1aaeb23e9d3064f863ef3857efef570a8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::Is</definition>
        <argsstring>(const std::vector&lt; ClassId &gt; &amp;classIds) const</argsstring>
        <name>Is</name>
        <param>
          <type>const std::vector&lt; ClassId &gt; &amp;</type>
          <declname>classIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="43" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods for updating the bounding boxes and for providing information about their status.</header>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a8cc083afb0d6f3a68d60fae9569645b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::BoundingBox::UpdateContentBBoxX</definition>
        <argsstring>(int x1, int x2)</argsstring>
        <name>UpdateContentBBoxX</name>
        <reimplementedby refid="classvrv_1_1_floating_object_1a79c7af4267643b1bc2a783be841975c2">UpdateContentBBoxX</reimplementedby>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="50" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1af90ec4f1a3393d9c89473f5a2b146b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::BoundingBox::UpdateContentBBoxY</definition>
        <argsstring>(int y1, int y2)</argsstring>
        <name>UpdateContentBBoxY</name>
        <reimplementedby refid="classvrv_1_1_floating_object_1a88f281e9a6394157894a57b546346017">UpdateContentBBoxY</reimplementedby>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="51" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a5b5db30b70a0c954d37ae58e523dbead" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::BoundingBox::UpdateSelfBBoxX</definition>
        <argsstring>(int x1, int x2)</argsstring>
        <name>UpdateSelfBBoxX</name>
        <reimplementedby refid="classvrv_1_1_floating_object_1a29ef524752d056b1f60cab88e77a32ee">UpdateSelfBBoxX</reimplementedby>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="52" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a029f007d1150f88d906b318b17ecdccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::BoundingBox::UpdateSelfBBoxY</definition>
        <argsstring>(int y1, int y2)</argsstring>
        <name>UpdateSelfBBoxY</name>
        <reimplementedby refid="classvrv_1_1_floating_object_1a1868c149ca8ff416b6275e1637eaa626">UpdateSelfBBoxY</reimplementedby>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="53" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1ade8f7ad2283b156a2c7934c4055bd8bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::BoundingBox::SetEmptyBB</definition>
        <argsstring>()</argsstring>
        <name>SetEmptyBB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="54" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a72744aa255a0d861577275366e711729" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::HasSelfBB</definition>
        <argsstring>() const</argsstring>
        <name>HasSelfBB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="56" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a33e2d9c410be02f476ca19e0f063284c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::HasSelfHorizontalBB</definition>
        <argsstring>() const</argsstring>
        <name>HasSelfHorizontalBB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="57" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a20afc38171ff613053a28a3530a66a05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::HasSelfVerticalBB</definition>
        <argsstring>() const</argsstring>
        <name>HasSelfVerticalBB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="58" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a6cac2a9e7c863969d8e856807936574f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::HasContentBB</definition>
        <argsstring>() const</argsstring>
        <name>HasContentBB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="59" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a3bde41712d93b9badf88b35ac1974503" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::HasContentHorizontalBB</definition>
        <argsstring>() const</argsstring>
        <name>HasContentHorizontalBB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="60" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1abe8bb676a5c670242888d9034daa5a22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::HasContentVerticalBB</definition>
        <argsstring>() const</argsstring>
        <name>HasContentVerticalBB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="61" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a1dfd7207c5f8431bcb56c88b5c469992" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::HasEmptyBB</definition>
        <argsstring>() const</argsstring>
        <name>HasEmptyBB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="62" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1abc4feb5675ff672b2e3a94b4a65403b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrv::BoundingBox::SetBoundingBoxGlyph</definition>
        <argsstring>(wchar_t smuflGlyph, int fontSize)</argsstring>
        <name>SetBoundingBoxGlyph</name>
        <param>
          <type>wchar_t</type>
          <declname>smuflGlyph</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fontSize</declname>
        </param>
        <briefdescription>
<para>Set and get the smuflGlyph / fontsize for a bounding box that is the one of a single SMuFL glyph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="69" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1aa3fc5bcc7d25b6e975fad50b11edd781" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>wchar_t</type>
        <definition>wchar_t vrv::BoundingBox::GetBoundingBoxGlyph</definition>
        <argsstring>() const</argsstring>
        <name>GetBoundingBoxGlyph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="70" column="13" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a2b025880f04cefa1cb37b7e6f8bfb8f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetBoundingBoxGlyphFontSize</definition>
        <argsstring>() const</argsstring>
        <name>GetBoundingBoxGlyphFontSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="71" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="71" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Get the X and Y drawing position.</header>
      <description><para>Pure virtual methods </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a97b2b5920eb6e08b8bdf8d791c853dce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int vrv::BoundingBox::GetDrawingX</definition>
        <argsstring>() const =0</argsstring>
        <name>GetDrawingX</name>
        <reimplementedby refid="classvrv_1_1_text_element_1a1f891c325782491dae164229c4ac2358">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_arpeg_1ade898fda0b1c2c40f71f9cbd3db29468">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1a5c6d15419321ce64bde495eb3b6b9039">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grp_sym_1aa8fab8653abf99903679ce4d296a65a0">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1aa24ae7014324a35f0425c0600b0e461e">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_running_element_1a79506b46add9f740c57c0afe5ecb0af3">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1ac1d1348838c1c0af7bfff5cc04693ebd">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_measure_1a2d8b2d4baeea0f3c888a25804d8145ba">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a18ae9ace02986235dfe89b03d1e2ebf4">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_positioner_1a9d371e084a3fb3cb0489de4fe7382f75">GetDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_object_1ac707920ee385b0c7bb52d4b0184e7e54">GetDrawingX</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="84" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a94c585ec874e040e3e6e39c5d8dddc5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int vrv::BoundingBox::GetDrawingY</definition>
        <argsstring>() const =0</argsstring>
        <name>GetDrawingY</name>
        <reimplementedby refid="classvrv_1_1_text_element_1aded80df16145798e9c7779f182600e71">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_object_1a87db0b64d7840dcfd006f6af2b32e4bb">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_grp_sym_1ac74b7e7f9195e785ba9f6c914ab36725">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_system_1a2e0daaa367e7b5fe3da8fbf85e264a4d">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_running_element_1a933bdcdf9263374039bca99c17ac54a2">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_staff_1a3d2ae4cfcd120a8d0cc8ccf30d110d0c">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_layer_element_1a53d35a25d75146e989b232582d752c74">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_positioner_1a6098f6e4cbf214d0e7cdd5cd6f15ac40">GetDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_object_1a2b30e0834719af6134364237c5f78940">GetDrawingY</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="85" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Reset the cached values of the drawingX and Y values.</header>
      <description><para>Pure virtual methods. </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a5b37b259a20df6f83ff94908c4d9fbea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vrv::BoundingBox::ResetCachedDrawingX</definition>
        <argsstring>() const =0</argsstring>
        <name>ResetCachedDrawingX</name>
        <reimplementedby refid="classvrv_1_1_measure_1abb732e601d47f3dfe7f409d303e0bb8a">ResetCachedDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_floating_positioner_1a6d00ea6b86363e1644c5b6cb7ccb85cc">ResetCachedDrawingX</reimplementedby>
        <reimplementedby refid="classvrv_1_1_object_1a859aecc00ab75fc7ed2f2780bc0a6a51">ResetCachedDrawingX</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="93" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a928808d6ff900985afdfe1856490d505" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vrv::BoundingBox::ResetCachedDrawingY</definition>
        <argsstring>() const =0</argsstring>
        <name>ResetCachedDrawingY</name>
        <reimplementedby refid="classvrv_1_1_floating_positioner_1af797bb9da2ed730928f3b2e90a8e5082">ResetCachedDrawingY</reimplementedby>
        <reimplementedby refid="classvrv_1_1_object_1ac5b28a8625980d057d6cad83dbd52e26">ResetCachedDrawingY</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="94" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Get positions for self and content</header>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a7e55bc05f8dc9b3ff7768fe48c791d83" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetSelfBottom</definition>
        <argsstring>() const</argsstring>
        <name>GetSelfBottom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="101" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a2e094936f23e6b9c044ccd28a3aa0681" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetSelfTop</definition>
        <argsstring>() const</argsstring>
        <name>GetSelfTop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="102" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a2fb7e4b83e390c3cd436e3a73ddfa269" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetSelfLeft</definition>
        <argsstring>() const</argsstring>
        <name>GetSelfLeft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="103" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1aaae2c8d3d80e7203585052862288f2d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetSelfRight</definition>
        <argsstring>() const</argsstring>
        <name>GetSelfRight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="104" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a74fec7caf937bc6892cd0de8c1f29355" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetContentBottom</definition>
        <argsstring>() const</argsstring>
        <name>GetContentBottom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="105" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a8343f2b84e7bb194cb9377c304703bba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetContentTop</definition>
        <argsstring>() const</argsstring>
        <name>GetContentTop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="106" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a9a33f5750af51cfb292ff2a553744e2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetContentLeft</definition>
        <argsstring>() const</argsstring>
        <name>GetContentLeft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="107" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a755302fda960358f076a3175783a5d78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetContentRight</definition>
        <argsstring>() const</argsstring>
        <name>GetContentRight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="108" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a588e6d63bc9e9d149dc6fdd784886a78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetSelfX1</definition>
        <argsstring>() const</argsstring>
        <name>GetSelfX1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="110" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a025b101dd81de0a3802ba5ac2a86f9c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetSelfX2</definition>
        <argsstring>() const</argsstring>
        <name>GetSelfX2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="111" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1ad958652328dd6762612727f064f56b3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetSelfY1</definition>
        <argsstring>() const</argsstring>
        <name>GetSelfY1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="112" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a7ba0ddf13040f3747a7421232c9bc21d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetSelfY2</definition>
        <argsstring>() const</argsstring>
        <name>GetSelfY2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="113" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1ac2b3dff1054fee47d8d22c2183c4c346" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetContentX1</definition>
        <argsstring>() const</argsstring>
        <name>GetContentX1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="114" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1aca490fbb8d4d5c0179e05f790e0e2951" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetContentX2</definition>
        <argsstring>() const</argsstring>
        <name>GetContentX2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="115" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1afb681918250b5eceeab06a8752c794a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetContentY1</definition>
        <argsstring>() const</argsstring>
        <name>GetContentY1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="116" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a7d8f116f3c72430801e43fc9f1fb1e95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetContentY2</definition>
        <argsstring>() const</argsstring>
        <name>GetContentY2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="117" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="117" bodyend="117"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Get wrappers</header>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a91a7bb36d11f909e84caab997fb49c0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetBottomBy</definition>
        <argsstring>(Accessor type) const</argsstring>
        <name>GetBottomBy</name>
        <param>
          <type>Accessor</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="124" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a9dae1c4940695c403ba67841512f94f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetTopBy</definition>
        <argsstring>(Accessor type) const</argsstring>
        <name>GetTopBy</name>
        <param>
          <type>Accessor</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="125" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1af329372204a34520779e6b0d0596e8b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetLeftBy</definition>
        <argsstring>(Accessor type) const</argsstring>
        <name>GetLeftBy</name>
        <param>
          <type>Accessor</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="126" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a2fe9d4e0cef41c270fe6683e5fbd8223" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetRightBy</definition>
        <argsstring>(Accessor type) const</argsstring>
        <name>GetRightBy</name>
        <param>
          <type>Accessor</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="127" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a6f1d1de5ac01ce1fe4cf43ed16b47e11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetX1By</definition>
        <argsstring>(Accessor type) const</argsstring>
        <name>GetX1By</name>
        <param>
          <type>Accessor</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="128" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a3a9666c33d5a4a7d01f4b159c128d6c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetX2By</definition>
        <argsstring>(Accessor type) const</argsstring>
        <name>GetX2By</name>
        <param>
          <type>Accessor</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="129" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1ad906e8632b28b1be81fa374ad2b5292e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetY1By</definition>
        <argsstring>(Accessor type) const</argsstring>
        <name>GetY1By</name>
        <param>
          <type>Accessor</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="130" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a242e2a41a61fb347b526a08fef162cdf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetY2By</definition>
        <argsstring>(Accessor type) const</argsstring>
        <name>GetY2By</name>
        <param>
          <type>Accessor</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="131" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="131" bodyend="131"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Return true if the bounding box has a horizontal / vertical overlap with the other one.</header>
      <description><para>Makes an overal bounding box overlap calculation without looking at anchor points </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1aee28c8f38335a02d395f132eac3174a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::HorizontalContentOverlap</definition>
        <argsstring>(const BoundingBox *other, int margin=0) const</argsstring>
        <name>HorizontalContentOverlap</name>
        <param>
          <type>const <ref refid="classvrv_1_1_bounding_box" kindref="compound">BoundingBox</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="139" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1acdb36f4007fc88d79a81eed3b440c536" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::VerticalContentOverlap</definition>
        <argsstring>(const BoundingBox *other, int margin=0) const</argsstring>
        <name>VerticalContentOverlap</name>
        <param>
          <type>const <ref refid="classvrv_1_1_bounding_box" kindref="compound">BoundingBox</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="140" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a363e14e29dcb72d6539a832921c538f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::HorizontalSelfOverlap</definition>
        <argsstring>(const BoundingBox *other, int margin=0) const</argsstring>
        <name>HorizontalSelfOverlap</name>
        <param>
          <type>const <ref refid="classvrv_1_1_bounding_box" kindref="compound">BoundingBox</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="141" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1ab9bbe1447c1e512c9154825086f34aef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::VerticalSelfOverlap</definition>
        <argsstring>(const BoundingBox *other, int margin=0) const</argsstring>
        <name>VerticalSelfOverlap</name>
        <param>
          <type>const <ref refid="classvrv_1_1_bounding_box" kindref="compound">BoundingBox</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="142" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Return the overlap on the left / right / top / bottom looking at bounding box anchor points</header>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a0fdfa000c449d4c9b1de755dd1efff55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::HorizontalLeftOverlap</definition>
        <argsstring>(const BoundingBox *other, const Doc *doc, int margin=0, int vMargin=0) const</argsstring>
        <name>HorizontalLeftOverlap</name>
        <param>
          <type>const <ref refid="classvrv_1_1_bounding_box" kindref="compound">BoundingBox</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>vMargin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="149" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a7265ddc2845db5bc543200b037048a2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::HorizontalRightOverlap</definition>
        <argsstring>(const BoundingBox *other, const Doc *doc, int margin=0, int vMargin=0) const</argsstring>
        <name>HorizontalRightOverlap</name>
        <param>
          <type>const <ref refid="classvrv_1_1_bounding_box" kindref="compound">BoundingBox</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>vMargin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="150" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1aa4dda490e649a5c4817ef99853e0a3da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::VerticalTopOverlap</definition>
        <argsstring>(const BoundingBox *other, const Doc *doc, int margin=0, int hMargin=0) const</argsstring>
        <name>VerticalTopOverlap</name>
        <param>
          <type>const <ref refid="classvrv_1_1_bounding_box" kindref="compound">BoundingBox</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>hMargin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="151" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1aeff55f50ac7cae031dfa289d422b77c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::VerticalBottomOverlap</definition>
        <argsstring>(const BoundingBox *other, const Doc *doc, int margin=0, int hMargin=0) const</argsstring>
        <name>VerticalBottomOverlap</name>
        <param>
          <type>const <ref refid="classvrv_1_1_bounding_box" kindref="compound">BoundingBox</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_doc" kindref="compound">Doc</ref> *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>hMargin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="152" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Return the left / right / top / bottom of the cut out rectangles (and use self bounding rect if there are</header>
      <description><para>none) </para>
</description>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a81256810cab77e0d9fedf64fa858690f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetCutOutTop</definition>
        <argsstring>(const Resources &amp;resources) const</argsstring>
        <name>GetCutOutTop</name>
        <param>
          <type>const <ref refid="classvrv_1_1_resources" kindref="compound">Resources</ref> &amp;</type>
          <declname>resources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="160" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a26bfbd087c59e094696d2c0ff1fd89ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetCutOutBottom</definition>
        <argsstring>(const Resources &amp;resources) const</argsstring>
        <name>GetCutOutBottom</name>
        <param>
          <type>const <ref refid="classvrv_1_1_resources" kindref="compound">Resources</ref> &amp;</type>
          <declname>resources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="161" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a341aeebe2fdd010ebf72aaf1c8760df3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetCutOutLeft</definition>
        <argsstring>(const Resources &amp;resources) const</argsstring>
        <name>GetCutOutLeft</name>
        <param>
          <type>const <ref refid="classvrv_1_1_resources" kindref="compound">Resources</ref> &amp;</type>
          <declname>resources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="162" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1abc3f8eacafe2bfb2becd732507f259ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetCutOutRight</definition>
        <argsstring>(const Resources &amp;resources) const</argsstring>
        <name>GetCutOutRight</name>
        <param>
          <type>const <ref refid="classvrv_1_1_resources" kindref="compound">Resources</ref> &amp;</type>
          <declname>resources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="163" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a414f972e6f1e4231d61acdd7329eb414" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int vrv::BoundingBox::RectLeftOverlap</definition>
        <argsstring>(const Point rect1[2], const Point rect2[2], int margin, int vMargin)</argsstring>
        <name>RectLeftOverlap</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>rect1</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>rect2</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vMargin</declname>
        </param>
        <briefdescription>
<para>Calculate the left / right / top / bottom overlap of two rectangle taking into account the margin / v-h-Margins. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="256" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a4802cf9706608398b887afd2ad3e1188" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int vrv::BoundingBox::RectRightOverlap</definition>
        <argsstring>(const Point rect1[2], const Point rect2[2], int margin, int vMargin)</argsstring>
        <name>RectRightOverlap</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>rect1</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>rect2</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vMargin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="257" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1ae7003f6708e916b7640d4dda5a8a18ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int vrv::BoundingBox::RectTopOverlap</definition>
        <argsstring>(const Point rect1[2], const Point rect2[2], int margin, int hMargin)</argsstring>
        <name>RectTopOverlap</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>rect1</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>rect2</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hMargin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="258" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a74c28d831f2e14aec44a848a961f8b42" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int vrv::BoundingBox::RectBottomOverlap</definition>
        <argsstring>(const Point rect1[2], const Point rect2[2], int margin, int hMargin)</argsstring>
        <name>RectBottomOverlap</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>rect1</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>rect2</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hMargin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="259" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="classvrv_1_1_bounding_box_1a4961ebaf8f99abe31ee894345cd84a16" prot="protected" static="no" mutable="yes">
        <type>int</type>
        <definition>int vrv::BoundingBox::m_cachedDrawingX</definition>
        <argsstring></argsstring>
        <name>m_cachedDrawingX</name>
        <briefdescription>
<para>The cached version of the drawingX and drawingY values. </para>
        </briefdescription>
        <detaileddescription>
<para>These are reset by ResetCachedDrawingX/Y methods when necessary. Mutable because to be updated in GetDrawingX/Y const. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="300" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_bounding_box_1a548baf7b854ef877313302670da5d0b8" prot="protected" static="no" mutable="yes">
        <type>int</type>
        <definition>int vrv::BoundingBox::m_cachedDrawingY</definition>
        <argsstring></argsstring>
        <name>m_cachedDrawingY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="301" column="17" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="classvrv_1_1_bounding_box_1afad8fd1b368422b83377b7e86bb7845b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::BoundingBox::m_contentBB_x1</definition>
        <argsstring></argsstring>
        <name>m_contentBB_x1</name>
        <briefdescription>
<para>Bounding box positions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="308" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_bounding_box_1a00714a13d3cd4ffb493f8c320ce6fd3e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::BoundingBox::m_contentBB_y1</definition>
        <argsstring></argsstring>
        <name>m_contentBB_y1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="308" column="24" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_bounding_box_1a73f23ffa87a345aae81113c579d9bd02" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::BoundingBox::m_contentBB_x2</definition>
        <argsstring></argsstring>
        <name>m_contentBB_x2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="308" column="39" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_bounding_box_1a688cfa0cc7785d7553a15627742a49d6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::BoundingBox::m_contentBB_y2</definition>
        <argsstring></argsstring>
        <name>m_contentBB_y2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="308" column="54" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_bounding_box_1a93a23ce019cf86062c8c7697b48224b0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::BoundingBox::m_selfBB_x1</definition>
        <argsstring></argsstring>
        <name>m_selfBB_x1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="309" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_bounding_box_1af55ca7bfd4d71465a325b4b7b1789ffd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::BoundingBox::m_selfBB_y1</definition>
        <argsstring></argsstring>
        <name>m_selfBB_y1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="309" column="21" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_bounding_box_1a8a2b05a6cf734ba05669a57ec6b2fe66" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::BoundingBox::m_selfBB_x2</definition>
        <argsstring></argsstring>
        <name>m_selfBB_x2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="309" column="33" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_bounding_box_1a981739fd2685aa7f711069c765e569eb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::BoundingBox::m_selfBB_y2</definition>
        <argsstring></argsstring>
        <name>m_selfBB_y2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="309" column="45" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvrv_1_1_bounding_box_1ade67c8adc988e0cb865448794e21b791" prot="private" static="no" mutable="no">
        <type>wchar_t</type>
        <definition>wchar_t vrv::BoundingBox::m_smuflGlyph</definition>
        <argsstring></argsstring>
        <name>m_smuflGlyph</name>
        <briefdescription>
<para>The SMuFL glyph when anchor bounding box calculation is desired. </para>
        </briefdescription>
        <detaileddescription>
<para>Currently only one glyph is supported. Eventually, we could have start / end glyph </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="316" column="13" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvrv_1_1_bounding_box_1acc76fbce37af69f0db7aa133ca719426" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vrv::BoundingBox::m_smuflGlyphFontSize</definition>
        <argsstring></argsstring>
        <name>m_smuflGlyphFontSize</name>
        <briefdescription>
<para>The font size for the smufl glyph used for calculating the bounding box rectangles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="321" column="9" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1ae79b9324168608f36cb71c8ca4174220" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vrv::BoundingBox::ResetBoundingBox</definition>
        <argsstring>()</argsstring>
        <name>ResetBoundingBox</name>
        <briefdescription>
<para>Reset the bounding box values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="77" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a52ac837dc797c5f292c98ddb3f43a098" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::Encloses</definition>
        <argsstring>(const Point point) const</argsstring>
        <name>Encloses</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Return true if the bounding box encloses the point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="169" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a29d29a9aaa350b53bcf58dc32978b7f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::Intersects</definition>
        <argsstring>(const FloatingCurvePositioner *curve, Accessor type, int margin=0) const</argsstring>
        <name>Intersects</name>
        <param>
          <type>const <ref refid="classvrv_1_1_floating_curve_positioner" kindref="compound">FloatingCurvePositioner</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>Accessor</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return intersection between the bounding box and the curve represented by the <ref refid="classvrv_1_1_floating_positioner" kindref="compound">FloatingPositioner</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classvrv_1_1_object" kindref="compound">Object</ref> pointed by the <ref refid="classvrv_1_1_floating_positioner" kindref="compound">FloatingPositioner</ref> is expected to be a SLUR or a TIE </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="175" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a89d4ebda89785d624cb43d1c45dbbbb2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::Intersects</definition>
        <argsstring>(const BeamDrawingInterface *beamInterface, Accessor type, int margin=0) const</argsstring>
        <name>Intersects</name>
        <param>
          <type>const <ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref> *</type>
          <declname>beamInterface</declname>
        </param>
        <param>
          <type>Accessor</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return intersection between the bounding box and the beam represented by the <ref refid="classvrv_1_1_beam_drawing_interface" kindref="compound">BeamDrawingInterface</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>A segment of the beam that matches horizontal position of the bounding box is taken to find whether there is intersection. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="182" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a3901a5e4a728b8f3450cce0e30f4bd29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; double, int &gt;</type>
        <definition>static std::pair&lt;double, int&gt; vrv::BoundingBox::ApproximateBezierExtrema</definition>
        <argsstring>(const Point bezier[4], bool isMaxExtrema, int approximationSteps=BEZIER_APPROXIMATION)</argsstring>
        <name>ApproximateBezierExtrema</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>bezier</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>isMaxExtrema</declname>
        </param>
        <param>
          <type>int</type>
          <declname>approximationSteps</declname>
          <defval>BEZIER_APPROXIMATION</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="188" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a8008673c300accccc6dd7f10a2f12d45" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double vrv::BoundingBox::CalcDistance</definition>
        <argsstring>(const Point &amp;p1, const Point &amp;p2)</argsstring>
        <name>CalcDistance</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Calculate the euclidean distance between two points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="194" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1aa466757865d8f747cbaaf232e3051177" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool vrv::BoundingBox::ArePointsClose</definition>
        <argsstring>(const Point &amp;p1, const Point &amp;p2, int margin)</argsstring>
        <name>ArePointsClose</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the distance between the points does not exceed margin </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="199" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a98f3d30610a0063965fcac7ec265ef27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double vrv::BoundingBox::CalcSlope</definition>
        <argsstring>(const Point &amp;p1, const Point &amp;p2)</argsstring>
        <name>CalcSlope</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Calculate the slope represented by two points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="204" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a80465f84c7190f8cb0a9765693376be2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
        <definition>static Point vrv::BoundingBox::CalcPositionAfterRotation</definition>
        <argsstring>(Point point, float alpha, Point center)</argsstring>
        <name>CalcPositionAfterRotation</name>
        <param>
          <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>point</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>center</declname>
        </param>
        <briefdescription>
<para>Calculate the position of a point after a rotation of alpha (in radian) around the center. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="209" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1af1fdd065b198aafe35dcc7e5a35477ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double vrv::BoundingBox::CalcBezierParamAtPosition</definition>
        <argsstring>(const Point bezier[4], int x)</argsstring>
        <name>CalcBezierParamAtPosition</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>bezier</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Calculate the t parameter of a bezier at position x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="214" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a91eb3e2ee9b00bc764283fe1710e199b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int vrv::BoundingBox::CalcBezierAtPosition</definition>
        <argsstring>(const Point bezier[4], int x)</argsstring>
        <name>CalcBezierAtPosition</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>bezier</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Calculate the y position of a bezier at position x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="219" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1af5401bb6040fe859bf6b7dc09c3c35b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vrv::BoundingBox::CalcLinearInterpolation</definition>
        <argsstring>(Point &amp;dest, const Point &amp;a, const Point &amp;b, double t)</argsstring>
        <name>CalcLinearInterpolation</name>
        <param>
          <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Calculate linear interpolation between two points at time t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="224" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1acf2951ebea74c27b024916a4c96480a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
        <definition>static Point vrv::BoundingBox::CalcPointAtBezier</definition>
        <argsstring>(const Point bezier[4], double t)</argsstring>
        <name>CalcPointAtBezier</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>bezier</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Calculate point (X,Y) coordinaties on the bezier curve. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="229" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a3dbe5a481e20ab4d0d9fdd47708d1c2f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double vrv::BoundingBox::GetBezierThicknessCoefficient</definition>
        <argsstring>(const Point bezier[4], int currentThickness, int penWidth)</argsstring>
        <name>GetBezierThicknessCoefficient</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>bezier</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>int</type>
          <declname>currentThickness</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
        </param>
        <briefdescription>
<para>Calculate thickness coefficient to be applient for bezier curve to fit MEI units thickness. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="234" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1ac09f7239af89a7e19ca235761589e150" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
        <definition>static Point vrv::BoundingBox::CalcDeCasteljau</definition>
        <argsstring>(const Point bezier[4], double t)</argsstring>
        <name>CalcDeCasteljau</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>bezier</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Calculate the point bezier point position for a t between 0.0 and 1.0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="239" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a8fdd811aefcb373533b9cc2795aa04dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vrv::BoundingBox::CalcThickBezier</definition>
        <argsstring>(const Point bezier[4], int thickness, Point topBezier[4], Point bottomBezier[4])</argsstring>
        <name>CalcThickBezier</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>bezier</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>int</type>
          <declname>thickness</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>topBezier</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>bottomBezier</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Calculate the position of the bezier above and below for a thick bezier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="244" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1ae9a22cf5d306abb22ff5f557e81bd9af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vrv::BoundingBox::ApproximateBezierBoundingBox</definition>
        <argsstring>(const Point bezier[4], Point &amp;pos, int &amp;width, int &amp;height, int &amp;minYPos, int &amp;maxYPos)</argsstring>
        <name>ApproximateBezierBoundingBox</name>
        <param>
          <type>const <ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>bezier</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>minYPos</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>maxYPos</declname>
        </param>
        <briefdescription>
<para>Approximate the bounding box of a bezier taking into accound the height and the width. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="249" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1ab4d1764142c6881678dbfcaee124e38f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::set&lt; double &gt;</type>
        <definition>static std::set&lt;double&gt; vrv::BoundingBox::SolveCubicPolynomial</definition>
        <argsstring>(double a, double b, double c, double d)</argsstring>
        <name>SolveCubicPolynomial</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Solve the cubic equation ax^3 + bx^2 + cx + d = 0 Returns up to three real roots. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="266" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1acf124135c576c2c6e6bcd24b7e6a274c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrv::BoundingBox::GetRectangles</definition>
        <argsstring>(const SMuFLGlyphAnchor &amp;anchor1, const SMuFLGlyphAnchor &amp;anchor2, Point rect[3][2], const Resources &amp;resources) const</argsstring>
        <name>GetRectangles</name>
        <param>
          <type>const SMuFLGlyphAnchor &amp;</type>
          <declname>anchor1</declname>
        </param>
        <param>
          <type>const SMuFLGlyphAnchor &amp;</type>
          <declname>anchor2</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>rect</declname>
          <array>[3][2]</array>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_resources" kindref="compound">Resources</ref> &amp;</type>
          <declname>resources</declname>
        </param>
        <briefdescription>
<para>Get the rectangles covering the inside of a bounding box given two anchors (e.g., NW and NE, or NE and SE) Looks at the anchors for the smufl glpyh (if any) and return the number of rectangles needed to represent the bounding box. </para>
        </briefdescription>
        <detaileddescription>
<para>Return 1 with no smufl glyph or no anchor, 2 with on anchor point, and 3 with 2 anchor points. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="275" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a120b94171640aa263aac82a414268b9a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::GetGlyph2PointRectangles</definition>
        <argsstring>(const SMuFLGlyphAnchor &amp;anchor1, const SMuFLGlyphAnchor &amp;anchor2, const Glyph *glyph1, Point rect[3][2]) const</argsstring>
        <name>GetGlyph2PointRectangles</name>
        <param>
          <type>const SMuFLGlyphAnchor &amp;</type>
          <declname>anchor1</declname>
        </param>
        <param>
          <type>const SMuFLGlyphAnchor &amp;</type>
          <declname>anchor2</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_glyph" kindref="compound">Glyph</ref> *</type>
          <declname>glyph1</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>rect</declname>
          <array>[3][2]</array>
        </param>
        <briefdescription>
<para>Calculate the rectangles with 2 anchor points. </para>
        </briefdescription>
        <detaileddescription>
<para>Return false (and one single rectangle) when anchor points are out of the boundaries. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="282" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classvrv_1_1_bounding_box_1a7eda9aaf3ac0b6e4120c71f8293f6327" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vrv::BoundingBox::GetGlyph1PointRectangles</definition>
        <argsstring>(const SMuFLGlyphAnchor &amp;anchor, const Glyph *glyph, Point rect[2][2]) const</argsstring>
        <name>GetGlyph1PointRectangles</name>
        <param>
          <type>const SMuFLGlyphAnchor &amp;</type>
          <declname>anchor</declname>
        </param>
        <param>
          <type>const <ref refid="classvrv_1_1_glyph" kindref="compound">Glyph</ref> *</type>
          <declname>glyph</declname>
        </param>
        <param>
          <type><ref refid="classvrv_1_1_point" kindref="compound">Point</ref></type>
          <declname>rect</declname>
          <array>[2][2]</array>
        </param>
        <briefdescription>
<para>Calculate the rectangles with 1 anchor point. </para>
        </briefdescription>
        <detaileddescription>
<para>Return false (and one single rectangle) when anchor points are out of the boundaries. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="289" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents a basic object in the layout domain. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="75">
        <label>vrv::LayerElement</label>
        <link refid="classvrv_1_1_layer_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>vrv::Doc</label>
        <link refid="classvrv_1_1_doc"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>vrv::Corr</label>
        <link refid="classvrv_1_1_corr"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="122">
        <label>vrv::PageElement</label>
        <link refid="classvrv_1_1_page_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>vrv::Phrase</label>
        <link refid="classvrv_1_1_phrase"/>
        <childnode refid="52" relation="public-inheritance">
        </childnode>
      </node>
      <node id="68">
        <label>vrv::GraceAligner</label>
        <link refid="classvrv_1_1_grace_aligner"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>vrv::EditorialElement</label>
        <link refid="classvrv_1_1_editorial_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>vrv::Pedal</label>
        <link refid="classvrv_1_1_pedal"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="105">
        <label>vrv::Plica</label>
        <link refid="classvrv_1_1_plica"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="85">
        <label>vrv::Dot</label>
        <link refid="classvrv_1_1_dot"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="140">
        <label>vrv::System</label>
        <link refid="classvrv_1_1_system"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="132">
        <label>vrv::ScoreDefElement</label>
        <link refid="classvrv_1_1_score_def_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>vrv::Tempo</label>
        <link refid="classvrv_1_1_tempo"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="83">
        <label>vrv::Clef</label>
        <link refid="classvrv_1_1_clef"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>vrv::Octave</label>
        <link refid="classvrv_1_1_octave"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="87">
        <label>vrv::Flag</label>
        <link refid="classvrv_1_1_flag"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>vrv::Dir</label>
        <link refid="classvrv_1_1_dir"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>vrv::FloatingCurvePositioner</label>
        <link refid="classvrv_1_1_floating_curve_positioner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="74">
        <label>vrv::LayerDef</label>
        <link refid="classvrv_1_1_layer_def"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="116">
        <label>vrv::TupletBracket</label>
        <link refid="classvrv_1_1_tuplet_bracket"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>vrv::FloatingObject</label>
        <link refid="classvrv_1_1_floating_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="96">
        <label>vrv::MRest</label>
        <link refid="classvrv_1_1_m_rest"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="119">
        <label>vrv::Measure</label>
        <link refid="classvrv_1_1_measure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>vrv::Course</label>
        <link refid="classvrv_1_1_course"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="141">
        <label>vrv::SystemAligner</label>
        <link refid="classvrv_1_1_system_aligner"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>vrv::Expan</label>
        <link refid="classvrv_1_1_expan"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="144">
        <label>vrv::Fig</label>
        <link refid="classvrv_1_1_fig"/>
        <childnode refid="142" relation="public-inheritance">
        </childnode>
      </node>
      <node id="135">
        <label>vrv::Staff</label>
        <link refid="classvrv_1_1_staff"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="147">
        <label>vrv::Rend</label>
        <link refid="classvrv_1_1_rend"/>
        <childnode refid="142" relation="public-inheritance">
        </childnode>
      </node>
      <node id="81">
        <label>vrv::BTrem</label>
        <link refid="classvrv_1_1_b_trem"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>vrv::Harm</label>
        <link refid="classvrv_1_1_harm"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="114">
        <label>vrv::TimestampAttr</label>
        <link refid="classvrv_1_1_timestamp_attr"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="125">
        <label>vrv::Score</label>
        <link refid="classvrv_1_1_score"/>
        <childnode refid="122" relation="public-inheritance">
        </childnode>
      </node>
      <node id="84">
        <label>vrv::Custos</label>
        <link refid="classvrv_1_1_custos"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>vrv::HorizontalAligner</label>
        <link refid="classvrv_1_1_horizontal_aligner"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>vrv::Choice</label>
        <link refid="classvrv_1_1_choice"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="89">
        <label>vrv::GraceGrp</label>
        <link refid="classvrv_1_1_grace_grp"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="151">
        <label>vrv::Zone</label>
        <link refid="classvrv_1_1_zone"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>vrv::BoundingBox</label>
        <link refid="classvrv_1_1_bounding_box"/>
      </node>
      <node id="64">
        <label>vrv::Section</label>
        <link refid="classvrv_1_1_section"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>vrv::Gliss</label>
        <link refid="classvrv_1_1_gliss"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="118">
        <label>vrv::Verse</label>
        <link refid="classvrv_1_1_verse"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="112">
        <label>vrv::TabDurSym</label>
        <link refid="classvrv_1_1_tab_dur_sym"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="92">
        <label>vrv::KeySig</label>
        <link refid="classvrv_1_1_key_sig"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="142">
        <label>vrv::TextElement</label>
        <link refid="classvrv_1_1_text_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>vrv::Turn</label>
        <link refid="classvrv_1_1_turn"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="66">
        <label>vrv::GrpSym</label>
        <link refid="classvrv_1_1_grp_sym"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="128">
        <label>vrv::PgFoot</label>
        <link refid="classvrv_1_1_pg_foot"/>
        <childnode refid="127" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>vrv::App</label>
        <link refid="classvrv_1_1_app"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="61">
        <label>vrv::Expansion</label>
        <link refid="classvrv_1_1_expansion"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>vrv::Ref</label>
        <link refid="classvrv_1_1_ref"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>vrv::Reg</label>
        <link refid="classvrv_1_1_reg"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>vrv::Reh</label>
        <link refid="classvrv_1_1_reh"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="95">
        <label>vrv::MeterSig</label>
        <link refid="classvrv_1_1_meter_sig"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>vrv::Fermata</label>
        <link refid="classvrv_1_1_fermata"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="90">
        <label>vrv::HalfmRpt</label>
        <link refid="classvrv_1_1_halfm_rpt"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>vrv::Rdg</label>
        <link refid="classvrv_1_1_rdg"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="129">
        <label>vrv::PgFoot2</label>
        <link refid="classvrv_1_1_pg_foot2"/>
        <childnode refid="127" relation="public-inheritance">
        </childnode>
      </node>
      <node id="108">
        <label>vrv::Space</label>
        <link refid="classvrv_1_1_space"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="93">
        <label>vrv::Ligature</label>
        <link refid="classvrv_1_1_ligature"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vrv::FloatingPositioner</label>
        <link refid="classvrv_1_1_floating_positioner"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>vrv::AnchoredText</label>
        <link refid="classvrv_1_1_anchored_text"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="117">
        <label>vrv::TupletNum</label>
        <link refid="classvrv_1_1_tuplet_num"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>vrv::Breath</label>
        <link refid="classvrv_1_1_breath"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="131">
        <label>vrv::PgHead2</label>
        <link refid="classvrv_1_1_pg_head2"/>
        <childnode refid="127" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>vrv::Mordent</label>
        <link refid="classvrv_1_1_mordent"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="104">
        <label>vrv::Note</label>
        <link refid="classvrv_1_1_note"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="126">
        <label>vrv::Pages</label>
        <link refid="classvrv_1_1_pages"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>vrv::Label</label>
        <link refid="classvrv_1_1_label"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>vrv::Layer</label>
        <link refid="classvrv_1_1_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>vrv::Trill</label>
        <link refid="classvrv_1_1_trill"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="148">
        <label>vrv::Text</label>
        <link refid="classvrv_1_1_text"/>
        <childnode refid="142" relation="public-inheritance">
        </childnode>
      </node>
      <node id="72">
        <label>vrv::LabelAbbr</label>
        <link refid="classvrv_1_1_label_abbr"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>vrv::Add</label>
        <link refid="classvrv_1_1_add"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78">
        <label>vrv::BarLine</label>
        <link refid="classvrv_1_1_bar_line"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="106">
        <label>vrv::Proport</label>
        <link refid="classvrv_1_1_proport"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>vrv::Fb</label>
        <link refid="classvrv_1_1_fb"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>vrv::Caesura</label>
        <link refid="classvrv_1_1_caesura"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>vrv::Damage</label>
        <link refid="classvrv_1_1_damage"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="107">
        <label>vrv::Rest</label>
        <link refid="classvrv_1_1_rest"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="138">
        <label>vrv::Surface</label>
        <link refid="classvrv_1_1_surface"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="143">
        <label>vrv::F</label>
        <link refid="classvrv_1_1_f"/>
        <childnode refid="142" relation="public-inheritance">
        </childnode>
      </node>
      <node id="98">
        <label>vrv::MRpt2</label>
        <link refid="classvrv_1_1_m_rpt2"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="136">
        <label>vrv::StaffAlignment</label>
        <link refid="classvrv_1_1_staff_alignment"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>vrv::Subst</label>
        <link refid="classvrv_1_1_subst"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>vrv::Ending</label>
        <link refid="classvrv_1_1_ending"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
      </node>
      <node id="130">
        <label>vrv::PgHead</label>
        <link refid="classvrv_1_1_pg_head"/>
        <childnode refid="127" relation="public-inheritance">
        </childnode>
      </node>
      <node id="149">
        <label>vrv::TimestampAligner</label>
        <link refid="classvrv_1_1_timestamp_aligner"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="62">
        <label>vrv::Pb</label>
        <link refid="classvrv_1_1_pb"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
      </node>
      <node id="150">
        <label>vrv::Tuning</label>
        <link refid="classvrv_1_1_tuning"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="124">
        <label>vrv::PageMilestoneEnd</label>
        <link refid="classvrv_1_1_page_milestone_end"/>
        <childnode refid="122" relation="public-inheritance">
        </childnode>
      </node>
      <node id="94">
        <label>vrv::Mensur</label>
        <link refid="classvrv_1_1_mensur"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="120">
        <label>vrv::MeterSigGrp</label>
        <link refid="classvrv_1_1_meter_sig_grp"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="103">
        <label>vrv::Neume</label>
        <link refid="classvrv_1_1_neume"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="88">
        <label>vrv::FTrem</label>
        <link refid="classvrv_1_1_f_trem"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="102">
        <label>vrv::Nc</label>
        <link refid="classvrv_1_1_nc"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="137">
        <label>vrv::StaffGrp</label>
        <link refid="classvrv_1_1_staff_grp"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>vrv::Lv</label>
        <link refid="classvrv_1_1_lv"/>
        <childnode refid="55" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>vrv::Abbr</label>
        <link refid="classvrv_1_1_abbr"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="145">
        <label>vrv::Lb</label>
        <link refid="classvrv_1_1_lb"/>
        <childnode refid="142" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>vrv::Unclear</label>
        <link refid="classvrv_1_1_unclear"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>vrv::Dynam</label>
        <link refid="classvrv_1_1_dynam"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="100">
        <label>vrv::MultiRest</label>
        <link refid="classvrv_1_1_multi_rest"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="134">
        <label>vrv::StaffDef</label>
        <link refid="classvrv_1_1_staff_def"/>
        <childnode refid="132" relation="public-inheritance">
        </childnode>
      </node>
      <node id="113">
        <label>vrv::TabGrp</label>
        <link refid="classvrv_1_1_tab_grp"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="91">
        <label>vrv::KeyAccid</label>
        <link refid="classvrv_1_1_key_accid"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="123">
        <label>vrv::Mdiv</label>
        <link refid="classvrv_1_1_mdiv"/>
        <childnode refid="122" relation="public-inheritance">
        </childnode>
      </node>
      <node id="139">
        <label>vrv::Svg</label>
        <link refid="classvrv_1_1_svg"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>vrv::Orig</label>
        <link refid="classvrv_1_1_orig"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="111">
        <label>vrv::Syllable</label>
        <link refid="classvrv_1_1_syllable"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>vrv::Tie</label>
        <link refid="classvrv_1_1_tie"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="110">
        <label>vrv::Syl</label>
        <link refid="classvrv_1_1_syl"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>vrv::Del</label>
        <link refid="classvrv_1_1_del"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="133">
        <label>vrv::ScoreDef</label>
        <link refid="classvrv_1_1_score_def"/>
        <childnode refid="132" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>vrv::Facsimile</label>
        <link refid="classvrv_1_1_facsimile"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>vrv::Restore</label>
        <link refid="classvrv_1_1_restore"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>vrv::AlignmentReference</label>
        <link refid="classvrv_1_1_alignment_reference"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>vrv::Sb</label>
        <link refid="classvrv_1_1_sb"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>vrv::Lem</label>
        <link refid="classvrv_1_1_lem"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>vrv::Alignment</label>
        <link refid="classvrv_1_1_alignment"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>vrv::MNum</label>
        <link refid="classvrv_1_1_m_num"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>vrv::MeasureAligner</label>
        <link refid="classvrv_1_1_measure_aligner"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>vrv::SystemElement</label>
        <link refid="classvrv_1_1_system_element"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>vrv::PitchInflection</label>
        <link refid="classvrv_1_1_pitch_inflection"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>vrv::BeamSpan</label>
        <link refid="classvrv_1_1_beam_span"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="99">
        <label>vrv::MSpace</label>
        <link refid="classvrv_1_1_m_space"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>vrv::Slur</label>
        <link refid="classvrv_1_1_slur"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="97">
        <label>vrv::MRpt</label>
        <link refid="classvrv_1_1_m_rpt"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="70">
        <label>vrv::InstrDef</label>
        <link refid="classvrv_1_1_instr_def"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="101">
        <label>vrv::MultiRpt</label>
        <link refid="classvrv_1_1_multi_rpt"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>vrv::ControlElement</label>
        <link refid="classvrv_1_1_control_element"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>vrv::Object</label>
        <link refid="classvrv_1_1_object"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="76">
        <label>vrv::Accid</label>
        <link refid="classvrv_1_1_accid"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>vrv::Annot</label>
        <link refid="classvrv_1_1_annot"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>vrv::Arpeg</label>
        <link refid="classvrv_1_1_arpeg"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>vrv::Artic</label>
        <link refid="classvrv_1_1_artic"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="109">
        <label>vrv::Stem</label>
        <link refid="classvrv_1_1_stem"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="82">
        <label>vrv::Chord</label>
        <link refid="classvrv_1_1_chord"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>vrv::Supplied</label>
        <link refid="classvrv_1_1_supplied"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="115">
        <label>vrv::Tuplet</label>
        <link refid="classvrv_1_1_tuplet"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="121">
        <label>vrv::Page</label>
        <link refid="classvrv_1_1_page"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>vrv::Hairpin</label>
        <link refid="classvrv_1_1_hairpin"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>vrv::BracketSpan</label>
        <link refid="classvrv_1_1_bracket_span"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>vrv::Fing</label>
        <link refid="classvrv_1_1_fing"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>vrv::SystemMilestoneEnd</label>
        <link refid="classvrv_1_1_system_milestone_end"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>vrv::Sic</label>
        <link refid="classvrv_1_1_sic"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="80">
        <label>vrv::BeatRpt</label>
        <link refid="classvrv_1_1_beat_rpt"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="127">
        <label>vrv::RunningElement</label>
        <link refid="classvrv_1_1_running_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="79">
        <label>vrv::Beam</label>
        <link refid="classvrv_1_1_beam"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>vrv::Dots</label>
        <link refid="classvrv_1_1_dots"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="146">
        <label>vrv::Num</label>
        <link refid="classvrv_1_1_num"/>
        <childnode refid="142" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" line="32" column="18" bodyfile="/home/runner/work/verovio/verovio/include/vrv/boundingbox.h" bodystart="32" bodyend="322"/>
    <listofallmembers>
      <member refid="classvrv_1_1_bounding_box_1ae9a22cf5d306abb22ff5f557e81bd9af" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>ApproximateBezierBoundingBox</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3901a5e4a728b8f3450cce0e30f4bd29" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>ApproximateBezierExtrema</name></member>
      <member refid="classvrv_1_1_bounding_box_1aa466757865d8f747cbaaf232e3051177" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>ArePointsClose</name></member>
      <member refid="classvrv_1_1_bounding_box_1a5601855899250709d9fa94f3c280aa72" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>BoundingBox</name></member>
      <member refid="classvrv_1_1_bounding_box_1a91eb3e2ee9b00bc764283fe1710e199b" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>CalcBezierAtPosition</name></member>
      <member refid="classvrv_1_1_bounding_box_1af1fdd065b198aafe35dcc7e5a35477ee" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>CalcBezierParamAtPosition</name></member>
      <member refid="classvrv_1_1_bounding_box_1ac09f7239af89a7e19ca235761589e150" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>CalcDeCasteljau</name></member>
      <member refid="classvrv_1_1_bounding_box_1a8008673c300accccc6dd7f10a2f12d45" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>CalcDistance</name></member>
      <member refid="classvrv_1_1_bounding_box_1af5401bb6040fe859bf6b7dc09c3c35b8" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>CalcLinearInterpolation</name></member>
      <member refid="classvrv_1_1_bounding_box_1acf2951ebea74c27b024916a4c96480a5" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>CalcPointAtBezier</name></member>
      <member refid="classvrv_1_1_bounding_box_1a80465f84c7190f8cb0a9765693376be2" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>CalcPositionAfterRotation</name></member>
      <member refid="classvrv_1_1_bounding_box_1a98f3d30610a0063965fcac7ec265ef27" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>CalcSlope</name></member>
      <member refid="classvrv_1_1_bounding_box_1a8fdd811aefcb373533b9cc2795aa04dd" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>CalcThickBezier</name></member>
      <member refid="classvrv_1_1_bounding_box_1a52ac837dc797c5f292c98ddb3f43a098" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>Encloses</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3dbe5a481e20ab4d0d9fdd47708d1c2f" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetBezierThicknessCoefficient</name></member>
      <member refid="classvrv_1_1_bounding_box_1a91a7bb36d11f909e84caab997fb49c0c" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetBottomBy</name></member>
      <member refid="classvrv_1_1_bounding_box_1aa3fc5bcc7d25b6e975fad50b11edd781" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetBoundingBoxGlyph</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2b025880f04cefa1cb37b7e6f8bfb8f1" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetBoundingBoxGlyphFontSize</name></member>
      <member refid="classvrv_1_1_bounding_box_1ad8f7fed05b5a690cbcce0c3929503eb0" prot="public" virt="pure-virtual"><scope>vrv::BoundingBox</scope><name>GetClassId</name></member>
      <member refid="classvrv_1_1_bounding_box_1a74fec7caf937bc6892cd0de8c1f29355" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetContentBottom</name></member>
      <member refid="classvrv_1_1_bounding_box_1a9a33f5750af51cfb292ff2a553744e2d" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetContentLeft</name></member>
      <member refid="classvrv_1_1_bounding_box_1a755302fda960358f076a3175783a5d78" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetContentRight</name></member>
      <member refid="classvrv_1_1_bounding_box_1a8343f2b84e7bb194cb9377c304703bba" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetContentTop</name></member>
      <member refid="classvrv_1_1_bounding_box_1ac2b3dff1054fee47d8d22c2183c4c346" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetContentX1</name></member>
      <member refid="classvrv_1_1_bounding_box_1aca490fbb8d4d5c0179e05f790e0e2951" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetContentX2</name></member>
      <member refid="classvrv_1_1_bounding_box_1afb681918250b5eceeab06a8752c794a0" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetContentY1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7d8f116f3c72430801e43fc9f1fb1e95" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetContentY2</name></member>
      <member refid="classvrv_1_1_bounding_box_1a26bfbd087c59e094696d2c0ff1fd89ea" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetCutOutBottom</name></member>
      <member refid="classvrv_1_1_bounding_box_1a341aeebe2fdd010ebf72aaf1c8760df3" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetCutOutLeft</name></member>
      <member refid="classvrv_1_1_bounding_box_1abc3f8eacafe2bfb2becd732507f259ae" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetCutOutRight</name></member>
      <member refid="classvrv_1_1_bounding_box_1a81256810cab77e0d9fedf64fa858690f" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetCutOutTop</name></member>
      <member refid="classvrv_1_1_bounding_box_1a97b2b5920eb6e08b8bdf8d791c853dce" prot="public" virt="pure-virtual"><scope>vrv::BoundingBox</scope><name>GetDrawingX</name></member>
      <member refid="classvrv_1_1_bounding_box_1a94c585ec874e040e3e6e39c5d8dddc5c" prot="public" virt="pure-virtual"><scope>vrv::BoundingBox</scope><name>GetDrawingY</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7eda9aaf3ac0b6e4120c71f8293f6327" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetGlyph1PointRectangles</name></member>
      <member refid="classvrv_1_1_bounding_box_1a120b94171640aa263aac82a414268b9a" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetGlyph2PointRectangles</name></member>
      <member refid="classvrv_1_1_bounding_box_1af329372204a34520779e6b0d0596e8b9" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetLeftBy</name></member>
      <member refid="classvrv_1_1_bounding_box_1acf124135c576c2c6e6bcd24b7e6a274c" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetRectangles</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2fe9d4e0cef41c270fe6683e5fbd8223" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetRightBy</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7e55bc05f8dc9b3ff7768fe48c791d83" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetSelfBottom</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2fb7e4b83e390c3cd436e3a73ddfa269" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetSelfLeft</name></member>
      <member refid="classvrv_1_1_bounding_box_1aaae2c8d3d80e7203585052862288f2d5" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetSelfRight</name></member>
      <member refid="classvrv_1_1_bounding_box_1a2e094936f23e6b9c044ccd28a3aa0681" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetSelfTop</name></member>
      <member refid="classvrv_1_1_bounding_box_1a588e6d63bc9e9d149dc6fdd784886a78" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetSelfX1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a025b101dd81de0a3802ba5ac2a86f9c5" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetSelfX2</name></member>
      <member refid="classvrv_1_1_bounding_box_1ad958652328dd6762612727f064f56b3c" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetSelfY1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7ba0ddf13040f3747a7421232c9bc21d" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetSelfY2</name></member>
      <member refid="classvrv_1_1_bounding_box_1a9dae1c4940695c403ba67841512f94f3" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetTopBy</name></member>
      <member refid="classvrv_1_1_bounding_box_1a6f1d1de5ac01ce1fe4cf43ed16b47e11" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetX1By</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3a9666c33d5a4a7d01f4b159c128d6c5" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetX2By</name></member>
      <member refid="classvrv_1_1_bounding_box_1ad906e8632b28b1be81fa374ad2b5292e" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetY1By</name></member>
      <member refid="classvrv_1_1_bounding_box_1a242e2a41a61fb347b526a08fef162cdf" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>GetY2By</name></member>
      <member refid="classvrv_1_1_bounding_box_1a6cac2a9e7c863969d8e856807936574f" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>HasContentBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a3bde41712d93b9badf88b35ac1974503" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>HasContentHorizontalBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1abe8bb676a5c670242888d9034daa5a22" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>HasContentVerticalBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a1dfd7207c5f8431bcb56c88b5c469992" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>HasEmptyBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a72744aa255a0d861577275366e711729" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>HasSelfBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a33e2d9c410be02f476ca19e0f063284c" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>HasSelfHorizontalBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1a20afc38171ff613053a28a3530a66a05" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>HasSelfVerticalBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1aee28c8f38335a02d395f132eac3174a2" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>HorizontalContentOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a0fdfa000c449d4c9b1de755dd1efff55" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>HorizontalLeftOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a7265ddc2845db5bc543200b037048a2e" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>HorizontalRightOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a363e14e29dcb72d6539a832921c538f9" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>HorizontalSelfOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a29d29a9aaa350b53bcf58dc32978b7f8" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>Intersects</name></member>
      <member refid="classvrv_1_1_bounding_box_1a89d4ebda89785d624cb43d1c45dbbbb2" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>Intersects</name></member>
      <member refid="classvrv_1_1_bounding_box_1af366b55a8e449a12d689acd9d35ae782" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>Is</name></member>
      <member refid="classvrv_1_1_bounding_box_1aaeb23e9d3064f863ef3857efef570a8f" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>Is</name></member>
      <member refid="classvrv_1_1_bounding_box_1a4961ebaf8f99abe31ee894345cd84a16" prot="protected" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>m_cachedDrawingX</name></member>
      <member refid="classvrv_1_1_bounding_box_1a548baf7b854ef877313302670da5d0b8" prot="protected" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>m_cachedDrawingY</name></member>
      <member refid="classvrv_1_1_bounding_box_1afad8fd1b368422b83377b7e86bb7845b" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>m_contentBB_x1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a73f23ffa87a345aae81113c579d9bd02" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>m_contentBB_x2</name></member>
      <member refid="classvrv_1_1_bounding_box_1a00714a13d3cd4ffb493f8c320ce6fd3e" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>m_contentBB_y1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a688cfa0cc7785d7553a15627742a49d6" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>m_contentBB_y2</name></member>
      <member refid="classvrv_1_1_bounding_box_1a93a23ce019cf86062c8c7697b48224b0" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>m_selfBB_x1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a8a2b05a6cf734ba05669a57ec6b2fe66" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>m_selfBB_x2</name></member>
      <member refid="classvrv_1_1_bounding_box_1af55ca7bfd4d71465a325b4b7b1789ffd" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>m_selfBB_y1</name></member>
      <member refid="classvrv_1_1_bounding_box_1a981739fd2685aa7f711069c765e569eb" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>m_selfBB_y2</name></member>
      <member refid="classvrv_1_1_bounding_box_1ade67c8adc988e0cb865448794e21b791" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>m_smuflGlyph</name></member>
      <member refid="classvrv_1_1_bounding_box_1acc76fbce37af69f0db7aa133ca719426" prot="private" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>m_smuflGlyphFontSize</name></member>
      <member refid="classvrv_1_1_bounding_box_1a74c28d831f2e14aec44a848a961f8b42" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>RectBottomOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a414f972e6f1e4231d61acdd7329eb414" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>RectLeftOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a4802cf9706608398b887afd2ad3e1188" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>RectRightOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae7003f6708e916b7640d4dda5a8a18ef" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>RectTopOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1ae79b9324168608f36cb71c8ca4174220" prot="public" virt="virtual"><scope>vrv::BoundingBox</scope><name>ResetBoundingBox</name></member>
      <member refid="classvrv_1_1_bounding_box_1a5b37b259a20df6f83ff94908c4d9fbea" prot="public" virt="pure-virtual"><scope>vrv::BoundingBox</scope><name>ResetCachedDrawingX</name></member>
      <member refid="classvrv_1_1_bounding_box_1a928808d6ff900985afdfe1856490d505" prot="public" virt="pure-virtual"><scope>vrv::BoundingBox</scope><name>ResetCachedDrawingY</name></member>
      <member refid="classvrv_1_1_bounding_box_1abc4feb5675ff672b2e3a94b4a65403b5" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>SetBoundingBoxGlyph</name></member>
      <member refid="classvrv_1_1_bounding_box_1ade8f7ad2283b156a2c7934c4055bd8bf" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>SetEmptyBB</name></member>
      <member refid="classvrv_1_1_bounding_box_1ab4d1764142c6881678dbfcaee124e38f" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>SolveCubicPolynomial</name></member>
      <member refid="classvrv_1_1_bounding_box_1a8cc083afb0d6f3a68d60fae9569645b8" prot="public" virt="virtual"><scope>vrv::BoundingBox</scope><name>UpdateContentBBoxX</name></member>
      <member refid="classvrv_1_1_bounding_box_1af90ec4f1a3393d9c89473f5a2b146b5b" prot="public" virt="virtual"><scope>vrv::BoundingBox</scope><name>UpdateContentBBoxY</name></member>
      <member refid="classvrv_1_1_bounding_box_1a5b5db30b70a0c954d37ae58e523dbead" prot="public" virt="virtual"><scope>vrv::BoundingBox</scope><name>UpdateSelfBBoxX</name></member>
      <member refid="classvrv_1_1_bounding_box_1a029f007d1150f88d906b318b17ecdccc" prot="public" virt="virtual"><scope>vrv::BoundingBox</scope><name>UpdateSelfBBoxY</name></member>
      <member refid="classvrv_1_1_bounding_box_1aeff55f50ac7cae031dfa289d422b77c0" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>VerticalBottomOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1acdb36f4007fc88d79a81eed3b440c536" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>VerticalContentOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1ab9bbe1447c1e512c9154825086f34aef" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>VerticalSelfOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1aa4dda490e649a5c4817ef99853e0a3da" prot="public" virt="non-virtual"><scope>vrv::BoundingBox</scope><name>VerticalTopOverlap</name></member>
      <member refid="classvrv_1_1_bounding_box_1a9f87f4407c2c8d88ab5e4eacfe1ac1f0" prot="public" virt="virtual"><scope>vrv::BoundingBox</scope><name>~BoundingBox</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
